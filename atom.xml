<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>MLEAutoMaton&#39;s Blog</title>
  
  <subtitle>Welcome to MLE&#39;s World</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.mle-world.cn/"/>
  <updated>2019-05-20T09:36:15.464Z</updated>
  <id>https://blog.mle-world.cn/</id>
  
  <author>
    <name>MLEAutoMaton</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>[PA2014]Muzeum</title>
    <link href="https://blog.mle-world.cn/pa2014-muzeum/"/>
    <id>https://blog.mle-world.cn/pa2014-muzeum/</id>
    <published>2019-05-20T09:32:26.000Z</published>
    <updated>2019-05-20T09:36:15.464Z</updated>
    
    <content type="html"><![CDATA[<h2 id="传送门"><a href="#传送门" class="headerlink" title="传送门"></a>传送门</h2><p><a href="https://lydsy.com/JudgeOnline/problem.php?id=3716" target="_blank" rel="noopener">BZOJ</a></p><a id="more"></a><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>显然这是一个最大权闭合子图的问题,所以你把图建出来跑网络流就是$50pts$.<br>接着你旋转坐标系然后把这个转换成为一个贪心替换网络流的问题,然后就是一个$set$的事了.</p><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">/*</span></span><br><span class="line"><span class="hljs-comment">  mail: mleautomaton@foxmail.com</span></span><br><span class="line"><span class="hljs-comment">  author: MLEAutoMaton</span></span><br><span class="line"><span class="hljs-comment">  This Code is made by MLEAutoMaton</span></span><br><span class="line"><span class="hljs-comment">*/</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;</span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> re register</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> file(a) freopen(a<span class="hljs-meta-string">".in"</span>,<span class="hljs-meta-string">"r"</span>,stdin);freopen(a<span class="hljs-meta-string">".out"</span>,<span class="hljs-meta-string">"w"</span>,stdout)</span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">inline</span> <span class="hljs-keyword">int</span> <span class="hljs-title">gi</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line"><span class="hljs-keyword">int</span> f=<span class="hljs-number">1</span>,sum=<span class="hljs-number">0</span>;<span class="hljs-keyword">char</span> ch=getchar();</span><br><span class="line"><span class="hljs-keyword">while</span>(ch&gt;<span class="hljs-string">'9'</span> || ch&lt;<span class="hljs-string">'0'</span>)&#123;<span class="hljs-keyword">if</span>(ch==<span class="hljs-string">'-'</span>)f=<span class="hljs-number">-1</span>;ch=getchar();&#125;</span><br><span class="line"><span class="hljs-keyword">while</span>(ch&gt;=<span class="hljs-string">'0'</span> &amp;&amp; ch&lt;=<span class="hljs-string">'9'</span>)&#123;sum=(sum&lt;&lt;<span class="hljs-number">3</span>)+(sum&lt;&lt;<span class="hljs-number">1</span>)+ch-<span class="hljs-string">'0'</span>;ch=getchar();&#125;</span><br><span class="line"><span class="hljs-keyword">return</span> f*sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> N=<span class="hljs-number">5010</span>,Inf=<span class="hljs-number">1e9</span>+<span class="hljs-number">10</span>;</span><br><span class="line"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">thing</span></span></span><br><span class="line"><span class="hljs-class">&#123;</span></span><br><span class="line"><span class="hljs-keyword">int</span> x,y,v;</span><br><span class="line">&#125;p[N],q[N];</span><br><span class="line"><span class="hljs-keyword">int</span> n,m,w,h,front[N],cnt,s,t,dep[N];</span><br><span class="line"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">node</span></span></span><br><span class="line"><span class="hljs-class">&#123;</span></span><br><span class="line"><span class="hljs-keyword">int</span> to,nxt,w;</span><br><span class="line">&#125;e[<span class="hljs-number">6000010</span>];</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">Add</span><span class="hljs-params">(<span class="hljs-keyword">int</span> u,<span class="hljs-keyword">int</span> v,<span class="hljs-keyword">int</span> w)</span></span>&#123;e[cnt]=(node)&#123;v,front[u],w&#125;;front[u]=cnt++;e[cnt]=(node)&#123;u,front[v],<span class="hljs-number">0</span>&#125;;front[v]=cnt++;&#125;</span><br><span class="line"><span class="hljs-built_in">queue</span>&lt;<span class="hljs-keyword">int</span>&gt;Q;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">bfs</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line">Q.push(s);<span class="hljs-built_in">memset</span>(dep,<span class="hljs-number">0</span>,<span class="hljs-keyword">sizeof</span>(dep));dep[s]=<span class="hljs-number">1</span>;</span><br><span class="line"><span class="hljs-keyword">while</span>(!Q.empty())</span><br><span class="line">&#123;</span><br><span class="line"><span class="hljs-keyword">int</span> u=Q.front();Q.pop();</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=front[u];i!=<span class="hljs-number">-1</span>;i=e[i].nxt)</span><br><span class="line">&#123;</span><br><span class="line"><span class="hljs-keyword">int</span> v=e[i].to;</span><br><span class="line"><span class="hljs-keyword">if</span>(!dep[v] &amp;&amp; e[i].w)</span><br><span class="line">&#123;</span><br><span class="line">dep[v]=dep[u]+<span class="hljs-number">1</span>;</span><br><span class="line">Q.push(v);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">return</span> dep[t];</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">dfs</span><span class="hljs-params">(<span class="hljs-keyword">int</span> u,<span class="hljs-keyword">int</span> flow)</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line"><span class="hljs-keyword">if</span>(u==t || !flow)<span class="hljs-keyword">return</span> flow;</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=front[u];i!=<span class="hljs-number">-1</span>;i=e[i].nxt)</span><br><span class="line">&#123;</span><br><span class="line"><span class="hljs-keyword">int</span> v=e[i].to;</span><br><span class="line"><span class="hljs-keyword">if</span>(dep[v]==dep[u]+<span class="hljs-number">1</span> &amp;&amp; e[i].w)</span><br><span class="line">&#123;</span><br><span class="line"><span class="hljs-keyword">int</span> di=dfs(v,min(flow,e[i].w));</span><br><span class="line"><span class="hljs-keyword">if</span>(di)</span><br><span class="line">&#123;</span><br><span class="line">e[i].w-=di;e[i^<span class="hljs-number">1</span>].w+=di;</span><br><span class="line"><span class="hljs-keyword">return</span> di;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">else</span> dep[v]=<span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">Dinic</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line"><span class="hljs-keyword">int</span> flow=<span class="hljs-number">0</span>;</span><br><span class="line"><span class="hljs-keyword">while</span>(bfs())</span><br><span class="line"><span class="hljs-keyword">while</span>(<span class="hljs-keyword">int</span> d=dfs(s,Inf))</span><br><span class="line">flow+=d;</span><br><span class="line"><span class="hljs-keyword">return</span> flow;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">bein</span><span class="hljs-params">(<span class="hljs-keyword">int</span> i,<span class="hljs-keyword">int</span> j)</span></span>&#123;<span class="hljs-keyword">return</span> <span class="hljs-number">1l</span>l*<span class="hljs-built_in">abs</span>(p[j].x-q[i].x)*h&lt;=<span class="hljs-number">1l</span>l*w*<span class="hljs-built_in">abs</span>(p[j].y-q[i].y);&#125;</span><br><span class="line"><span class="hljs-keyword">namespace</span> Accepted</span><br><span class="line">&#123;</span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> int ll</span></span><br><span class="line"><span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> N=<span class="hljs-number">500010</span>;</span><br><span class="line"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">node</span></span></span><br><span class="line"><span class="hljs-class">&#123;</span></span><br><span class="line"><span class="hljs-keyword">int</span> x,y,v;</span><br><span class="line"><span class="hljs-keyword">bool</span> <span class="hljs-keyword">operator</span>&lt;(<span class="hljs-keyword">const</span> node b)<span class="hljs-keyword">const</span>&#123;<span class="hljs-keyword">return</span> x&lt;b.x;&#125;</span><br><span class="line">&#125;p[N],q[N];</span><br><span class="line"><span class="hljs-keyword">typedef</span> pair&lt;<span class="hljs-keyword">int</span>,<span class="hljs-keyword">int</span>&gt; pii;</span><br><span class="line"><span class="hljs-built_in">set</span>&lt;pii&gt;se;</span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> mp make_pair</span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line">n=gi();m=gi();w=gi();h=gi();<span class="hljs-keyword">int</span> ans=<span class="hljs-number">0</span>;</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<span class="hljs-keyword">int</span> x=<span class="hljs-number">1l</span>l*gi()*h,y=<span class="hljs-number">1l</span>l*gi()*w,v=gi();p[i].x=x+y;p[i].y=x-y;p[i].v=v;ans+=v;&#125;</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=m;i++)&#123;<span class="hljs-keyword">int</span> x=<span class="hljs-number">1l</span>l*gi()*h,y=<span class="hljs-number">1l</span>l*gi()*w,v=gi();q[i].x=x+y;q[i].y=x-y;q[i].v=v;&#125;</span><br><span class="line">sort(p+<span class="hljs-number">1</span>,p+n+<span class="hljs-number">1</span>);sort(q+<span class="hljs-number">1</span>,q+m+<span class="hljs-number">1</span>);</span><br><span class="line"><span class="hljs-keyword">int</span> pos=<span class="hljs-number">1</span>;</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=m;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="hljs-keyword">while</span>(pos&lt;=n &amp;&amp; p[pos].x&lt;=q[i].x)se.insert(mp(p[pos].y,p[pos].v)),pos++;</span><br><span class="line"><span class="hljs-built_in">set</span>&lt;pii&gt;::iterator it=se.lower_bound(mp(q[i].y,<span class="hljs-number">0</span>));<span class="hljs-keyword">int</span> flow=q[i].v;</span><br><span class="line"><span class="hljs-keyword">while</span>(flow &amp;&amp; it!=se.end())</span><br><span class="line">&#123;</span><br><span class="line">pii now=*it;se.erase(it);</span><br><span class="line"><span class="hljs-keyword">int</span> d=min(flow,now.second);</span><br><span class="line">now.second-=d;ans-=d;flow-=d;</span><br><span class="line"><span class="hljs-keyword">if</span>(now.second)se.insert(now);</span><br><span class="line"><span class="hljs-keyword">else</span> it=se.lower_bound(mp(q[i].y,<span class="hljs-number">0</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-built_in">printf</span>(<span class="hljs-string">"%lld\n"</span>,ans);</span><br><span class="line"><span class="hljs-keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">signed</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;<span class="hljs-comment">/*</span></span><br><span class="line"><span class="hljs-comment">ll ans=0;</span></span><br><span class="line"><span class="hljs-comment">n=gi();m=gi();memset(front,-1,sizeof(front));s=0;t=n+m+1;</span></span><br><span class="line"><span class="hljs-comment">w=gi();h=gi();</span></span><br><span class="line"><span class="hljs-comment">for(int i=1;i&lt;=n;i++)p[i].x=gi(),p[i].y=gi(),p[i].v=gi(),Add(s,i,p[i].v),ans+=p[i].v;</span></span><br><span class="line"><span class="hljs-comment">for(int i=1;i&lt;=m;i++)q[i].x=gi(),q[i].y=gi(),q[i].v=gi(),Add(i+n,t,q[i].v);</span></span><br><span class="line"><span class="hljs-comment">for(int i=1;i&lt;=m;i++)</span></span><br><span class="line"><span class="hljs-comment">for(int j=1;j&lt;=n;j++)</span></span><br><span class="line"><span class="hljs-comment">if(q[i].y&gt;=p[j].y &amp;&amp; bein(i,j))Add(j,i+n,Inf);</span></span><br><span class="line"><span class="hljs-comment">printf("%lld\n",ans-Dinic());*/</span></span><br><span class="line">Accepted::main();</span><br><span class="line"><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;传送门&quot;&gt;&lt;a href=&quot;#传送门&quot; class=&quot;headerlink&quot; title=&quot;传送门&quot;&gt;&lt;/a&gt;传送门&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://lydsy.com/JudgeOnline/problem.php?id=3716&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;BZOJ&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Solution" scheme="https://blog.mle-world.cn/categories/Solution/"/>
    
    
      <category term="贪心" scheme="https://blog.mle-world.cn/tags/%E8%B4%AA%E5%BF%83/"/>
    
      <category term="网络流" scheme="https://blog.mle-world.cn/tags/%E7%BD%91%E7%BB%9C%E6%B5%81/"/>
    
  </entry>
  
  <entry>
    <title>[TJOI2015]概率论</title>
    <link href="https://blog.mle-world.cn/tjoi2015-%E6%A6%82%E7%8E%87%E8%AE%BA/"/>
    <id>https://blog.mle-world.cn/tjoi2015-概率论/</id>
    <published>2019-05-20T09:18:11.000Z</published>
    <updated>2019-05-20T09:37:17.468Z</updated>
    
    <content type="html"><![CDATA[<h2 id="传送门"><a href="#传送门" class="headerlink" title="传送门"></a>传送门</h2><p><a href="https://loj.ac/problem/2105" target="_blank" rel="noopener">Loj</a><br><a href="https://lydsy.com/JudgeOnline/problem.php?id=4001" target="_blank" rel="noopener">BZOJ</a></p><a id="more"></a><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>我们考虑一下设$f(x)$表示当$n$为$x$时构造二叉树的方案数,$g(x)$表示当$n$为$x$时构造二叉树的叶子节点数的总和.<br>仔细看一下这个句子:<code>当n为x时构造二叉树的方案数</code>.$Catalan$数无疑了,接着就是解决$g(x)$是什么.<br>现在不是有$g(x)$个叶子对吧,那么我们把这些叶子分别删掉,那么就是$g(x)$个$n-1$的节点的树.<br>然后算上贡献就是$f(x-1)*x$对吧.<br>接着你可以写出一个式子:</p><p>$Ans=\frac{(2n-2)!n!(n+1)!}{(2n)!(n-1)!n!}=\frac{n(n+1)}{2*(2n-1)}$</p><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">/*</span></span><br><span class="line"><span class="hljs-comment">  mail: mleautomaton@foxmail.com</span></span><br><span class="line"><span class="hljs-comment">  author: MLEAutoMaton</span></span><br><span class="line"><span class="hljs-comment">  This Code is made by MLEAutoMaton</span></span><br><span class="line"><span class="hljs-comment">*/</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;</span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> re register</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> file(a) freopen(a<span class="hljs-meta-string">".in"</span>,<span class="hljs-meta-string">"r"</span>,stdin);freopen(a<span class="hljs-meta-string">".out"</span>,<span class="hljs-meta-string">"w"</span>,stdout)</span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">inline</span> ll <span class="hljs-title">gl</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line">ll f=<span class="hljs-number">1</span>,sum=<span class="hljs-number">0</span>;<span class="hljs-keyword">char</span> ch=getchar();</span><br><span class="line"><span class="hljs-keyword">while</span>(ch&gt;<span class="hljs-string">'9'</span> || ch&lt;<span class="hljs-string">'0'</span>)&#123;<span class="hljs-keyword">if</span>(ch==<span class="hljs-string">'-'</span>)f=<span class="hljs-number">-1</span>;ch=getchar();&#125;</span><br><span class="line"><span class="hljs-keyword">while</span>(ch&gt;=<span class="hljs-string">'0'</span> &amp;&amp; ch&lt;=<span class="hljs-string">'9'</span>)&#123;sum=(sum&lt;&lt;<span class="hljs-number">3</span>)+(sum&lt;&lt;<span class="hljs-number">1</span>)+ch-<span class="hljs-string">'0'</span>;ch=getchar();&#125;</span><br><span class="line"><span class="hljs-keyword">return</span> f*sum;</span><br><span class="line">&#125;</span><br><span class="line">ll n;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line">n=gl();</span><br><span class="line"><span class="hljs-built_in">printf</span>(<span class="hljs-string">"%.9lf\n"</span>,n*(n+<span class="hljs-number">1</span>)*<span class="hljs-number">1.</span>/((<span class="hljs-number">2</span>*n<span class="hljs-number">-1</span>)*<span class="hljs-number">2</span>));</span><br><span class="line"><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;传送门&quot;&gt;&lt;a href=&quot;#传送门&quot; class=&quot;headerlink&quot; title=&quot;传送门&quot;&gt;&lt;/a&gt;传送门&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://loj.ac/problem/2105&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Loj&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://lydsy.com/JudgeOnline/problem.php?id=4001&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;BZOJ&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Solution" scheme="https://blog.mle-world.cn/categories/Solution/"/>
    
    
      <category term="数学" scheme="https://blog.mle-world.cn/tags/%E6%95%B0%E5%AD%A6/"/>
    
      <category term="数列" scheme="https://blog.mle-world.cn/tags/%E6%95%B0%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>[HAOI2008]下落的圆盘</title>
    <link href="https://blog.mle-world.cn/haoi2008-%E4%B8%8B%E8%90%BD%E7%9A%84%E5%9C%86%E7%9B%98/"/>
    <id>https://blog.mle-world.cn/haoi2008-下落的圆盘/</id>
    <published>2019-05-05T14:24:45.000Z</published>
    <updated>2019-05-05T14:25:36.331Z</updated>
    
    <content type="html"><![CDATA[<h2 id="传送门"><a href="#传送门" class="headerlink" title="传送门"></a>传送门</h2><p><a href="https://www.luogu.org/problemnew/show/P2510" target="_blank" rel="noopener">Luogu</a></p><a id="more"></a><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>想一想,我们求一下每一个圆没被后面的覆盖的面积加起来就是答案.<br>每一个求的话可以求后面的后一个圆与它的交集,然后做一个线段覆盖.<br>没了.</p><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">/*</span></span><br><span class="line"><span class="hljs-comment">  mail: mleautomaton@foxmail.com</span></span><br><span class="line"><span class="hljs-comment">  author: MLEAutoMaton</span></span><br><span class="line"><span class="hljs-comment">  This Code is made by MLEAutoMaton</span></span><br><span class="line"><span class="hljs-comment">*/</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;</span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> re register</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> file(a) freopen(a<span class="hljs-meta-string">".in"</span>,<span class="hljs-meta-string">"r"</span>,stdin);freopen(a<span class="hljs-meta-string">".out"</span>,<span class="hljs-meta-string">"w"</span>,stdout)</span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">inline</span> <span class="hljs-keyword">int</span> <span class="hljs-title">gi</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line"><span class="hljs-keyword">int</span> f=<span class="hljs-number">1</span>,sum=<span class="hljs-number">0</span>;<span class="hljs-keyword">char</span> ch=getchar();</span><br><span class="line"><span class="hljs-keyword">while</span>(ch&gt;<span class="hljs-string">'9'</span> || ch&lt;<span class="hljs-string">'0'</span>)&#123;<span class="hljs-keyword">if</span>(ch==<span class="hljs-string">'-'</span>)f=<span class="hljs-number">-1</span>;ch=getchar();&#125;</span><br><span class="line"><span class="hljs-keyword">while</span>(ch&gt;=<span class="hljs-string">'0'</span> &amp;&amp; ch&lt;=<span class="hljs-string">'9'</span>)&#123;sum=(sum&lt;&lt;<span class="hljs-number">3</span>)+(sum&lt;&lt;<span class="hljs-number">1</span>)+ch-<span class="hljs-string">'0'</span>;ch=getchar();&#125;</span><br><span class="line"><span class="hljs-keyword">return</span> f*sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> N=<span class="hljs-number">1010</span>;</span><br><span class="line"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">node</span></span></span><br><span class="line"><span class="hljs-class">&#123;</span></span><br><span class="line"><span class="hljs-keyword">double</span> r,x,y;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">gi</span><span class="hljs-params">()</span></span>&#123;<span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%lf%lf%lf"</span>,&amp;r,&amp;x,&amp;y);&#125;</span><br><span class="line">&#125;p[N];</span><br><span class="line"><span class="hljs-keyword">const</span> <span class="hljs-keyword">double</span> Pi=<span class="hljs-built_in">acos</span>(<span class="hljs-number">-1.0</span>);</span><br><span class="line"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">line</span>&#123;</span><span class="hljs-keyword">double</span> l,r;&#125;q[N&lt;&lt;<span class="hljs-number">2</span>];</span><br><span class="line"><span class="hljs-keyword">int</span> n,tot;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">double</span> <span class="hljs-title">dis</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x,<span class="hljs-keyword">int</span> y)</span></span>&#123;<span class="hljs-keyword">return</span> <span class="hljs-built_in">sqrt</span>((p[x].x-p[y].x)*(p[x].x-p[y].x)+(p[x].y-p[y].y)*(p[x].y-p[y].y));&#125;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">contain</span><span class="hljs-params">(<span class="hljs-keyword">int</span> i,<span class="hljs-keyword">int</span> j)</span></span>&#123;<span class="hljs-keyword">double</span> d=dis(i,j);<span class="hljs-keyword">return</span> p[j].r-p[i].r&gt;=d;&#125;<span class="hljs-comment">//i被j包含</span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">out</span><span class="hljs-params">(<span class="hljs-keyword">int</span> i,<span class="hljs-keyword">int</span> j)</span></span>&#123;<span class="hljs-keyword">double</span> d=dis(i,j);<span class="hljs-keyword">return</span> p[j].r+p[i].r&lt;=d;&#125;<span class="hljs-comment">//外切或外离</span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">cmp</span><span class="hljs-params">(line a,line b)</span></span>&#123;<span class="hljs-keyword">return</span> a.l&lt;b.l;&#125;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">double</span> <span class="hljs-title">solve</span><span class="hljs-params">(<span class="hljs-keyword">int</span> id)</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line">tot=<span class="hljs-number">0</span>;</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=id+<span class="hljs-number">1</span>;i&lt;=n;i++)<span class="hljs-keyword">if</span>(contain(id,i))<span class="hljs-keyword">return</span> <span class="hljs-number">0.0</span>;</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=id+<span class="hljs-number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="hljs-keyword">if</span>(contain(i,id) || out(i,id))<span class="hljs-keyword">continue</span>;</span><br><span class="line"><span class="hljs-keyword">double</span> d=dis(i,id);</span><br><span class="line"><span class="hljs-keyword">double</span> t=<span class="hljs-built_in">acos</span>((d*d+p[id].r*p[id].r-p[i].r*p[i].r)*<span class="hljs-number">1.</span>/(<span class="hljs-number">2.0</span>*p[id].r*d));</span><br><span class="line"><span class="hljs-keyword">double</span> jz=<span class="hljs-built_in">atan2</span>(p[i].y-p[id].y,p[i].x-p[id].x);</span><br><span class="line">q[++tot]=(line)&#123;jz-t,jz+t&#125;;</span><br><span class="line"><span class="hljs-keyword">if</span>(q[tot].l&lt;<span class="hljs-number">0</span>)q[tot].l+=<span class="hljs-number">2</span>*Pi;<span class="hljs-keyword">if</span>(q[tot].r&lt;<span class="hljs-number">0</span>)q[tot].r+=<span class="hljs-number">2</span>*Pi;</span><br><span class="line"><span class="hljs-keyword">if</span>(q[tot].l&gt;q[tot].r)&#123;<span class="hljs-keyword">double</span> R=q[tot].r;q[tot].r=<span class="hljs-number">2</span>*Pi;q[++tot]=(line)&#123;<span class="hljs-number">0</span>,R&#125;;&#125;</span><br><span class="line">&#125;</span><br><span class="line">sort(q+<span class="hljs-number">1</span>,q+tot+<span class="hljs-number">1</span>,cmp);<span class="hljs-comment">//线段覆盖</span></span><br><span class="line"><span class="hljs-keyword">double</span> ret=<span class="hljs-number">0</span>,now=<span class="hljs-number">0</span>;</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=tot;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="hljs-keyword">if</span>(q[i].l&gt;now)&#123;ret+=q[i].l-now;now=q[i].r;&#125;</span><br><span class="line"><span class="hljs-keyword">else</span> now=max(now,q[i].r);</span><br><span class="line">&#125;</span><br><span class="line">ret+=<span class="hljs-number">2</span>*Pi-now;</span><br><span class="line"><span class="hljs-keyword">return</span> ret*p[id].r;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">ifndef</span> ONLINE_JUDGE</span></span><br><span class="line">freopen(<span class="hljs-string">"circle.in"</span>,<span class="hljs-string">"r"</span>,<span class="hljs-built_in">stdin</span>);</span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span></span><br><span class="line">n=gi();</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)p[i].gi();</span><br><span class="line"><span class="hljs-keyword">double</span> ans=<span class="hljs-number">0</span>;</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)ans+=solve(i);</span><br><span class="line"><span class="hljs-built_in">printf</span>(<span class="hljs-string">"%.3lf\n"</span>,ans);</span><br><span class="line"><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;传送门&quot;&gt;&lt;a href=&quot;#传送门&quot; class=&quot;headerlink&quot; title=&quot;传送门&quot;&gt;&lt;/a&gt;传送门&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://www.luogu.org/problemnew/show/P2510&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Luogu&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Solution" scheme="https://blog.mle-world.cn/categories/Solution/"/>
    
    
      <category term="贪心" scheme="https://blog.mle-world.cn/tags/%E8%B4%AA%E5%BF%83/"/>
    
      <category term="计算几何" scheme="https://blog.mle-world.cn/tags/%E8%AE%A1%E7%AE%97%E5%87%A0%E4%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>[TJOI2019]大中锋的游乐场</title>
    <link href="https://blog.mle-world.cn/tjoi2019-%E5%A4%A7%E4%B8%AD%E9%94%8B%E7%9A%84%E6%B8%B8%E4%B9%90%E5%9C%BA/"/>
    <id>https://blog.mle-world.cn/tjoi2019-大中锋的游乐场/</id>
    <published>2019-05-05T08:52:51.000Z</published>
    <updated>2019-05-05T09:02:02.220Z</updated>
    
    <content type="html"><![CDATA[<h2 id="传送门"><a href="#传送门" class="headerlink" title="传送门"></a>传送门</h2><p><a href="https://loj.ac/problem/3107" target="_blank" rel="noopener">Loj</a></p><a id="more"></a><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>我们设$dp_{i,j,k}$表示当前到了$i$这个节点,两个的差为$j$,大一点的是$k$,然后SPFA转移就好了.<br>其实也可以直接设$dp_{i,j}$,然后$j \in [-k,k]$.没了.</p><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">/*</span></span><br><span class="line"><span class="hljs-comment">  mail: mleautomaton@foxmail.com</span></span><br><span class="line"><span class="hljs-comment">  author: MLEAutoMaton</span></span><br><span class="line"><span class="hljs-comment">  This Code is made by MLEAutoMaton</span></span><br><span class="line"><span class="hljs-comment">*/</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;</span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> re register</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> file(a) freopen(a<span class="hljs-meta-string">".in"</span>,<span class="hljs-meta-string">"r"</span>,stdin);freopen(a<span class="hljs-meta-string">".out"</span>,<span class="hljs-meta-string">"w"</span>,stdout)</span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">inline</span> <span class="hljs-keyword">int</span> <span class="hljs-title">gi</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line"><span class="hljs-keyword">int</span> f=<span class="hljs-number">1</span>,sum=<span class="hljs-number">0</span>;<span class="hljs-keyword">char</span> ch=getchar();</span><br><span class="line"><span class="hljs-keyword">while</span>(ch&gt;<span class="hljs-string">'9'</span> || ch&lt;<span class="hljs-string">'0'</span>)&#123;<span class="hljs-keyword">if</span>(ch==<span class="hljs-string">'-'</span>)f=<span class="hljs-number">-1</span>;ch=getchar();&#125;</span><br><span class="line"><span class="hljs-keyword">while</span>(ch&gt;=<span class="hljs-string">'0'</span> &amp;&amp; ch&lt;=<span class="hljs-string">'9'</span>)&#123;sum=(sum&lt;&lt;<span class="hljs-number">3</span>)+(sum&lt;&lt;<span class="hljs-number">1</span>)+ch-<span class="hljs-string">'0'</span>;ch=getchar();&#125;</span><br><span class="line"><span class="hljs-keyword">return</span> f*sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> N=<span class="hljs-number">10010</span>,M=<span class="hljs-number">100010</span>;</span><br><span class="line"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">node</span></span></span><br><span class="line"><span class="hljs-class">&#123;</span></span><br><span class="line"><span class="hljs-keyword">int</span> to,nxt,w;</span><br><span class="line">&#125;e[M&lt;&lt;<span class="hljs-number">1</span>];</span><br><span class="line"><span class="hljs-keyword">int</span> front[N],cnt,dp[N][<span class="hljs-number">20</span>][<span class="hljs-number">2</span>],bl[N],n,m,k,s,t,flag;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">Add</span><span class="hljs-params">(<span class="hljs-keyword">int</span> u,<span class="hljs-keyword">int</span> v,<span class="hljs-keyword">int</span> w)</span></span>&#123;e[++cnt]=(node)&#123;v,front[u],w&#125;;front[u]=cnt;&#125;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">clear</span><span class="hljs-params">()</span></span>&#123;<span class="hljs-built_in">memset</span>(front,<span class="hljs-number">0</span>,<span class="hljs-keyword">sizeof</span>(front));cnt=<span class="hljs-number">0</span>;flag=<span class="hljs-number">0</span>;&#125;</span><br><span class="line"><span class="hljs-keyword">typedef</span> pair&lt;<span class="hljs-keyword">int</span>,<span class="hljs-keyword">int</span>&gt; pii;</span><br><span class="line"><span class="hljs-keyword">typedef</span> pair&lt;<span class="hljs-keyword">int</span>,pii&gt; piii;</span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> mp make_pair</span></span><br><span class="line"><span class="hljs-built_in">queue</span>&lt;piii&gt;Q;</span><br><span class="line"><span class="hljs-keyword">int</span> vis[N][<span class="hljs-number">20</span>][<span class="hljs-number">2</span>];</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">spfa</span><span class="hljs-params">(<span class="hljs-keyword">int</span> s)</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line"><span class="hljs-built_in">memset</span>(dp,<span class="hljs-number">127</span>/<span class="hljs-number">2</span>,<span class="hljs-keyword">sizeof</span>(dp));</span><br><span class="line">dp[s][<span class="hljs-number">1</span>][bl[s]]=<span class="hljs-number">0</span>;</span><br><span class="line">Q.push(mp(s,mp(<span class="hljs-number">1</span>,bl[s])));</span><br><span class="line"><span class="hljs-keyword">while</span>(!Q.empty())</span><br><span class="line">&#123;</span><br><span class="line">piii now=Q.front();Q.pop();<span class="hljs-keyword">int</span> u=now.first;vis[u][now.second.first][now.second.second]=<span class="hljs-number">0</span>;</span><br><span class="line"><span class="hljs-keyword">if</span>(u==t)flag=<span class="hljs-number">1</span>;</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=front[u];i;i=e[i].nxt)</span><br><span class="line">&#123;</span><br><span class="line"><span class="hljs-keyword">int</span> v=e[i].to,cha,Max;</span><br><span class="line"><span class="hljs-keyword">if</span>(!now.second.first)cha=<span class="hljs-number">1</span>,Max=bl[v];</span><br><span class="line"><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(now.second.second==bl[v])cha=now.second.first+<span class="hljs-number">1</span>,Max=now.second.second;</span><br><span class="line"><span class="hljs-keyword">else</span> cha=now.second.first<span class="hljs-number">-1</span>,Max=now.second.second;</span><br><span class="line"><span class="hljs-keyword">if</span>(cha&gt;k)<span class="hljs-keyword">continue</span>;</span><br><span class="line"><span class="hljs-keyword">if</span>(dp[v][cha][Max]&gt;dp[u][now.second.first][now.second.second]+e[i].w)</span><br><span class="line">&#123;</span><br><span class="line">dp[v][cha][Max]=dp[u][now.second.first][now.second.second]+e[i].w;</span><br><span class="line"><span class="hljs-keyword">if</span>(!vis[v][cha][Max])&#123;vis[v][cha][Max]=<span class="hljs-number">1</span>;Q.push(mp(v,mp(cha,Max)));&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">if</span>(!cha)</span><br><span class="line">&#123;</span><br><span class="line">Max^=<span class="hljs-number">1</span>;</span><br><span class="line"><span class="hljs-keyword">if</span>(dp[v][cha][Max]&gt;dp[u][now.second.first][now.second.second]+e[i].w)</span><br><span class="line">&#123;</span><br><span class="line">dp[v][cha][Max]=dp[u][now.second.first][now.second.second]+e[i].w;</span><br><span class="line"><span class="hljs-keyword">if</span>(!vis[v][cha][Max])&#123;vis[v][cha][Max]=<span class="hljs-number">1</span>;Q.push(mp(v,mp(cha,Max)));&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">ifndef</span> ONLINE_JUDGE</span></span><br><span class="line">freopen(<span class="hljs-string">"park.in"</span>,<span class="hljs-string">"r"</span>,<span class="hljs-built_in">stdin</span>);</span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span></span><br><span class="line"><span class="hljs-keyword">int</span> T=gi();</span><br><span class="line"><span class="hljs-keyword">while</span>(T--)</span><br><span class="line">&#123;</span><br><span class="line">clear();</span><br><span class="line">n=gi();m=gi();k=gi();</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)bl[i]=gi()<span class="hljs-number">-1</span>;</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=m;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="hljs-keyword">int</span> u=gi(),v=gi(),w=gi();</span><br><span class="line">Add(u,v,w);Add(v,u,w);</span><br><span class="line">&#125;</span><br><span class="line">s=gi(),t=gi();</span><br><span class="line">spfa(s);<span class="hljs-keyword">int</span> ans=<span class="hljs-number">1e9</span>+<span class="hljs-number">10</span>;</span><br><span class="line"><span class="hljs-keyword">if</span>(!flag)&#123;<span class="hljs-built_in">puts</span>(<span class="hljs-string">"-1"</span>);<span class="hljs-keyword">continue</span>;&#125;</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;=k;i++)</span><br><span class="line">ans=min(ans,min(dp[t][i][<span class="hljs-number">0</span>],dp[t][i][<span class="hljs-number">1</span>]));</span><br><span class="line"><span class="hljs-built_in">printf</span>(<span class="hljs-string">"%d\n"</span>,ans);</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;传送门&quot;&gt;&lt;a href=&quot;#传送门&quot; class=&quot;headerlink&quot; title=&quot;传送门&quot;&gt;&lt;/a&gt;传送门&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://loj.ac/problem/3107&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Loj&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Solution" scheme="https://blog.mle-world.cn/categories/Solution/"/>
    
    
      <category term="dp" scheme="https://blog.mle-world.cn/tags/dp/"/>
    
      <category term="SPFA" scheme="https://blog.mle-world.cn/tags/SPFA/"/>
    
  </entry>
  
  <entry>
    <title>[SNOI2019]通信</title>
    <link href="https://blog.mle-world.cn/snoi2019-%E9%80%9A%E4%BF%A1/"/>
    <id>https://blog.mle-world.cn/snoi2019-通信/</id>
    <published>2019-05-05T08:49:36.000Z</published>
    <updated>2019-05-05T08:49:55.446Z</updated>
    
    <content type="html"><![CDATA[<h2 id="传送门"><a href="#传送门" class="headerlink" title="传送门"></a>传送门</h2><p><a href="https://loj.ac/problem/3097" target="_blank" rel="noopener">Loj</a></p><a id="more"></a><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>考虑拆点,然后如果连向指挥中心就是向自己的另一个定点连边.<br>连完之后跑一个$KM$就好了.</p><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;</span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> re register</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">inline</span> <span class="hljs-keyword">int</span> <span class="hljs-title">gi</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line"><span class="hljs-keyword">int</span> f=<span class="hljs-number">1</span>,sum=<span class="hljs-number">0</span>;<span class="hljs-keyword">char</span> ch=getchar();</span><br><span class="line"><span class="hljs-keyword">while</span>(ch&gt;<span class="hljs-string">'9'</span> || ch&lt;<span class="hljs-string">'0'</span>)&#123;<span class="hljs-keyword">if</span>(ch==<span class="hljs-string">'-'</span>)f=<span class="hljs-number">-1</span>;ch=getchar();&#125;</span><br><span class="line"><span class="hljs-keyword">while</span>(ch&gt;=<span class="hljs-string">'0'</span> &amp;&amp; ch&lt;=<span class="hljs-string">'9'</span>)&#123;sum=(sum&lt;&lt;<span class="hljs-number">3</span>)+(sum&lt;&lt;<span class="hljs-number">1</span>)+ch-<span class="hljs-string">'0'</span>;ch=getchar();&#125;</span><br><span class="line"><span class="hljs-keyword">return</span> f*sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> N=<span class="hljs-number">2001</span>;</span><br><span class="line"><span class="hljs-keyword">int</span> n,W,a[N],visx[N],visy[N],bl[N],bly[N];</span><br><span class="line">ll slack[N],lx[N],w[N][N],ly[N];</span><br><span class="line"><span class="hljs-built_in">vector</span>&lt;<span class="hljs-keyword">int</span>&gt;G[N];</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">inline</span> <span class="hljs-keyword">bool</span> <span class="hljs-title">dfs</span><span class="hljs-params">(re <span class="hljs-keyword">int</span> x)</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line">visx[x]=<span class="hljs-number">1</span>;</span><br><span class="line"><span class="hljs-keyword">for</span>(re <span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;G[x].size();i++)</span><br><span class="line">&#123;</span><br><span class="line">re <span class="hljs-keyword">int</span> y=G[x][i];</span><br><span class="line"><span class="hljs-keyword">if</span>(!visy[y])</span><br><span class="line">&#123;</span><br><span class="line">ll t=lx[x]+ly[y]-w[x][y];</span><br><span class="line"><span class="hljs-keyword">if</span>(!t)</span><br><span class="line">&#123;</span><br><span class="line">visy[y]=<span class="hljs-number">1</span>;</span><br><span class="line"><span class="hljs-keyword">if</span>(!bl[y] || dfs(bl[y]))</span><br><span class="line">&#123;</span><br><span class="line">bl[y]=x;bly[x]=y;</span><br><span class="line"><span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(t&gt;<span class="hljs-number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">slack[y]=min(slack[y],t);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">inline</span> ll <span class="hljs-title">KM</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line"><span class="hljs-built_in">memset</span>(ly,<span class="hljs-number">0</span>,<span class="hljs-keyword">sizeof</span>(ly));</span><br><span class="line">ll ans=<span class="hljs-number">0</span>;</span><br><span class="line"><span class="hljs-keyword">for</span>(re <span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="hljs-built_in">memset</span>(slack,<span class="hljs-number">127</span>,<span class="hljs-keyword">sizeof</span>(slack));</span><br><span class="line"><span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="hljs-keyword">for</span>(re <span class="hljs-keyword">int</span> j=<span class="hljs-number">1</span>;j&lt;=n;j++)visx[j]=<span class="hljs-number">0</span>;</span><br><span class="line"><span class="hljs-keyword">for</span>(re <span class="hljs-keyword">int</span> j=<span class="hljs-number">1</span>;j&lt;=n&lt;&lt;<span class="hljs-number">1</span>;j++)visy[j]=<span class="hljs-number">0</span>;</span><br><span class="line"><span class="hljs-keyword">if</span>(dfs(i))<span class="hljs-keyword">break</span>;</span><br><span class="line">ll Minz=<span class="hljs-number">1e18</span>;</span><br><span class="line"><span class="hljs-keyword">for</span>(re <span class="hljs-keyword">int</span> j=<span class="hljs-number">1</span>;j&lt;=n&lt;&lt;<span class="hljs-number">1</span>;j++)</span><br><span class="line"><span class="hljs-keyword">if</span>(!visy[j])Minz=min(Minz,slack[j]);</span><br><span class="line"><span class="hljs-keyword">for</span>(re <span class="hljs-keyword">int</span> j=<span class="hljs-number">1</span>;j&lt;=n;j++)<span class="hljs-keyword">if</span>(visx[j])lx[j]-=Minz;</span><br><span class="line"><span class="hljs-keyword">for</span>(re <span class="hljs-keyword">int</span> j=<span class="hljs-number">1</span>;j&lt;=n&lt;&lt;<span class="hljs-number">1</span>;j++)<span class="hljs-keyword">if</span>(visy[j])ly[j]+=Minz;<span class="hljs-keyword">else</span> slack[j]-=Minz;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">for</span>(re <span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)</span><br><span class="line">ans+=w[i][bly[i]];</span><br><span class="line"><span class="hljs-keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line">n=gi();W=gi();</span><br><span class="line"><span class="hljs-keyword">for</span>(re <span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line">a[i]=gi();</span><br><span class="line">G[i].push_back(i+n);</span><br><span class="line">lx[i]=w[i][i+n]=-W;</span><br><span class="line"><span class="hljs-keyword">for</span>(re <span class="hljs-keyword">int</span> j=<span class="hljs-number">1</span>;j&lt;i;j++)</span><br><span class="line">&#123;</span><br><span class="line">w[i][j]=-<span class="hljs-built_in">abs</span>(a[i]-a[j]);</span><br><span class="line">G[i].push_back(j);</span><br><span class="line">lx[i]=max(lx[i],w[i][j]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-built_in">printf</span>(<span class="hljs-string">"%lld\n"</span>,-KM());</span><br><span class="line"><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;传送门&quot;&gt;&lt;a href=&quot;#传送门&quot; class=&quot;headerlink&quot; title=&quot;传送门&quot;&gt;&lt;/a&gt;传送门&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://loj.ac/problem/3097&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Loj&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Solution" scheme="https://blog.mle-world.cn/categories/Solution/"/>
    
    
      <category term="网络流" scheme="https://blog.mle-world.cn/tags/%E7%BD%91%E7%BB%9C%E6%B5%81/"/>
    
      <category term="KM" scheme="https://blog.mle-world.cn/tags/KM/"/>
    
  </entry>
  
  <entry>
    <title>[TJOI2019]甲苯先生的字符串</title>
    <link href="https://blog.mle-world.cn/tjoi2019-%E7%94%B2%E8%8B%AF%E5%85%88%E7%94%9F%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    <id>https://blog.mle-world.cn/tjoi2019-甲苯先生的字符串/</id>
    <published>2019-05-05T08:49:04.000Z</published>
    <updated>2019-05-05T08:49:28.070Z</updated>
    
    <content type="html"><![CDATA[<h2 id="传送门"><a href="#传送门" class="headerlink" title="传送门"></a>传送门</h2><p><a href="https://loj.ac/problem/3104" target="_blank" rel="noopener">Loj</a></p><a id="more"></a><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>简单题.<br>设$dp_{i,j}$表示当前考虑到了第$i$位,当前这一位选$j$+<code>&#39;a&#39;</code>这个元素.<br>转移就随便写了,然后这个可以矩阵快速幂.<br><strong>P.S:唯一需要注意的就是这道题目相邻的定义为$i$和$i+1$,$i$-&gt;$i-1$不算!</strong></p><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;</span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> re register</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">inline</span> <span class="hljs-keyword">int</span> <span class="hljs-title">gi</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line">    <span class="hljs-keyword">int</span> f=<span class="hljs-number">1</span>,sum=<span class="hljs-number">0</span>;<span class="hljs-keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="hljs-keyword">while</span>(ch&gt;<span class="hljs-string">'9'</span> || ch&lt;<span class="hljs-string">'0'</span>)&#123;<span class="hljs-keyword">if</span>(ch==<span class="hljs-string">'-'</span>)f=<span class="hljs-number">-1</span>;ch=getchar();&#125;</span><br><span class="line">    <span class="hljs-keyword">while</span>(ch&gt;=<span class="hljs-string">'0'</span> &amp;&amp; ch&lt;=<span class="hljs-string">'9'</span>)&#123;sum=(sum&lt;&lt;<span class="hljs-number">3</span>)+(sum&lt;&lt;<span class="hljs-number">1</span>)+ch-<span class="hljs-string">'0'</span>;ch=getchar();&#125;</span><br><span class="line">    <span class="hljs-keyword">return</span> f*sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> Mod=<span class="hljs-number">1e9</span>+<span class="hljs-number">7</span>;</span><br><span class="line">ll n;</span><br><span class="line"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">matrix</span></span></span><br><span class="line"><span class="hljs-class">&#123;</span></span><br><span class="line">    <span class="hljs-keyword">int</span> a[<span class="hljs-number">26</span>][<span class="hljs-number">26</span>];</span><br><span class="line">  <span class="hljs-keyword">int</span> *<span class="hljs-keyword">operator</span>[](<span class="hljs-keyword">int</span> x)&#123;<span class="hljs-keyword">return</span> a[x];&#125;</span><br><span class="line">    matrix <span class="hljs-keyword">operator</span>*(matrix b)</span><br><span class="line">        &#123;</span><br><span class="line">            matrix c;</span><br><span class="line">            <span class="hljs-keyword">for</span>(re <span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">26</span>;i++)</span><br><span class="line">                <span class="hljs-keyword">for</span>(re <span class="hljs-keyword">int</span> j=<span class="hljs-number">0</span>;j&lt;<span class="hljs-number">26</span>;j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    c[i][j]=<span class="hljs-number">0</span>;</span><br><span class="line">                    <span class="hljs-keyword">for</span>(re <span class="hljs-keyword">int</span> k=<span class="hljs-number">0</span>;k&lt;<span class="hljs-number">26</span>;k++)</span><br><span class="line">                        c[i][j]=(c[i][j]+<span class="hljs-number">1l</span>l*a[i][k]*b[k][j]%Mod)%Mod;</span><br><span class="line">                &#125;</span><br><span class="line">            <span class="hljs-keyword">return</span> c;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;S,T;</span><br><span class="line"><span class="hljs-keyword">char</span> s[<span class="hljs-number">100010</span>];</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line">    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%lld"</span>,&amp;n);</span><br><span class="line">    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%s"</span>,s+<span class="hljs-number">1</span>);<span class="hljs-keyword">int</span> len=<span class="hljs-built_in">strlen</span>(s+<span class="hljs-number">1</span>);</span><br><span class="line">    <span class="hljs-keyword">for</span>(re <span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">26</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        S[<span class="hljs-number">0</span>][i]=<span class="hljs-number">1</span>;</span><br><span class="line">        <span class="hljs-keyword">for</span>(re <span class="hljs-keyword">int</span> j=<span class="hljs-number">0</span>;j&lt;<span class="hljs-number">26</span>;j++)T[i][j]=<span class="hljs-number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;len;i++)T[s[i]-<span class="hljs-string">'a'</span>][s[i+<span class="hljs-number">1</span>]-<span class="hljs-string">'a'</span>]=<span class="hljs-number">0</span>;--n;</span><br><span class="line">    <span class="hljs-keyword">while</span>(n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="hljs-keyword">if</span>((n&amp;<span class="hljs-number">1l</span>l))S=S*T;</span><br><span class="line">        T=T*T;n&gt;&gt;=<span class="hljs-number">1l</span>l;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">int</span> ans=<span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">for</span>(re <span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">26</span>;i++)ans=(ans+S[<span class="hljs-number">0</span>][i])%Mod;</span><br><span class="line">    <span class="hljs-built_in">printf</span>(<span class="hljs-string">"%d\n"</span>,ans);</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;传送门&quot;&gt;&lt;a href=&quot;#传送门&quot; class=&quot;headerlink&quot; title=&quot;传送门&quot;&gt;&lt;/a&gt;传送门&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://loj.ac/problem/3104&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Loj&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Solution" scheme="https://blog.mle-world.cn/categories/Solution/"/>
    
    
      <category term="矩阵快速幂" scheme="https://blog.mle-world.cn/tags/%E7%9F%A9%E9%98%B5%E5%BF%AB%E9%80%9F%E5%B9%82/"/>
    
  </entry>
  
  <entry>
    <title>[TJOI2019]甲苯先生的滚榜</title>
    <link href="https://blog.mle-world.cn/tjoi2019-%E7%94%B2%E8%8B%AF%E5%85%88%E7%94%9F%E7%9A%84%E6%BB%9A%E6%A6%9C/"/>
    <id>https://blog.mle-world.cn/tjoi2019-甲苯先生的滚榜/</id>
    <published>2019-05-05T08:48:31.000Z</published>
    <updated>2019-05-05T08:48:46.574Z</updated>
    
    <content type="html"><![CDATA[<h2 id="传送门"><a href="#传送门" class="headerlink" title="传送门"></a>传送门</h2><p><a href="https://loj.ac/problem/3105" target="_blank" rel="noopener">Loj</a></p><a id="more"></a><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>直接用$pb_ds$的红黑树或者自己手写一颗平衡树就好了.</p><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;ext/pb_ds/assoc_container.hpp&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;ext/pb_ds/tree_policy.hpp&gt;</span></span></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> __gnu_pbds;</span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;</span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> re register</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> N=<span class="hljs-number">100010</span>;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">inline</span> <span class="hljs-keyword">int</span> <span class="hljs-title">gi</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line"><span class="hljs-keyword">int</span> f=<span class="hljs-number">1</span>,sum=<span class="hljs-number">0</span>;<span class="hljs-keyword">char</span> ch=getchar();</span><br><span class="line"><span class="hljs-keyword">while</span>(ch&gt;<span class="hljs-string">'9'</span> || ch&lt;<span class="hljs-string">'0'</span>)&#123;<span class="hljs-keyword">if</span>(ch==<span class="hljs-string">'-'</span>)f=<span class="hljs-number">-1</span>;ch=getchar();&#125;</span><br><span class="line"><span class="hljs-keyword">while</span>(ch&gt;=<span class="hljs-string">'0'</span> &amp;&amp; ch&lt;=<span class="hljs-string">'9'</span>)&#123;sum=(sum&lt;&lt;<span class="hljs-number">3</span>)+(sum&lt;&lt;<span class="hljs-number">1</span>)+ch-<span class="hljs-string">'0'</span>;ch=getchar();&#125;</span><br><span class="line"><span class="hljs-keyword">return</span> f*sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">typedef</span> <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> ui;</span><br><span class="line">ui seed,last=<span class="hljs-number">7</span>;</span><br><span class="line"><span class="hljs-keyword">int</span> n,m;</span><br><span class="line"><span class="hljs-function">ui <span class="hljs-title">randNum</span><span class="hljs-params">()</span></span>&#123;seed = seed * <span class="hljs-number">17</span> + last ; <span class="hljs-keyword">return</span> seed % m + <span class="hljs-number">1</span>; &#125;</span><br><span class="line"><span class="hljs-keyword">typedef</span> pair&lt;<span class="hljs-keyword">int</span>,<span class="hljs-keyword">int</span>&gt; pii;</span><br><span class="line"><span class="hljs-keyword">typedef</span> pair&lt;pii,<span class="hljs-keyword">int</span>&gt; piii;</span><br><span class="line">tree&lt;pair&lt;pair&lt;<span class="hljs-keyword">int</span>, <span class="hljs-keyword">int</span>&gt;, <span class="hljs-keyword">int</span>&gt;, null_type, greater&lt;pair&lt;pair&lt;<span class="hljs-keyword">int</span>, <span class="hljs-keyword">int</span>&gt;, <span class="hljs-keyword">int</span>&gt;&gt;, rb_tree_tag, tree_order_statistics_node_update&gt; se;</span><br><span class="line">pii p[N];</span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> ac first</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> Time second</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> mp make_pair</span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line"><span class="hljs-keyword">int</span> T=gi();</span><br><span class="line"><span class="hljs-keyword">while</span>(T--)</span><br><span class="line">&#123;</span><br><span class="line">m=gi();n=gi();<span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%u"</span>,&amp;seed);</span><br><span class="line">se.clear();</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=m;i++)</span><br><span class="line">se.insert(mp(p[i],i));</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line">ui Ria=randNum();</span><br><span class="line">ui Rib=randNum();</span><br><span class="line">se.erase(mp(p[Ria],Ria));</span><br><span class="line">p[Ria].ac++;p[Ria].Time-=Rib;</span><br><span class="line">se.insert(mp(p[Ria],Ria));</span><br><span class="line">last=se.order_of_key(mp(p[Ria],m+<span class="hljs-number">1</span>));</span><br><span class="line"><span class="hljs-built_in">printf</span>(<span class="hljs-string">"%d\n"</span>,last);</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=m;i++)p[i].ac=<span class="hljs-number">0</span>,p[i].Time=<span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;传送门&quot;&gt;&lt;a href=&quot;#传送门&quot; class=&quot;headerlink&quot; title=&quot;传送门&quot;&gt;&lt;/a&gt;传送门&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://loj.ac/problem/3105&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Loj&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Solution" scheme="https://blog.mle-world.cn/categories/Solution/"/>
    
    
      <category term="平衡树" scheme="https://blog.mle-world.cn/tags/%E5%B9%B3%E8%A1%A1%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>[TJOI2019]甲苯先生和大中锋的字符串</title>
    <link href="https://blog.mle-world.cn/tjoi2019-%E7%94%B2%E8%8B%AF%E5%85%88%E7%94%9F%E5%92%8C%E5%A4%A7%E4%B8%AD%E9%94%8B%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    <id>https://blog.mle-world.cn/tjoi2019-甲苯先生和大中锋的字符串/</id>
    <published>2019-05-05T08:47:31.000Z</published>
    <updated>2019-05-05T08:48:07.802Z</updated>
    
    <content type="html"><![CDATA[<h2 id="传送门"><a href="#传送门" class="headerlink" title="传送门"></a>传送门</h2><p><a href="https://loj.ac/problem/3108" target="_blank" rel="noopener">Loj</a></p><h2 id="吐槽"><a href="#吐槽" class="headerlink" title="吐槽"></a>吐槽</h2><p>要是我生在$TJ$多好啊…这种字符串模板题在湖南是见不着的啊!</p><a id="more"></a><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>如果大家没有做过<a href="https://www.luogu.org/problemnew/show/P3804" target="_blank" rel="noopener">这道题目</a>,推荐…</p><p>那么问题就在于如何求子串长度出现次数最多的长度数（如果有多个输出最长长度）.<br>差分就好了啊….</p><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;</span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> re register</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">inline</span> <span class="hljs-keyword">int</span> <span class="hljs-title">gi</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line"><span class="hljs-keyword">int</span> f=<span class="hljs-number">1</span>,sum=<span class="hljs-number">0</span>;<span class="hljs-keyword">char</span> ch=getchar();</span><br><span class="line"><span class="hljs-keyword">while</span>(ch&gt;<span class="hljs-string">'9'</span> || ch&lt;<span class="hljs-string">'0'</span>)&#123;<span class="hljs-keyword">if</span>(ch==<span class="hljs-string">'-'</span>)f=<span class="hljs-number">-1</span>;ch=getchar();&#125;</span><br><span class="line"><span class="hljs-keyword">while</span>(ch&gt;=<span class="hljs-string">'0'</span> &amp;&amp; ch&lt;=<span class="hljs-string">'9'</span>)&#123;sum=(sum&lt;&lt;<span class="hljs-number">3</span>)+(sum&lt;&lt;<span class="hljs-number">1</span>)+ch-<span class="hljs-string">'0'</span>;ch=getchar();&#125;</span><br><span class="line"><span class="hljs-keyword">return</span> f*sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> N=<span class="hljs-number">100010</span>;</span><br><span class="line"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">node</span></span></span><br><span class="line"><span class="hljs-class">&#123;</span></span><br><span class="line"><span class="hljs-keyword">int</span> ff,son[<span class="hljs-number">26</span>],len;</span><br><span class="line">&#125;t[N&lt;&lt;<span class="hljs-number">2</span>];</span><br><span class="line"><span class="hljs-keyword">int</span> a[N&lt;&lt;<span class="hljs-number">2</span>],c[N&lt;&lt;<span class="hljs-number">2</span>],siz[N&lt;&lt;<span class="hljs-number">2</span>],tot=<span class="hljs-number">1</span>,last=<span class="hljs-number">1</span>,n;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">newnode</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x)</span></span>&#123;t[x].ff=t[x].len=<span class="hljs-number">0</span>;<span class="hljs-built_in">memset</span>(t[x].son,<span class="hljs-number">0</span>,<span class="hljs-keyword">sizeof</span>(t[x].son));&#125;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">extend</span><span class="hljs-params">(<span class="hljs-keyword">int</span> c)</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line"><span class="hljs-keyword">int</span> np=++tot,p=last;last=tot;</span><br><span class="line">t[np].len=t[p].len+<span class="hljs-number">1</span>;</span><br><span class="line"><span class="hljs-keyword">while</span>(p &amp;&amp; !t[p].son[c])t[p].son[c]=np,p=t[p].ff;</span><br><span class="line"><span class="hljs-keyword">if</span>(!p)t[np].ff=<span class="hljs-number">1</span>;</span><br><span class="line"><span class="hljs-keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="hljs-keyword">int</span> q=t[p].son[c];</span><br><span class="line"><span class="hljs-keyword">if</span>(t[p].len+<span class="hljs-number">1</span>==t[q].len)t[np].ff=q;</span><br><span class="line"><span class="hljs-keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="hljs-keyword">int</span> nq=++tot;</span><br><span class="line">t[nq]=t[q];t[nq].len=t[p].len+<span class="hljs-number">1</span>;</span><br><span class="line">t[np].ff=t[q].ff=nq;</span><br><span class="line"><span class="hljs-keyword">while</span>(p &amp;&amp; t[p].son[c]==q)t[p].son[c]=nq,p=t[p].ff;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">siz[np]=<span class="hljs-number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">char</span> s[N];<span class="hljs-keyword">int</span> k,ans[N];</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line"><span class="hljs-keyword">int</span> T=gi();</span><br><span class="line"><span class="hljs-keyword">while</span>(T--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%s%d"</span>,s+<span class="hljs-number">1</span>,&amp;k);n=<span class="hljs-built_in">strlen</span>(s+<span class="hljs-number">1</span>);tot=last=<span class="hljs-number">1</span>;newnode(<span class="hljs-number">1</span>);</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)extend(s[i]-<span class="hljs-string">'a'</span>);</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=tot;i++)c[t[i].len]++;</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)c[i]+=c[i<span class="hljs-number">-1</span>];</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=tot;i++)a[c[t[i].len]--]=i;</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=tot;i;i--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="hljs-keyword">int</span> now=a[i];</span><br><span class="line">siz[t[now].ff]+=siz[now];</span><br><span class="line"><span class="hljs-keyword">if</span>(siz[now]==k &amp;&amp; now!=<span class="hljs-number">1</span>)ans[t[t[now].ff].len+<span class="hljs-number">1</span>]++,ans[t[now].len+<span class="hljs-number">1</span>]--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)ans[i]+=ans[i<span class="hljs-number">-1</span>];</span><br><span class="line"><span class="hljs-keyword">int</span> p=<span class="hljs-number">0</span>;</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=n;i;i--)<span class="hljs-keyword">if</span>(ans[i]&gt;ans[p])p=i;<span class="hljs-keyword">if</span>(!p)p=<span class="hljs-number">-1</span>;</span><br><span class="line"><span class="hljs-built_in">printf</span>(<span class="hljs-string">"%d\n"</span>,p);</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)ans[i]=<span class="hljs-number">0</span>,c[i]=<span class="hljs-number">0</span>;</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=tot;i++)</span><br><span class="line">&#123;</span><br><span class="line">siz[i]=<span class="hljs-number">0</span>;</span><br><span class="line"><span class="hljs-built_in">memset</span>(t[i].son,<span class="hljs-number">0</span>,<span class="hljs-keyword">sizeof</span>(t[i].son));</span><br><span class="line">t[i].len=t[i].ff=<span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;传送门&quot;&gt;&lt;a href=&quot;#传送门&quot; class=&quot;headerlink&quot; title=&quot;传送门&quot;&gt;&lt;/a&gt;传送门&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://loj.ac/problem/3108&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Loj&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;吐槽&quot;&gt;&lt;a href=&quot;#吐槽&quot; class=&quot;headerlink&quot; title=&quot;吐槽&quot;&gt;&lt;/a&gt;吐槽&lt;/h2&gt;&lt;p&gt;要是我生在$TJ$多好啊…这种字符串模板题在湖南是见不着的啊!&lt;/p&gt;
    
    </summary>
    
      <category term="Solution" scheme="https://blog.mle-world.cn/categories/Solution/"/>
    
    
      <category term="后缀自动机" scheme="https://blog.mle-world.cn/tags/%E5%90%8E%E7%BC%80%E8%87%AA%E5%8A%A8%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>[SNOI2019]字符串</title>
    <link href="https://blog.mle-world.cn/snoi2019-%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    <id>https://blog.mle-world.cn/snoi2019-字符串/</id>
    <published>2019-04-30T12:07:28.000Z</published>
    <updated>2019-04-30T12:07:52.461Z</updated>
    
    <content type="html"><![CDATA[<h2 id="传送门"><a href="#传送门" class="headerlink" title="传送门"></a>传送门</h2><p><a href="https://loj.ac/problem/3095" target="_blank" rel="noopener">Loj</a></p><a id="more"></a><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>我们在脑子里面构想一下怎么判断两个串的大小,发现就是两个相邻后缀的$lcp$.令串为$a$和$b$<br>如果长度超过$a,b$之间的长度,那么就是$id$的大小,否则就是看不匹配的那位的大小.</p><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">/*</span></span><br><span class="line"><span class="hljs-comment">  mail: mleautomaton@foxmail.com</span></span><br><span class="line"><span class="hljs-comment">  author: MLEAutoMaton</span></span><br><span class="line"><span class="hljs-comment">  This Code is made by MLEAutoMaton</span></span><br><span class="line"><span class="hljs-comment">*/</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;</span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> re register</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> file(a) freopen(a<span class="hljs-meta-string">".in"</span>,<span class="hljs-meta-string">"r"</span>,stdin);freopen(a<span class="hljs-meta-string">".out"</span>,<span class="hljs-meta-string">"w"</span>,stdout)</span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">inline</span> <span class="hljs-keyword">int</span> <span class="hljs-title">gi</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line"><span class="hljs-keyword">int</span> f=<span class="hljs-number">1</span>,sum=<span class="hljs-number">0</span>;<span class="hljs-keyword">char</span> ch=getchar();</span><br><span class="line"><span class="hljs-keyword">while</span>(ch&gt;<span class="hljs-string">'9'</span> || ch&lt;<span class="hljs-string">'0'</span>)&#123;<span class="hljs-keyword">if</span>(ch==<span class="hljs-string">'-'</span>)f=<span class="hljs-number">-1</span>;ch=getchar();&#125;</span><br><span class="line"><span class="hljs-keyword">while</span>(ch&gt;=<span class="hljs-string">'0'</span> &amp;&amp; ch&lt;=<span class="hljs-string">'9'</span>)&#123;sum=(sum&lt;&lt;<span class="hljs-number">3</span>)+(sum&lt;&lt;<span class="hljs-number">1</span>)+ch-<span class="hljs-string">'0'</span>;ch=getchar();&#125;</span><br><span class="line"><span class="hljs-keyword">return</span> f*sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> N=<span class="hljs-number">1000010</span>;</span><br><span class="line"><span class="hljs-keyword">int</span> lcp[N],n,f[N];<span class="hljs-keyword">char</span> s[N];</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">cmp</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a,<span class="hljs-keyword">int</span> b)</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line"><span class="hljs-keyword">int</span> big=<span class="hljs-number">1</span>;<span class="hljs-keyword">if</span>(a&gt;b)swap(a,b),big=<span class="hljs-number">0</span>;</span><br><span class="line"><span class="hljs-keyword">if</span>(lcp[a+<span class="hljs-number">1</span>]&gt;=b-a)<span class="hljs-keyword">return</span> big;</span><br><span class="line"><span class="hljs-keyword">return</span> big^(s[a+lcp[a+<span class="hljs-number">1</span>]+<span class="hljs-number">1</span>]&gt;s[a+lcp[a+<span class="hljs-number">1</span>]]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line">n=gi();<span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%s"</span>,s+<span class="hljs-number">1</span>);</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">2</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line">lcp[i]=max(lcp[i<span class="hljs-number">-1</span>]<span class="hljs-number">-1</span>,<span class="hljs-number">0</span>);</span><br><span class="line"><span class="hljs-keyword">while</span>(i+lcp[i]&lt;=n &amp;&amp; s[i+lcp[i]]==s[i+lcp[i]<span class="hljs-number">-1</span>])lcp[i]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)f[i]=i;</span><br><span class="line">sort(f+<span class="hljs-number">1</span>,f+n+<span class="hljs-number">1</span>,cmp);</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<span class="hljs-built_in">printf</span>(<span class="hljs-string">"%d%c"</span>,f[i],i==n?<span class="hljs-string">'\n'</span>:<span class="hljs-string">' '</span>);</span><br><span class="line"><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;传送门&quot;&gt;&lt;a href=&quot;#传送门&quot; class=&quot;headerlink&quot; title=&quot;传送门&quot;&gt;&lt;/a&gt;传送门&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://loj.ac/problem/3095&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Loj&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Solution" scheme="https://blog.mle-world.cn/categories/Solution/"/>
    
    
      <category term="字符串" scheme="https://blog.mle-world.cn/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
  </entry>
  
  <entry>
    <title>To Do List</title>
    <link href="https://blog.mle-world.cn/to-do-list/"/>
    <id>https://blog.mle-world.cn/to-do-list/</id>
    <published>2019-04-29T10:03:03.000Z</published>
    <updated>2019-05-16T04:02:54.254Z</updated>
    
    <content type="html"><![CDATA[<table><thead><tr><th></th><th></th><th></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td><strong>省份</strong></td><td><strong>T1</strong></td><td><strong>T2</strong></td><td><strong>T3</strong></td><td><strong>T4</strong></td><td><strong>T5</strong></td><td><strong>T6</strong></td></tr><tr><td>ZJOI</td><td></td><td></td><td></td><td></td><td></td><td>$\surd$</td></tr><tr><td>HNOI</td><td></td><td></td><td></td><td>$\surd$</td><td></td><td></td></tr><tr><td>十二省</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>GX/GZOI</td><td>$\surd$</td><td>$\surd$</td><td>$\surd$</td><td>$\surd$</td><td>$\surd$</td><td>$\surd$</td></tr><tr><td>BJOI</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>SNOI</td><td>$\surd$</td><td>$\surd$</td><td></td><td></td><td></td><td></td></tr><tr><td>TJOI</td><td>$\surd$</td><td>$\surd$</td><td></td><td>$\surd$</td><td>$\surd$</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;省份&lt;/stron
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>[GXOI/GZOI2019]旧词</title>
    <link href="https://blog.mle-world.cn/gxoi-gzoi2019-%E6%97%A7%E8%AF%8D/"/>
    <id>https://blog.mle-world.cn/gxoi-gzoi2019-旧词/</id>
    <published>2019-04-29T09:37:38.000Z</published>
    <updated>2019-04-29T09:43:13.419Z</updated>
    
    <content type="html"><![CDATA[<h2 id="传送门"><a href="#传送门" class="headerlink" title="传送门"></a>传送门</h2><p><a href="https://loj.ac/problem/3088" target="_blank" rel="noopener">Loj</a></p><a id="more"></a><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>我们先想一下答案怎么转换(如果$k=1$)?<br>把$y$到根节点的路径打上标记,答案就是$i \leq x$到根节点的路径的标记总数.<br>这个又可以变成:<br>$i \leq x$到根节点的路径打标记,然后$y$到根节点的标记总数.<br>然后如果$k!=1$,也可以差分就好了.</p><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">/*</span></span><br><span class="line"><span class="hljs-comment">  mail: mleautomaton@foxmail.com</span></span><br><span class="line"><span class="hljs-comment">  author: MLEAutoMaton</span></span><br><span class="line"><span class="hljs-comment">  This Code is made by MLEAutoMaton</span></span><br><span class="line"><span class="hljs-comment">*/</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;</span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> re register</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> file(a) freopen(a<span class="hljs-meta-string">".in"</span>,<span class="hljs-meta-string">"r"</span>,stdin);freopen(a<span class="hljs-meta-string">".out"</span>,<span class="hljs-meta-string">"w"</span>,stdout)</span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">inline</span> <span class="hljs-keyword">int</span> <span class="hljs-title">gi</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line"><span class="hljs-keyword">int</span> f=<span class="hljs-number">1</span>,sum=<span class="hljs-number">0</span>;<span class="hljs-keyword">char</span> ch=getchar();</span><br><span class="line"><span class="hljs-keyword">while</span>(ch&gt;<span class="hljs-string">'9'</span> || ch&lt;<span class="hljs-string">'0'</span>)&#123;<span class="hljs-keyword">if</span>(ch==<span class="hljs-string">'-'</span>)f=<span class="hljs-number">-1</span>;ch=getchar();&#125;</span><br><span class="line"><span class="hljs-keyword">while</span>(ch&gt;=<span class="hljs-string">'0'</span> &amp;&amp; ch&lt;=<span class="hljs-string">'9'</span>)&#123;sum=(sum&lt;&lt;<span class="hljs-number">3</span>)+(sum&lt;&lt;<span class="hljs-number">1</span>)+ch-<span class="hljs-string">'0'</span>;ch=getchar();&#125;</span><br><span class="line"><span class="hljs-keyword">return</span> f*sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> N=<span class="hljs-number">50010</span>,Mod=<span class="hljs-number">998244353</span>;</span><br><span class="line"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">node</span>&#123;</span><span class="hljs-keyword">int</span> to,nxt;&#125;e[N&lt;&lt;<span class="hljs-number">1</span>];</span><br><span class="line"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">ques</span>&#123;</span><span class="hljs-keyword">int</span> x,y,id;&#125;q[N];</span><br><span class="line"><span class="hljs-keyword">int</span> front[N],cnt,dep[N],fa[N],siz[N],son[N],dfn[N],top[N],Time,n,Q,k,id[N],sum[N];</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">qpow</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a,<span class="hljs-keyword">int</span> b)</span></span>&#123;<span class="hljs-keyword">int</span> ret=<span class="hljs-number">1</span>;<span class="hljs-keyword">while</span>(b)&#123;<span class="hljs-keyword">if</span>(b&amp;<span class="hljs-number">1</span>)ret=<span class="hljs-number">1l</span>l*ret*a%Mod;a=<span class="hljs-number">1l</span>l*a*a%Mod;b&gt;&gt;=<span class="hljs-number">1</span>;&#125;<span class="hljs-keyword">return</span> ret;&#125;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">Add</span><span class="hljs-params">(<span class="hljs-keyword">int</span> u,<span class="hljs-keyword">int</span> v)</span></span>&#123;e[++cnt]=(node)&#123;v,front[u]&#125;;front[u]=cnt;&#125;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">cmp</span><span class="hljs-params">(ques a,ques b)</span></span>&#123;<span class="hljs-keyword">return</span> a.x&lt;b.x;&#125;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">dfs1</span><span class="hljs-params">(<span class="hljs-keyword">int</span> u,<span class="hljs-keyword">int</span> ff)</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line">dep[u]=dep[ff]+<span class="hljs-number">1</span>;siz[u]=<span class="hljs-number">1</span>;</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=front[u];i;i=e[i].nxt)</span><br><span class="line">&#123;</span><br><span class="line"><span class="hljs-keyword">int</span> v=e[i].to;</span><br><span class="line">dfs1(v,u);</span><br><span class="line">siz[u]+=siz[v];</span><br><span class="line"><span class="hljs-keyword">if</span>(siz[son[u]]&lt;siz[v])son[u]=v;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">dfs2</span><span class="hljs-params">(<span class="hljs-keyword">int</span> u,<span class="hljs-keyword">int</span> tp)</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line">dfn[u]=++Time;top[u]=tp;id[dfn[u]]=u;</span><br><span class="line"><span class="hljs-keyword">if</span>(!son[u])<span class="hljs-keyword">return</span>;</span><br><span class="line">dfs2(son[u],tp);</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=front[u];i;i=e[i].nxt)</span><br><span class="line">&#123;</span><br><span class="line"><span class="hljs-keyword">int</span> v=e[i].to;<span class="hljs-keyword">if</span>(v==son[u])<span class="hljs-keyword">continue</span>;</span><br><span class="line">dfs2(v,v);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">Tree</span>&#123;</span><span class="hljs-keyword">int</span> sum,atag;&#125;t[N&lt;&lt;<span class="hljs-number">2</span>];</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">pushup</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x)</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line">t[x].sum=(t[x&lt;&lt;<span class="hljs-number">1</span>].sum+t[x&lt;&lt;<span class="hljs-number">1</span>|<span class="hljs-number">1</span>].sum)%Mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">pushdown</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x,<span class="hljs-keyword">int</span> l,<span class="hljs-keyword">int</span> r)</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line"><span class="hljs-keyword">if</span>(t[x].atag)</span><br><span class="line">&#123;</span><br><span class="line"><span class="hljs-keyword">int</span> mid=(l+r)&gt;&gt;<span class="hljs-number">1</span>;</span><br><span class="line">t[x&lt;&lt;<span class="hljs-number">1</span>].sum=(t[x&lt;&lt;<span class="hljs-number">1</span>].sum+<span class="hljs-number">1l</span>l*t[x].atag*((sum[mid]-sum[l<span class="hljs-number">-1</span>]+Mod)%Mod)%Mod)%Mod;</span><br><span class="line">t[x&lt;&lt;<span class="hljs-number">1</span>|<span class="hljs-number">1</span>].sum=(t[x&lt;&lt;<span class="hljs-number">1</span>|<span class="hljs-number">1</span>].sum+<span class="hljs-number">1l</span>l*t[x].atag*((sum[r]-sum[mid]+Mod)%Mod)%Mod)%Mod;</span><br><span class="line">t[x&lt;&lt;<span class="hljs-number">1</span>].atag+=t[x].atag;t[x&lt;&lt;<span class="hljs-number">1</span>|<span class="hljs-number">1</span>].atag+=t[x].atag;</span><br><span class="line">t[x].atag=<span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">modify</span><span class="hljs-params">(<span class="hljs-keyword">int</span> o,<span class="hljs-keyword">int</span> l,<span class="hljs-keyword">int</span> r,<span class="hljs-keyword">int</span> posl,<span class="hljs-keyword">int</span> posr)</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line"><span class="hljs-keyword">if</span>(posl&lt;=l &amp;&amp; r&lt;=posr)</span><br><span class="line">&#123;</span><br><span class="line">t[o].sum=((t[o].sum+sum[r])%Mod-sum[l<span class="hljs-number">-1</span>]+Mod)%Mod;</span><br><span class="line">t[o].atag++;</span><br><span class="line"><span class="hljs-keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">int</span> mid=(l+r)&gt;&gt;<span class="hljs-number">1</span>;pushdown(o,l,r);</span><br><span class="line"><span class="hljs-keyword">if</span>(posl&lt;=mid)modify(o&lt;&lt;<span class="hljs-number">1</span>,l,mid,posl,posr);</span><br><span class="line"><span class="hljs-keyword">if</span>(mid&lt;posr)modify(o&lt;&lt;<span class="hljs-number">1</span>|<span class="hljs-number">1</span>,mid+<span class="hljs-number">1</span>,r,posl,posr);</span><br><span class="line">pushup(o);</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">query</span><span class="hljs-params">(<span class="hljs-keyword">int</span> o,<span class="hljs-keyword">int</span> l,<span class="hljs-keyword">int</span> r,<span class="hljs-keyword">int</span> posl,<span class="hljs-keyword">int</span> posr)</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line"><span class="hljs-keyword">if</span>(posl&lt;=l &amp;&amp; r&lt;=posr)<span class="hljs-keyword">return</span> t[o].sum;</span><br><span class="line"><span class="hljs-keyword">int</span> mid=(l+r)&gt;&gt;<span class="hljs-number">1</span>,s=<span class="hljs-number">0</span>;pushdown(o,l,r);</span><br><span class="line"><span class="hljs-keyword">if</span>(posl&lt;=mid)s=query(o&lt;&lt;<span class="hljs-number">1</span>,l,mid,posl,posr);</span><br><span class="line"><span class="hljs-keyword">if</span>(mid&lt;posr)s=(s+query(o&lt;&lt;<span class="hljs-number">1</span>|<span class="hljs-number">1</span>,mid+<span class="hljs-number">1</span>,r,posl,posr))%Mod;</span><br><span class="line"><span class="hljs-keyword">return</span> s;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">Modify</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x)</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line"><span class="hljs-keyword">while</span>(x)</span><br><span class="line">&#123;</span><br><span class="line">modify(<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,n,dfn[top[x]],dfn[x]);</span><br><span class="line">x=fa[top[x]];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">Query</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x)</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line"><span class="hljs-keyword">int</span> ret=<span class="hljs-number">0</span>;</span><br><span class="line"><span class="hljs-keyword">while</span>(x)</span><br><span class="line">&#123;</span><br><span class="line">ret=(ret+query(<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,n,dfn[top[x]],dfn[x]))%Mod;</span><br><span class="line">x=fa[top[x]];</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">int</span> ans[N];</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line">freopen(<span class="hljs-string">"poetry.in"</span>,<span class="hljs-string">"r"</span>,<span class="hljs-built_in">stdin</span>);</span><br><span class="line">freopen(<span class="hljs-string">"poetry.out"</span>,<span class="hljs-string">"w"</span>,<span class="hljs-built_in">stdout</span>);</span><br><span class="line">n=gi();Q=gi();k=gi();</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">2</span>;i&lt;=n;i++)fa[i]=gi(),Add(fa[i],i);</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=Q;i++)q[i].x=gi(),q[i].y=gi(),q[i].id=i;</span><br><span class="line">sort(q+<span class="hljs-number">1</span>,q+Q+<span class="hljs-number">1</span>,cmp);</span><br><span class="line">dfs1(<span class="hljs-number">1</span>,<span class="hljs-number">1</span>);dfs2(<span class="hljs-number">1</span>,<span class="hljs-number">1</span>);</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)sum[i]=(sum[i<span class="hljs-number">-1</span>]+(qpow(dep[id[i]],k)-qpow(dep[id[i]]<span class="hljs-number">-1</span>,k)+Mod)%Mod)%Mod;</span><br><span class="line"><span class="hljs-keyword">int</span> pos=<span class="hljs-number">1</span>;</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=Q;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="hljs-keyword">while</span>(pos&lt;=q[i].x)</span><br><span class="line">&#123;</span><br><span class="line">Modify(pos);pos++;</span><br><span class="line">&#125;</span><br><span class="line">ans[q[i].id]=Query(q[i].y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=Q;i++)<span class="hljs-built_in">printf</span>(<span class="hljs-string">"%d\n"</span>,ans[i]);</span><br><span class="line"><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;传送门&quot;&gt;&lt;a href=&quot;#传送门&quot; class=&quot;headerlink&quot; title=&quot;传送门&quot;&gt;&lt;/a&gt;传送门&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://loj.ac/problem/3088&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Loj&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Solution" scheme="https://blog.mle-world.cn/categories/Solution/"/>
    
    
      <category term="树链剖分" scheme="https://blog.mle-world.cn/tags/%E6%A0%91%E9%93%BE%E5%89%96%E5%88%86/"/>
    
      <category term="差分" scheme="https://blog.mle-world.cn/tags/%E5%B7%AE%E5%88%86/"/>
    
  </entry>
  
  <entry>
    <title>[GXOI/GZOI2019]旅行者</title>
    <link href="https://blog.mle-world.cn/gxoi-gzoi2019-%E6%97%85%E8%A1%8C%E8%80%85/"/>
    <id>https://blog.mle-world.cn/gxoi-gzoi2019-旅行者/</id>
    <published>2019-04-29T09:32:28.000Z</published>
    <updated>2019-04-29T09:36:53.725Z</updated>
    
    <content type="html"><![CDATA[<h2 id="传送门"><a href="#传送门" class="headerlink" title="传送门"></a>传送门</h2><p><a href="https://loj.ac/problem/3087" target="_blank" rel="noopener">Loj</a></p><a id="more"></a><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>考虑两个关键点对之间一定不会经过另一个关键点,那么就跑两边$dijkstra$然后枚举边就行了.<br>具体实现见代码.</p><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">/*</span></span><br><span class="line"><span class="hljs-comment">  mail: mleautomaton@foxmail.com</span></span><br><span class="line"><span class="hljs-comment">  author: MLEAutoMaton</span></span><br><span class="line"><span class="hljs-comment">  This Code is made by MLEAutoMaton</span></span><br><span class="line"><span class="hljs-comment">*/</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;</span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> re register</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> int ll</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> file(a) freopen(a<span class="hljs-meta-string">".in"</span>,<span class="hljs-meta-string">"r"</span>,stdin);freopen(a<span class="hljs-meta-string">".out"</span>,<span class="hljs-meta-string">"w"</span>,stdout)</span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">inline</span> <span class="hljs-keyword">int</span> <span class="hljs-title">gi</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line"><span class="hljs-keyword">int</span> f=<span class="hljs-number">1</span>,sum=<span class="hljs-number">0</span>;<span class="hljs-keyword">char</span> ch=getchar();</span><br><span class="line"><span class="hljs-keyword">while</span>(ch&gt;<span class="hljs-string">'9'</span> || ch&lt;<span class="hljs-string">'0'</span>)&#123;<span class="hljs-keyword">if</span>(ch==<span class="hljs-string">'-'</span>)f=<span class="hljs-number">-1</span>;ch=getchar();&#125;</span><br><span class="line"><span class="hljs-keyword">while</span>(ch&gt;=<span class="hljs-string">'0'</span> &amp;&amp; ch&lt;=<span class="hljs-string">'9'</span>)&#123;sum=(sum&lt;&lt;<span class="hljs-number">3</span>)+(sum&lt;&lt;<span class="hljs-number">1</span>)+ch-<span class="hljs-string">'0'</span>;ch=getchar();&#125;</span><br><span class="line"><span class="hljs-keyword">return</span> f*sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> N=<span class="hljs-number">200010</span>,M=<span class="hljs-number">1000010</span>;</span><br><span class="line"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">node</span></span></span><br><span class="line"><span class="hljs-class">&#123;</span></span><br><span class="line"><span class="hljs-keyword">int</span> to,nxt,w,id;</span><br><span class="line">&#125;e[M];</span><br><span class="line"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">edge</span>&#123;</span><span class="hljs-keyword">int</span> u,v,w;&#125;ed[M&lt;&lt;<span class="hljs-number">1</span>];</span><br><span class="line"><span class="hljs-keyword">int</span> front[N],cnt=<span class="hljs-number">1</span>,a[N],bl[N][<span class="hljs-number">2</span>],n,m,k,vis[N];</span><br><span class="line">ll dis[N][<span class="hljs-number">2</span>];</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">Add</span><span class="hljs-params">(<span class="hljs-keyword">int</span> u,<span class="hljs-keyword">int</span> v,<span class="hljs-keyword">int</span> w)</span></span>&#123;e[++cnt]=(node)&#123;v,front[u],w,<span class="hljs-number">0</span>&#125;;front[u]=cnt;e[++cnt]=(node)&#123;u,front[v],w,<span class="hljs-number">1</span>&#125;;front[v]=cnt;&#125;</span><br><span class="line"><span class="hljs-keyword">typedef</span> pair&lt;ll,<span class="hljs-keyword">int</span>&gt; pii;</span><br><span class="line">priority_queue&lt;pii,<span class="hljs-built_in">vector</span>&lt;pii&gt;,greater&lt;pii&gt; &gt;q;</span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> mp make_pair</span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line">ll ans=<span class="hljs-number">1e18</span>+<span class="hljs-number">10</span>;</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)dis[i][<span class="hljs-number">0</span>]=<span class="hljs-number">1e18</span>,vis[i]=<span class="hljs-number">0</span>;</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=k;i++)dis[a[i]][<span class="hljs-number">0</span>]=<span class="hljs-number">0</span>,bl[a[i]][<span class="hljs-number">0</span>]=a[i],q.push(mp(<span class="hljs-number">0</span>,a[i]));</span><br><span class="line"><span class="hljs-keyword">while</span>(!q.empty())</span><br><span class="line">&#123;</span><br><span class="line">pii now=q.top();q.pop();<span class="hljs-keyword">int</span> u=now.second;</span><br><span class="line"><span class="hljs-keyword">if</span>(vis[u])<span class="hljs-keyword">continue</span>;vis[u]=<span class="hljs-number">1</span>;</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=front[u];i;i=e[i].nxt)</span><br><span class="line">&#123;</span><br><span class="line"><span class="hljs-keyword">if</span>(e[i].id)<span class="hljs-keyword">continue</span>;</span><br><span class="line"><span class="hljs-keyword">int</span> v=e[i].to;</span><br><span class="line"><span class="hljs-keyword">if</span>(dis[v][<span class="hljs-number">0</span>]&gt;dis[u][<span class="hljs-number">0</span>]+e[i].w)</span><br><span class="line">&#123;</span><br><span class="line">dis[v][<span class="hljs-number">0</span>]=dis[u][<span class="hljs-number">0</span>]+e[i].w;</span><br><span class="line">q.push(mp(dis[v][<span class="hljs-number">0</span>],v));</span><br><span class="line">bl[v][<span class="hljs-number">0</span>]=bl[u][<span class="hljs-number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)dis[i][<span class="hljs-number">1</span>]=<span class="hljs-number">1e18</span>,vis[i]=<span class="hljs-number">0</span>;</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=k;i++)dis[a[i]][<span class="hljs-number">1</span>]=<span class="hljs-number">0</span>,bl[a[i]][<span class="hljs-number">1</span>]=a[i],q.push(mp(<span class="hljs-number">0</span>,a[i]));</span><br><span class="line"><span class="hljs-keyword">while</span>(!q.empty())</span><br><span class="line">&#123;</span><br><span class="line">pii now=q.top();q.pop();<span class="hljs-keyword">int</span> u=now.second;</span><br><span class="line"><span class="hljs-keyword">if</span>(vis[u])<span class="hljs-keyword">continue</span>;vis[u]=<span class="hljs-number">1</span>;</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=front[u];i;i=e[i].nxt)</span><br><span class="line">&#123;</span><br><span class="line"><span class="hljs-keyword">if</span>(!e[i].id)<span class="hljs-keyword">continue</span>;</span><br><span class="line"><span class="hljs-keyword">int</span> v=e[i].to;</span><br><span class="line"><span class="hljs-keyword">if</span>(dis[v][<span class="hljs-number">1</span>]&gt;dis[u][<span class="hljs-number">1</span>]+e[i].w)</span><br><span class="line">&#123;</span><br><span class="line">dis[v][<span class="hljs-number">1</span>]=dis[u][<span class="hljs-number">1</span>]+e[i].w;</span><br><span class="line">q.push(mp(dis[v][<span class="hljs-number">1</span>],v));</span><br><span class="line">bl[v][<span class="hljs-number">1</span>]=bl[u][<span class="hljs-number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=m;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="hljs-keyword">int</span> u=ed[i].u,v=ed[i].v;</span><br><span class="line"><span class="hljs-keyword">if</span>(bl[u][<span class="hljs-number">0</span>]==bl[v][<span class="hljs-number">1</span>])<span class="hljs-keyword">continue</span>;</span><br><span class="line">ans=min(ans,ed[i].w+dis[u][<span class="hljs-number">0</span>]+dis[v][<span class="hljs-number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-built_in">printf</span>(<span class="hljs-string">"%lld\n"</span>,ans);</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">signed</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line">freopen(<span class="hljs-string">"tourist.in"</span>,<span class="hljs-string">"r"</span>,<span class="hljs-built_in">stdin</span>);</span><br><span class="line">freopen(<span class="hljs-string">"tourist.out"</span>,<span class="hljs-string">"w"</span>,<span class="hljs-built_in">stdout</span>);</span><br><span class="line"><span class="hljs-keyword">int</span> T=gi();</span><br><span class="line"><span class="hljs-keyword">while</span>(T--)</span><br><span class="line">&#123;</span><br><span class="line">n=gi();m=gi();k=gi();</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=m;i++)&#123;<span class="hljs-keyword">int</span> x=gi(),y=gi(),z=gi();Add(x,y,z);ed[i]=(edge)&#123;x,y,z&#125;;&#125;</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=k;i++)a[i]=gi();</span><br><span class="line">solve();</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)front[i]=<span class="hljs-number">0</span>;cnt=<span class="hljs-number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;传送门&quot;&gt;&lt;a href=&quot;#传送门&quot; class=&quot;headerlink&quot; title=&quot;传送门&quot;&gt;&lt;/a&gt;传送门&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://loj.ac/problem/3087&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Loj&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Solution" scheme="https://blog.mle-world.cn/categories/Solution/"/>
    
    
      <category term="最短路" scheme="https://blog.mle-world.cn/tags/%E6%9C%80%E7%9F%AD%E8%B7%AF/"/>
    
  </entry>
  
  <entry>
    <title>[GXOI/GZOI2019]逼死强迫症</title>
    <link href="https://blog.mle-world.cn/gxoi-gzoi2019-%E9%80%BC%E6%AD%BB%E5%BC%BA%E8%BF%AB%E7%97%87/"/>
    <id>https://blog.mle-world.cn/gxoi-gzoi2019-逼死强迫症/</id>
    <published>2019-04-29T09:26:24.000Z</published>
    <updated>2019-04-29T09:31:02.330Z</updated>
    
    <content type="html"><![CDATA[<h2 id="传送门"><a href="#传送门" class="headerlink" title="传送门"></a>传送门</h2><p><a href="https://loj.ac/problem/3086" target="_blank" rel="noopener">Loj</a></p><a id="more"></a><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>比较简单.<br>考虑设$f_i$表示当$N$为$i$的时候的答案,$g_i$表示只用1*2的铺满$2*i$格子的方案数.<br>有:$f_i=f_{i-1}+f_{i-2}+2*\sum_{j=1}^{i-3}g_j$<br>然后我们又知道斐波那契数列的前缀和$s_i$=$g_i+2$,直接矩阵快速幂就好了.</p><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">/*</span></span><br><span class="line"><span class="hljs-comment">  mail: mleautomaton@foxmail.com</span></span><br><span class="line"><span class="hljs-comment">  author: MLEAutoMaton</span></span><br><span class="line"><span class="hljs-comment">  This Code is made by MLEAutoMaton</span></span><br><span class="line"><span class="hljs-comment">*/</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;</span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> re register</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> file(a) freopen(a<span class="hljs-meta-string">".in"</span>,<span class="hljs-meta-string">"r"</span>,stdin);freopen(a<span class="hljs-meta-string">".out"</span>,<span class="hljs-meta-string">"w"</span>,stdout)</span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">inline</span> <span class="hljs-keyword">int</span> <span class="hljs-title">gi</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line"><span class="hljs-keyword">int</span> f=<span class="hljs-number">1</span>,sum=<span class="hljs-number">0</span>;<span class="hljs-keyword">char</span> ch=getchar();</span><br><span class="line"><span class="hljs-keyword">while</span>(ch&gt;<span class="hljs-string">'9'</span> || ch&lt;<span class="hljs-string">'0'</span>)&#123;<span class="hljs-keyword">if</span>(ch==<span class="hljs-string">'-'</span>)f=<span class="hljs-number">-1</span>;ch=getchar();&#125;</span><br><span class="line"><span class="hljs-keyword">while</span>(ch&gt;=<span class="hljs-string">'0'</span> &amp;&amp; ch&lt;=<span class="hljs-string">'9'</span>)&#123;sum=(sum&lt;&lt;<span class="hljs-number">3</span>)+(sum&lt;&lt;<span class="hljs-number">1</span>)+ch-<span class="hljs-string">'0'</span>;ch=getchar();&#125;</span><br><span class="line"><span class="hljs-keyword">return</span> f*sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> Mod=<span class="hljs-number">1e9</span>+<span class="hljs-number">7</span>;</span><br><span class="line"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">matrix</span></span></span><br><span class="line"><span class="hljs-class">&#123;</span></span><br><span class="line"><span class="hljs-keyword">int</span> a[<span class="hljs-number">5</span>][<span class="hljs-number">5</span>];</span><br><span class="line">&#125;S,T;</span><br><span class="line"><span class="hljs-function">matrix <span class="hljs-title">cheng</span><span class="hljs-params">(matrix a,matrix b)</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line">matrix c;</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">5</span>;i++)</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j=<span class="hljs-number">0</span>;j&lt;<span class="hljs-number">5</span>;j++)</span><br><span class="line">&#123;</span><br><span class="line">c.a[i][j]=<span class="hljs-number">0</span>;</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> k=<span class="hljs-number">0</span>;k&lt;<span class="hljs-number">5</span>;k++)</span><br><span class="line">c.a[i][j]=(c.a[i][j]+<span class="hljs-number">1l</span>l*a.a[i][k]*b.a[k][j]%Mod)%Mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">return</span> c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line">freopen(<span class="hljs-string">"obsession.in"</span>,<span class="hljs-string">"r"</span>,<span class="hljs-built_in">stdin</span>);</span><br><span class="line">freopen(<span class="hljs-string">"obsession.out"</span>,<span class="hljs-string">"w"</span>,<span class="hljs-built_in">stdout</span>);</span><br><span class="line"><span class="hljs-keyword">int</span> Case=gi();</span><br><span class="line"><span class="hljs-keyword">while</span>(Case--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="hljs-keyword">int</span> n=gi();</span><br><span class="line">S.a[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]=<span class="hljs-number">0</span>;S.a[<span class="hljs-number">0</span>][<span class="hljs-number">1</span>]=<span class="hljs-number">0</span>;S.a[<span class="hljs-number">0</span>][<span class="hljs-number">2</span>]=<span class="hljs-number">1</span>;S.a[<span class="hljs-number">0</span>][<span class="hljs-number">3</span>]=<span class="hljs-number">2</span>;S.a[<span class="hljs-number">0</span>][<span class="hljs-number">4</span>]=<span class="hljs-number">2</span>;</span><br><span class="line"></span><br><span class="line">T.a[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]=<span class="hljs-number">0</span>;T.a[<span class="hljs-number">0</span>][<span class="hljs-number">1</span>]=<span class="hljs-number">1</span>;T.a[<span class="hljs-number">0</span>][<span class="hljs-number">2</span>]=<span class="hljs-number">0</span>;T.a[<span class="hljs-number">0</span>][<span class="hljs-number">3</span>]=<span class="hljs-number">0</span>;T.a[<span class="hljs-number">0</span>][<span class="hljs-number">4</span>]=<span class="hljs-number">0</span>;</span><br><span class="line">T.a[<span class="hljs-number">1</span>][<span class="hljs-number">0</span>]=<span class="hljs-number">1</span>;T.a[<span class="hljs-number">1</span>][<span class="hljs-number">1</span>]=<span class="hljs-number">1</span>;T.a[<span class="hljs-number">1</span>][<span class="hljs-number">2</span>]=<span class="hljs-number">0</span>;T.a[<span class="hljs-number">1</span>][<span class="hljs-number">3</span>]=<span class="hljs-number">0</span>;T.a[<span class="hljs-number">1</span>][<span class="hljs-number">4</span>]=<span class="hljs-number">0</span>;</span><br><span class="line">T.a[<span class="hljs-number">2</span>][<span class="hljs-number">0</span>]=<span class="hljs-number">0</span>;T.a[<span class="hljs-number">2</span>][<span class="hljs-number">1</span>]=<span class="hljs-number">0</span>;T.a[<span class="hljs-number">2</span>][<span class="hljs-number">2</span>]=<span class="hljs-number">0</span>;T.a[<span class="hljs-number">2</span>][<span class="hljs-number">3</span>]=<span class="hljs-number">1</span>;T.a[<span class="hljs-number">2</span>][<span class="hljs-number">4</span>]=<span class="hljs-number">0</span>;</span><br><span class="line">T.a[<span class="hljs-number">3</span>][<span class="hljs-number">0</span>]=<span class="hljs-number">0</span>;T.a[<span class="hljs-number">3</span>][<span class="hljs-number">1</span>]=<span class="hljs-number">2</span>;T.a[<span class="hljs-number">3</span>][<span class="hljs-number">2</span>]=<span class="hljs-number">1</span>;T.a[<span class="hljs-number">3</span>][<span class="hljs-number">3</span>]=<span class="hljs-number">1</span>;T.a[<span class="hljs-number">3</span>][<span class="hljs-number">4</span>]=<span class="hljs-number">0</span>;</span><br><span class="line">T.a[<span class="hljs-number">4</span>][<span class="hljs-number">0</span>]=<span class="hljs-number">0</span>;T.a[<span class="hljs-number">4</span>][<span class="hljs-number">1</span>]=Mod<span class="hljs-number">-1</span>;T.a[<span class="hljs-number">4</span>][<span class="hljs-number">2</span>]=<span class="hljs-number">0</span>;T.a[<span class="hljs-number">4</span>][<span class="hljs-number">3</span>]=<span class="hljs-number">0</span>;T.a[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>]=<span class="hljs-number">1</span>;</span><br><span class="line"><span class="hljs-keyword">if</span>(n==<span class="hljs-number">1</span>)&#123;<span class="hljs-built_in">puts</span>(<span class="hljs-string">"0"</span>);<span class="hljs-keyword">continue</span>;&#125;</span><br><span class="line">n-=<span class="hljs-number">2</span>;</span><br><span class="line"><span class="hljs-keyword">while</span>(n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="hljs-keyword">if</span>(n&amp;<span class="hljs-number">1</span>)S=cheng(S,T);</span><br><span class="line">T=cheng(T,T);n&gt;&gt;=<span class="hljs-number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-built_in">printf</span>(<span class="hljs-string">"%d\n"</span>,S.a[<span class="hljs-number">0</span>][<span class="hljs-number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;传送门&quot;&gt;&lt;a href=&quot;#传送门&quot; class=&quot;headerlink&quot; title=&quot;传送门&quot;&gt;&lt;/a&gt;传送门&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://loj.ac/problem/3086&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Loj&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Solution" scheme="https://blog.mle-world.cn/categories/Solution/"/>
    
    
      <category term="递推" scheme="https://blog.mle-world.cn/tags/%E9%80%92%E6%8E%A8/"/>
    
      <category term="矩阵快速幂" scheme="https://blog.mle-world.cn/tags/%E7%9F%A9%E9%98%B5%E5%BF%AB%E9%80%9F%E5%B9%82/"/>
    
  </entry>
  
  <entry>
    <title>GX|GZOI2019</title>
    <link href="https://blog.mle-world.cn/gx-gzoi2019/"/>
    <id>https://blog.mle-world.cn/gx-gzoi2019/</id>
    <published>2019-04-29T00:04:06.000Z</published>
    <updated>2019-04-30T05:04:56.998Z</updated>
    
    <content type="html"><![CDATA[<p>没有摘要<br><a id="more"></a></p><p><a href="https://blog.mle-world.cn/Summary/solution/GX%7CGZOI2019.pdf">戳我看总结</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;没有摘要&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Summary" scheme="https://blog.mle-world.cn/categories/Summary/"/>
    
    
      <category term="省选题解" scheme="https://blog.mle-world.cn/tags/%E7%9C%81%E9%80%89%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>[GXOI/GZOI2019]特技飞行</title>
    <link href="https://blog.mle-world.cn/gxoi-gzoi2019-%E7%89%B9%E6%8A%80%E9%A3%9E%E8%A1%8C/"/>
    <id>https://blog.mle-world.cn/gxoi-gzoi2019-特技飞行/</id>
    <published>2019-04-28T10:04:52.000Z</published>
    <updated>2019-04-28T10:10:27.541Z</updated>
    
    <content type="html"><![CDATA[<h2 id="传送门"><a href="#传送门" class="headerlink" title="传送门"></a>传送门</h2><p><a href="https://loj.ac/problem/3085" target="_blank" rel="noopener">Loj</a></p><a id="more"></a><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>强行二合一海星…</p><h3 id="c的贡献"><a href="#c的贡献" class="headerlink" title="c的贡献"></a>c的贡献</h3><p>直接曼哈顿距离转切比雪夫距离然后扫描线就好了.<br><figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ll ans=<span class="hljs-number">0</span>;</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=tot;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="hljs-keyword">int</span> Y=lower_bound(o+<span class="hljs-number">1</span>,o+len+<span class="hljs-number">1</span>,p[i].y)-o;</span><br><span class="line"><span class="hljs-keyword">if</span>(p[i].opt)modify(Y,p[i].opt);</span><br><span class="line"><span class="hljs-keyword">else</span> ans+=query(Y)&gt;<span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="a-b的贡献"><a href="#a-b的贡献" class="headerlink" title="a,b的贡献"></a>a,b的贡献</h3><p>考虑显然可以全用<code>对向交换</code>达成目标,那么现在问题转换成了:如何使用最多的<code>擦肩而过</code>满足条件.<br>每次的<code>对向交换</code>在最终的排列p上的作用体现即为交换了某两个元素的位置,所以我们只需要用最小的交换次数将p还原成原排列即可.<br><figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)f[i]=i;</span><br><span class="line">sort(f+<span class="hljs-number">1</span>,f+n+<span class="hljs-number">1</span>,cmp);<span class="hljs-keyword">int</span> num=<span class="hljs-number">0</span>;</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)g[f[i]]=i;</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="hljs-keyword">if</span>(f[i]!=i)</span><br><span class="line">f[g[i]]=f[i],g[f[i]]=g[i],num++;</span><br></pre></td></tr></table></figure></p><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><p>交点不能够乱算…<br><figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">/*</span></span><br><span class="line"><span class="hljs-comment">  mail: mleautomaton@foxmail.com</span></span><br><span class="line"><span class="hljs-comment">  author: MLEAutoMaton</span></span><br><span class="line"><span class="hljs-comment">  This Code is made by MLEAutoMaton</span></span><br><span class="line"><span class="hljs-comment">*/</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;</span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> re register</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> file(a) freopen(a<span class="hljs-meta-string">".in"</span>,<span class="hljs-meta-string">"r"</span>,stdin);freopen(a<span class="hljs-meta-string">".out"</span>,<span class="hljs-meta-string">"w"</span>,stdout)</span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">inline</span> <span class="hljs-keyword">int</span> <span class="hljs-title">gi</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line"><span class="hljs-keyword">int</span> f=<span class="hljs-number">1</span>,sum=<span class="hljs-number">0</span>;<span class="hljs-keyword">char</span> ch=getchar();</span><br><span class="line"><span class="hljs-keyword">while</span>(ch&gt;<span class="hljs-string">'9'</span> || ch&lt;<span class="hljs-string">'0'</span>)&#123;<span class="hljs-keyword">if</span>(ch==<span class="hljs-string">'-'</span>)f=<span class="hljs-number">-1</span>;ch=getchar();&#125;</span><br><span class="line"><span class="hljs-keyword">while</span>(ch&gt;=<span class="hljs-string">'0'</span> &amp;&amp; ch&lt;=<span class="hljs-string">'9'</span>)&#123;sum=(sum&lt;&lt;<span class="hljs-number">3</span>)+(sum&lt;&lt;<span class="hljs-number">1</span>)+ch-<span class="hljs-string">'0'</span>;ch=getchar();&#125;</span><br><span class="line"><span class="hljs-keyword">return</span> f*sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> N=<span class="hljs-number">1000010</span>;</span><br><span class="line"><span class="hljs-keyword">const</span> <span class="hljs-keyword">double</span> eps=<span class="hljs-number">1e-10</span>;</span><br><span class="line"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">point</span></span></span><br><span class="line"><span class="hljs-class">&#123;</span></span><br><span class="line"><span class="hljs-keyword">double</span> x,y;</span><br><span class="line"><span class="hljs-keyword">int</span> opt;</span><br><span class="line"><span class="hljs-keyword">bool</span> <span class="hljs-keyword">operator</span>&lt;(<span class="hljs-keyword">const</span> point &amp;b)<span class="hljs-keyword">const</span>&#123;<span class="hljs-keyword">return</span> x&lt;b.x;&#125;</span><br><span class="line">&#125;p[N];</span><br><span class="line"><span class="hljs-keyword">double</span> o[N];</span><br><span class="line"><span class="hljs-keyword">int</span> n,a,b,c,x_st,x_ed,Y0[N],Y1[N],tot,len;</span><br><span class="line"><span class="hljs-keyword">typedef</span> pair&lt;<span class="hljs-keyword">double</span>,<span class="hljs-keyword">int</span>&gt; pii;</span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> mp make_pair</span></span><br><span class="line"><span class="hljs-built_in">set</span>&lt;pii&gt;se;</span><br><span class="line"><span class="hljs-keyword">int</span> C[N],f[N],g[N];</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">cmp</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a,<span class="hljs-keyword">int</span> b)</span></span>&#123;<span class="hljs-keyword">return</span> Y1[a]&lt;Y1[b];&#125;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">lowbit</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x)</span></span>&#123;<span class="hljs-keyword">return</span> x&amp;(-x);&#125;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">modify</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x,<span class="hljs-keyword">int</span> d)</span></span>&#123;<span class="hljs-keyword">while</span>(x&lt;=len)C[x]+=d,x+=lowbit(x);&#125;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">query</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x)</span></span>&#123;<span class="hljs-keyword">int</span> ret=<span class="hljs-number">0</span>;<span class="hljs-keyword">while</span>(x)ret+=C[x],x-=lowbit(x);<span class="hljs-keyword">return</span> ret;&#125;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line">freopen(<span class="hljs-string">"aerobatics.in"</span>,<span class="hljs-string">"r"</span>,<span class="hljs-built_in">stdin</span>);</span><br><span class="line">freopen(<span class="hljs-string">"aerobatics.out"</span>,<span class="hljs-string">"w"</span>,<span class="hljs-built_in">stdout</span>);</span><br><span class="line">n=gi();a=gi();b=gi();c=gi();x_st=gi();x_ed=gi();</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)Y0[i]=gi();</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)Y1[i]=gi();</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=n;i;i--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">auto</span> j:se)</span><br><span class="line">&#123;</span><br><span class="line"><span class="hljs-keyword">if</span>(j.first&gt;Y1[i])<span class="hljs-keyword">break</span>;<span class="hljs-keyword">int</span> I=j.second;</span><br><span class="line"><span class="hljs-keyword">double</span> k1=(<span class="hljs-keyword">double</span>)((Y0[i]-Y1[i])*<span class="hljs-number">1.</span>/(x_st-x_ed)),b1=(<span class="hljs-keyword">double</span>)(Y0[i]-k1*<span class="hljs-number">1.</span>*x_st),k2=(<span class="hljs-keyword">double</span>)((Y0[I]-Y1[I])*<span class="hljs-number">1.</span>/(x_st-x_ed)),b2=(<span class="hljs-keyword">double</span>)(Y0[I]-k2*<span class="hljs-number">1.</span>*x_st);</span><br><span class="line"><span class="hljs-keyword">double</span> x=(<span class="hljs-keyword">double</span>)((b1-b2)*<span class="hljs-number">1.</span>/(k2-k1)),y=k1*<span class="hljs-number">1.</span>*x+b1;</span><br><span class="line">p[++tot]=(point)&#123;x+y,x-y,<span class="hljs-number">0</span>&#125;;o[++len]=x-y;</span><br><span class="line">&#125;</span><br><span class="line">se.insert(mp(Y1[i],i));</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">int</span> jd=tot;</span><br><span class="line"><span class="hljs-keyword">int</span> k=gi();</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=k;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="hljs-keyword">int</span> x=gi(),y=gi(),r=gi();</span><br><span class="line">x+=y;y=x-y-y;</span><br><span class="line">p[++tot]=(point)&#123;x-r-eps,y-r-eps,<span class="hljs-number">1</span>&#125;;</span><br><span class="line">p[++tot]=(point)&#123;x-r-eps,y+r+eps,<span class="hljs-number">-1</span>&#125;;</span><br><span class="line">p[++tot]=(point)&#123;x+r+eps,y-r-eps,<span class="hljs-number">-1</span>&#125;;</span><br><span class="line">p[++tot]=(point)&#123;x+r+eps,y+r+eps,<span class="hljs-number">1</span>&#125;;</span><br><span class="line">o[++len]=y-r-eps,o[++len]=y+r+eps;</span><br><span class="line">&#125;</span><br><span class="line">sort(p+<span class="hljs-number">1</span>,p+tot+<span class="hljs-number">1</span>);sort(o+<span class="hljs-number">1</span>,o+len+<span class="hljs-number">1</span>);len=unique(o+<span class="hljs-number">1</span>,o+len+<span class="hljs-number">1</span>)-o<span class="hljs-number">-1</span>;</span><br><span class="line">ll ans=<span class="hljs-number">0</span>;</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=tot;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="hljs-keyword">int</span> Y=lower_bound(o+<span class="hljs-number">1</span>,o+len+<span class="hljs-number">1</span>,p[i].y)-o;</span><br><span class="line"><span class="hljs-keyword">if</span>(p[i].opt)modify(Y,p[i].opt);</span><br><span class="line"><span class="hljs-keyword">else</span> ans+=query(Y)&gt;<span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">ans=<span class="hljs-number">1l</span>l*ans*c+<span class="hljs-number">1l</span>l*jd*a;</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)f[i]=i;</span><br><span class="line">sort(f+<span class="hljs-number">1</span>,f+n+<span class="hljs-number">1</span>,cmp);<span class="hljs-keyword">int</span> num=<span class="hljs-number">0</span>;</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)g[f[i]]=i;</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="hljs-keyword">if</span>(f[i]!=i)</span><br><span class="line">f[g[i]]=f[i],g[f[i]]=g[i],num++;</span><br><span class="line">ll ans2=ans+<span class="hljs-number">1l</span>l*(jd-num)*(b-a);</span><br><span class="line"><span class="hljs-keyword">if</span>(ans&gt;ans2)swap(ans,ans2);</span><br><span class="line"><span class="hljs-built_in">printf</span>(<span class="hljs-string">"%lld %lld\n"</span>,ans,ans2);</span><br><span class="line"><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">undef</span> mp</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;传送门&quot;&gt;&lt;a href=&quot;#传送门&quot; class=&quot;headerlink&quot; title=&quot;传送门&quot;&gt;&lt;/a&gt;传送门&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://loj.ac/problem/3085&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Loj&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Solution" scheme="https://blog.mle-world.cn/categories/Solution/"/>
    
    
      <category term="dp" scheme="https://blog.mle-world.cn/tags/dp/"/>
    
      <category term="计算几何" scheme="https://blog.mle-world.cn/tags/%E8%AE%A1%E7%AE%97%E5%87%A0%E4%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>[GXOI/GZOI2019]宝牌一大堆</title>
    <link href="https://blog.mle-world.cn/gxoi-gzoi2019-%E5%AE%9D%E7%89%8C%E4%B8%80%E5%A4%A7%E5%A0%86/"/>
    <id>https://blog.mle-world.cn/gxoi-gzoi2019-宝牌一大堆/</id>
    <published>2019-04-28T09:27:10.000Z</published>
    <updated>2019-04-28T10:04:41.068Z</updated>
    
    <content type="html"><![CDATA[<h2 id="传送门"><a href="#传送门" class="headerlink" title="传送门"></a>传送门</h2><p><a href="https://loj.ac/problem/3084" target="_blank" rel="noopener">Loj</a></p><a id="more"></a><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>考虑如果将杠子看成刻子+1,那么就只有三种和牌的方式:</p><ol><li>$3*4+2$</li><li>七对子</li><li>国士无双</li></ol><p>下面用$val$表示对应的收益,$chk$表示更新:<br><figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function">ll <span class="hljs-title">val</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x,<span class="hljs-keyword">int</span> y)</span></span>&#123;<span class="hljs-keyword">return</span> <span class="hljs-number">1l</span>l*c[cnt[x]][y]*(flag[x]?bin[y]:<span class="hljs-number">1</span>);&#125;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">chk</span><span class="hljs-params">(ll &amp;x,ll y)</span></span>&#123;x=x&gt;y?x:y;&#125;</span><br></pre></td></tr></table></figure></p><h3 id="七对子"><a href="#七对子" class="headerlink" title="七对子"></a>七对子</h3><p>我们不妨设$f_{i,j}$表示枚举完了前$i$种牌,选出来了$j$个雀子的最大收益.<br>很容易转移:</p><p>$f_{i+1,j}=max(f_{i+1,j},f_{i,j}*val)$<br>然后答案就是$f_{34,7}$<br><figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function">ll <span class="hljs-title">solve2</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line"><span class="hljs-keyword">static</span> ll dp[<span class="hljs-number">35</span>][<span class="hljs-number">8</span>];<span class="hljs-built_in">memset</span>(dp,<span class="hljs-number">0</span>,<span class="hljs-keyword">sizeof</span>(dp));</span><br><span class="line">dp[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]=<span class="hljs-number">1</span>;</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">34</span>;i++)</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j=<span class="hljs-number">0</span>;j&lt;=<span class="hljs-number">7</span>;j++)</span><br><span class="line">&#123;</span><br><span class="line">chk(dp[i+<span class="hljs-number">1</span>][j],dp[i][j]);</span><br><span class="line"><span class="hljs-keyword">if</span>(j&lt;<span class="hljs-number">7</span>)chk(dp[i+<span class="hljs-number">1</span>][j+<span class="hljs-number">1</span>],<span class="hljs-number">1l</span>l*dp[i][j]*val(i+<span class="hljs-number">1</span>,<span class="hljs-number">2</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">return</span> dp[<span class="hljs-number">34</span>][<span class="hljs-number">7</span>]*<span class="hljs-number">7l</span>l;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="国士无双"><a href="#国士无双" class="headerlink" title="国士无双"></a>国士无双</h3><p>发现只有给出的13种牌有用,那么接着$dp$!<br>设$dp_{i,j}$表示前$i$种牌(钦定的13种),现在有$j$张牌.<br>容易转移:<br>$dp_{i+1,j+1}=dp_{i,j}*val$<br>$dp_{i+1,j+2}$<br><figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function">ll <span class="hljs-title">solve3</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line"><span class="hljs-keyword">static</span> ll dp[<span class="hljs-number">14</span>][<span class="hljs-number">15</span>];<span class="hljs-built_in">memset</span>(dp,<span class="hljs-number">0</span>,<span class="hljs-keyword">sizeof</span>(dp));</span><br><span class="line">dp[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]=<span class="hljs-number">1</span>;</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">13</span>;i++)</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j=<span class="hljs-number">0</span>;j&lt;<span class="hljs-number">14</span>;j++)</span><br><span class="line"><span class="hljs-keyword">if</span>(dp[i][j])</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> k=<span class="hljs-number">1</span>;k&lt;=<span class="hljs-number">2</span> &amp;&amp; k&lt;=cnt[scholar[i+<span class="hljs-number">1</span>]];k++)</span><br><span class="line">chk(dp[i+<span class="hljs-number">1</span>][j+k],<span class="hljs-number">1l</span>l*dp[i][j]*val(scholar[i+<span class="hljs-number">1</span>],k));</span><br><span class="line"><span class="hljs-keyword">return</span> dp[<span class="hljs-number">13</span>][<span class="hljs-number">14</span>]*<span class="hljs-number">13</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="3-4-2"><a href="#3-4-2" class="headerlink" title="3*4+2"></a>3*4+2</h3><p>如果做过<code>麻将</code>那么你就会做出来这道题!<br>设$f_{i,j,k,a,b}$表示枚举了前$i$种牌,钦定以$i-1$开头的顺子有$j$个,以$i$开头的顺子有$k$个,已经组成了$a$个面子,$b$表示有无雀子.<br>然后一顿乱转移就是了.<br><figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function">ll <span class="hljs-title">solve1</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line"><span class="hljs-keyword">static</span> ll f[<span class="hljs-number">35</span>][<span class="hljs-number">3</span>][<span class="hljs-number">3</span>][<span class="hljs-number">5</span>][<span class="hljs-number">2</span>];<span class="hljs-built_in">memset</span>(f,<span class="hljs-number">0</span>,<span class="hljs-keyword">sizeof</span>(f));</span><br><span class="line">f[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>][<span class="hljs-number">0</span>][<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]=<span class="hljs-number">1</span>;</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">34</span>;i++)</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j=<span class="hljs-number">0</span>;j&lt;<span class="hljs-number">3</span>;j++)</span><br><span class="line"><span class="hljs-keyword">if</span>(!j || (i&gt;<span class="hljs-number">7</span> &amp;&amp; (i<span class="hljs-number">-7</span>)%<span class="hljs-number">9</span>!=<span class="hljs-number">1</span> &amp;&amp; (i<span class="hljs-number">-7</span>)%<span class="hljs-number">9</span>!=<span class="hljs-number">0</span>))</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> k=<span class="hljs-number">0</span>;k&lt;<span class="hljs-number">3</span>;k++)</span><br><span class="line"><span class="hljs-keyword">if</span>(!k || (i&gt;<span class="hljs-number">7</span> &amp;&amp; (i<span class="hljs-number">-7</span>)%<span class="hljs-number">9</span>!=<span class="hljs-number">8</span> &amp;&amp; (i<span class="hljs-number">-7</span>)%<span class="hljs-number">9</span>!=<span class="hljs-number">0</span>))</span><br><span class="line"><span class="hljs-keyword">if</span>(cnt[i+<span class="hljs-number">1</span>]&gt;=j+k)</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> a=j+k;a&lt;=<span class="hljs-number">4</span>;a++)</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> b=<span class="hljs-number">0</span>;b&lt;<span class="hljs-number">2</span>;b++)</span><br><span class="line"><span class="hljs-keyword">if</span>(f[i][j][k][a][b])</span><br><span class="line">&#123;</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> c=<span class="hljs-number">0</span>;c&lt;=<span class="hljs-number">2</span> &amp;&amp; j+k+c&lt;=cnt[i+<span class="hljs-number">1</span>] &amp;&amp; a+c&lt;=<span class="hljs-number">4</span>;c++)</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> d=<span class="hljs-number">0</span>;j+k+c+d*<span class="hljs-number">3</span>&lt;=cnt[i+<span class="hljs-number">1</span>] &amp;&amp; a+c+d&lt;=<span class="hljs-number">4</span>;d++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="hljs-keyword">int</span> use=j+k+c+d*<span class="hljs-number">3</span>;<span class="hljs-comment">//d是刻子.</span></span><br><span class="line">chk(f[i+<span class="hljs-number">1</span>][k][c][a+c+d][b],<span class="hljs-number">1l</span>l*f[i][j][k][a][b]*val(i+<span class="hljs-number">1</span>,use));</span><br><span class="line"><span class="hljs-keyword">if</span>(!b &amp;&amp; use+<span class="hljs-number">2</span>&lt;=cnt[i+<span class="hljs-number">1</span>])chk(f[i+<span class="hljs-number">1</span>][k][c][a+c+d][<span class="hljs-number">1</span>],<span class="hljs-number">1l</span>l*f[i][j][k][a][b]*val(i+<span class="hljs-number">1</span>,use+<span class="hljs-number">2</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">return</span> f[<span class="hljs-number">34</span>][<span class="hljs-number">0</span>][<span class="hljs-number">0</span>][<span class="hljs-number">4</span>][<span class="hljs-number">1</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><del>为什么没有杠子呢?</del><br>因为选杠子一定不优啊!</p><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">/*</span></span><br><span class="line"><span class="hljs-comment">  mail: mleautomaton@foxmail.com</span></span><br><span class="line"><span class="hljs-comment">  author: MLEAutoMaton</span></span><br><span class="line"><span class="hljs-comment">  This Code is made by MLEAutoMaton</span></span><br><span class="line"><span class="hljs-comment">*/</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;</span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> re register</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> file(a) freopen(a<span class="hljs-meta-string">".in"</span>,<span class="hljs-meta-string">"r"</span>,stdin);freopen(a<span class="hljs-meta-string">".out"</span>,<span class="hljs-meta-string">"w"</span>,stdout)</span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">inline</span> <span class="hljs-keyword">int</span> <span class="hljs-title">gi</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line"><span class="hljs-keyword">int</span> f=<span class="hljs-number">1</span>,sum=<span class="hljs-number">0</span>;<span class="hljs-keyword">char</span> ch=getchar();</span><br><span class="line"><span class="hljs-keyword">while</span>(ch&gt;<span class="hljs-string">'9'</span> || ch&lt;<span class="hljs-string">'0'</span>)&#123;<span class="hljs-keyword">if</span>(ch==<span class="hljs-string">'-'</span>)f=<span class="hljs-number">-1</span>;ch=getchar();&#125;</span><br><span class="line"><span class="hljs-keyword">while</span>(ch&gt;=<span class="hljs-string">'0'</span> &amp;&amp; ch&lt;=<span class="hljs-string">'9'</span>)&#123;sum=(sum&lt;&lt;<span class="hljs-number">3</span>)+(sum&lt;&lt;<span class="hljs-number">1</span>)+ch-<span class="hljs-string">'0'</span>;ch=getchar();&#125;</span><br><span class="line"><span class="hljs-keyword">return</span> f*sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">int</span> c[<span class="hljs-number">10</span>][<span class="hljs-number">10</span>],bin[<span class="hljs-number">5</span>]=&#123;<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">4</span>,<span class="hljs-number">8</span>,<span class="hljs-number">16</span>&#125;;</span><br><span class="line"><span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> N=<span class="hljs-number">1010</span>;</span><br><span class="line"><span class="hljs-keyword">int</span> cnt[N],flag[N];</span><br><span class="line"><span class="hljs-function">ll <span class="hljs-title">val</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x,<span class="hljs-keyword">int</span> y)</span></span>&#123;<span class="hljs-keyword">return</span> <span class="hljs-number">1l</span>l*c[cnt[x]][y]*(flag[x]?bin[y]:<span class="hljs-number">1</span>);&#125;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">chk</span><span class="hljs-params">(ll &amp;x,ll y)</span></span>&#123;x=x&gt;y?x:y;&#125;</span><br><span class="line"><span class="hljs-function">ll <span class="hljs-title">solve1</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line"><span class="hljs-keyword">static</span> ll f[<span class="hljs-number">35</span>][<span class="hljs-number">3</span>][<span class="hljs-number">3</span>][<span class="hljs-number">5</span>][<span class="hljs-number">2</span>];<span class="hljs-built_in">memset</span>(f,<span class="hljs-number">0</span>,<span class="hljs-keyword">sizeof</span>(f));</span><br><span class="line">f[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>][<span class="hljs-number">0</span>][<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]=<span class="hljs-number">1</span>;</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">34</span>;i++)</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j=<span class="hljs-number">0</span>;j&lt;<span class="hljs-number">3</span>;j++)</span><br><span class="line"><span class="hljs-keyword">if</span>(!j || (i&gt;<span class="hljs-number">7</span> &amp;&amp; (i<span class="hljs-number">-7</span>)%<span class="hljs-number">9</span>!=<span class="hljs-number">1</span> &amp;&amp; (i<span class="hljs-number">-7</span>)%<span class="hljs-number">9</span>!=<span class="hljs-number">0</span>))</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> k=<span class="hljs-number">0</span>;k&lt;<span class="hljs-number">3</span>;k++)</span><br><span class="line"><span class="hljs-keyword">if</span>(!k || (i&gt;<span class="hljs-number">7</span> &amp;&amp; (i<span class="hljs-number">-7</span>)%<span class="hljs-number">9</span>!=<span class="hljs-number">8</span> &amp;&amp; (i<span class="hljs-number">-7</span>)%<span class="hljs-number">9</span>!=<span class="hljs-number">0</span>))</span><br><span class="line"><span class="hljs-keyword">if</span>(cnt[i+<span class="hljs-number">1</span>]&gt;=j+k)</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> a=j+k;a&lt;=<span class="hljs-number">4</span>;a++)</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> b=<span class="hljs-number">0</span>;b&lt;<span class="hljs-number">2</span>;b++)</span><br><span class="line"><span class="hljs-keyword">if</span>(f[i][j][k][a][b])</span><br><span class="line">&#123;</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> c=<span class="hljs-number">0</span>;c&lt;=<span class="hljs-number">2</span> &amp;&amp; j+k+c&lt;=cnt[i+<span class="hljs-number">1</span>] &amp;&amp; a+c&lt;=<span class="hljs-number">4</span>;c++)</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> d=<span class="hljs-number">0</span>;j+k+c+d*<span class="hljs-number">3</span>&lt;=cnt[i+<span class="hljs-number">1</span>] &amp;&amp; a+c+d&lt;=<span class="hljs-number">4</span>;d++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="hljs-keyword">int</span> use=j+k+c+d*<span class="hljs-number">3</span>;<span class="hljs-comment">//d是刻子.</span></span><br><span class="line">chk(f[i+<span class="hljs-number">1</span>][k][c][a+c+d][b],<span class="hljs-number">1l</span>l*f[i][j][k][a][b]*val(i+<span class="hljs-number">1</span>,use));</span><br><span class="line"><span class="hljs-keyword">if</span>(!b &amp;&amp; use+<span class="hljs-number">2</span>&lt;=cnt[i+<span class="hljs-number">1</span>])chk(f[i+<span class="hljs-number">1</span>][k][c][a+c+d][<span class="hljs-number">1</span>],<span class="hljs-number">1l</span>l*f[i][j][k][a][b]*val(i+<span class="hljs-number">1</span>,use+<span class="hljs-number">2</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">return</span> f[<span class="hljs-number">34</span>][<span class="hljs-number">0</span>][<span class="hljs-number">0</span>][<span class="hljs-number">4</span>][<span class="hljs-number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-function">ll <span class="hljs-title">solve2</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line"><span class="hljs-keyword">static</span> ll dp[<span class="hljs-number">35</span>][<span class="hljs-number">8</span>];<span class="hljs-built_in">memset</span>(dp,<span class="hljs-number">0</span>,<span class="hljs-keyword">sizeof</span>(dp));</span><br><span class="line">dp[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]=<span class="hljs-number">1</span>;</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">34</span>;i++)</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j=<span class="hljs-number">0</span>;j&lt;=<span class="hljs-number">7</span>;j++)</span><br><span class="line">&#123;</span><br><span class="line">chk(dp[i+<span class="hljs-number">1</span>][j],dp[i][j]);</span><br><span class="line"><span class="hljs-keyword">if</span>(j&lt;<span class="hljs-number">7</span>)chk(dp[i+<span class="hljs-number">1</span>][j+<span class="hljs-number">1</span>],<span class="hljs-number">1l</span>l*dp[i][j]*val(i+<span class="hljs-number">1</span>,<span class="hljs-number">2</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">return</span> dp[<span class="hljs-number">34</span>][<span class="hljs-number">7</span>]*<span class="hljs-number">7l</span>l;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">int</span> scholar[<span class="hljs-number">14</span>]=&#123;<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>,<span class="hljs-number">7</span>,<span class="hljs-number">8</span>,<span class="hljs-number">16</span>,<span class="hljs-number">17</span>,<span class="hljs-number">25</span>,<span class="hljs-number">26</span>,<span class="hljs-number">34</span>&#125;;</span><br><span class="line"><span class="hljs-function">ll <span class="hljs-title">solve3</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line"><span class="hljs-keyword">static</span> ll dp[<span class="hljs-number">14</span>][<span class="hljs-number">15</span>];<span class="hljs-built_in">memset</span>(dp,<span class="hljs-number">0</span>,<span class="hljs-keyword">sizeof</span>(dp));</span><br><span class="line">dp[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]=<span class="hljs-number">1</span>;</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">13</span>;i++)</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j=<span class="hljs-number">0</span>;j&lt;<span class="hljs-number">14</span>;j++)</span><br><span class="line"><span class="hljs-keyword">if</span>(dp[i][j])</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> k=<span class="hljs-number">1</span>;k&lt;=<span class="hljs-number">2</span> &amp;&amp; k&lt;=cnt[scholar[i+<span class="hljs-number">1</span>]];k++)</span><br><span class="line">chk(dp[i+<span class="hljs-number">1</span>][j+k],<span class="hljs-number">1l</span>l*dp[i][j]*val(scholar[i+<span class="hljs-number">1</span>],k));</span><br><span class="line"><span class="hljs-keyword">return</span> dp[<span class="hljs-number">13</span>][<span class="hljs-number">14</span>]*<span class="hljs-number">13</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">read</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line"><span class="hljs-keyword">char</span> ch=getchar();</span><br><span class="line"><span class="hljs-keyword">while</span>((ch&lt;<span class="hljs-string">'0'</span> || ch&gt;<span class="hljs-string">'9'</span>) &amp;&amp; (ch!=<span class="hljs-string">'E'</span> &amp;&amp; ch!=<span class="hljs-string">'S'</span> &amp;&amp; ch!=<span class="hljs-string">'W'</span> &amp;&amp; ch!=<span class="hljs-string">'N'</span> &amp;&amp; ch!=<span class="hljs-string">'Z'</span> &amp;&amp; ch!=<span class="hljs-string">'F'</span> &amp;&amp; ch!=<span class="hljs-string">'B'</span>))ch=getchar();</span><br><span class="line"><span class="hljs-keyword">if</span>(ch==<span class="hljs-string">'0'</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line"><span class="hljs-keyword">if</span>(ch==<span class="hljs-string">'E'</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;</span><br><span class="line"><span class="hljs-keyword">if</span>(ch==<span class="hljs-string">'S'</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">2</span>;</span><br><span class="line"><span class="hljs-keyword">if</span>(ch==<span class="hljs-string">'W'</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">3</span>;</span><br><span class="line"><span class="hljs-keyword">if</span>(ch==<span class="hljs-string">'N'</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">4</span>;</span><br><span class="line"><span class="hljs-keyword">if</span>(ch==<span class="hljs-string">'Z'</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">5</span>;</span><br><span class="line"><span class="hljs-keyword">if</span>(ch==<span class="hljs-string">'F'</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">6</span>;</span><br><span class="line"><span class="hljs-keyword">if</span>(ch==<span class="hljs-string">'B'</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">7</span>;</span><br><span class="line"><span class="hljs-keyword">int</span> num=ch-<span class="hljs-string">'0'</span>;ch=getchar();</span><br><span class="line"><span class="hljs-keyword">if</span>(ch==<span class="hljs-string">'m'</span>)num+=<span class="hljs-number">25</span>;</span><br><span class="line"><span class="hljs-keyword">if</span>(ch==<span class="hljs-string">'p'</span>)num+=<span class="hljs-number">7</span>;</span><br><span class="line"><span class="hljs-keyword">if</span>(ch==<span class="hljs-string">'s'</span>)num+=<span class="hljs-number">16</span>;</span><br><span class="line"><span class="hljs-keyword">return</span> num;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">init</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line">c[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]=<span class="hljs-number">1</span>;</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=<span class="hljs-number">4</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">c[i][<span class="hljs-number">0</span>]=c[i][i]=<span class="hljs-number">1</span>;</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j=<span class="hljs-number">1</span>;j&lt;i;j++)</span><br><span class="line">c[i][j]=c[i<span class="hljs-number">-1</span>][j]+c[i<span class="hljs-number">-1</span>][j<span class="hljs-number">-1</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line">freopen(<span class="hljs-string">"doraippai.in"</span>,<span class="hljs-string">"r"</span>,<span class="hljs-built_in">stdin</span>);</span><br><span class="line">freopen(<span class="hljs-string">"doraippai.out"</span>,<span class="hljs-string">"w"</span>,<span class="hljs-built_in">stdout</span>);</span><br><span class="line"><span class="hljs-keyword">int</span> T=gi();init();</span><br><span class="line"><span class="hljs-keyword">while</span>(T--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=<span class="hljs-number">34</span>;i++)cnt[i]=<span class="hljs-number">4</span>,flag[i]=<span class="hljs-number">0</span>;<span class="hljs-keyword">int</span> x;</span><br><span class="line"><span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>)&#123;x=read();<span class="hljs-keyword">if</span>(!x)<span class="hljs-keyword">break</span>;cnt[x]--;&#125;</span><br><span class="line"><span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>)&#123;x=read();<span class="hljs-keyword">if</span>(!x)<span class="hljs-keyword">break</span>;flag[x]=<span class="hljs-number">1</span>;&#125;</span><br><span class="line"><span class="hljs-built_in">printf</span>(<span class="hljs-string">"%lld\n"</span>,max(solve1(),max(solve2(),solve3())));</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;传送门&quot;&gt;&lt;a href=&quot;#传送门&quot; class=&quot;headerlink&quot; title=&quot;传送门&quot;&gt;&lt;/a&gt;传送门&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://loj.ac/problem/3084&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Loj&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Solution" scheme="https://blog.mle-world.cn/categories/Solution/"/>
    
    
      <category term="dp" scheme="https://blog.mle-world.cn/tags/dp/"/>
    
  </entry>
  
  <entry>
    <title>[GXOI/GZOI2019]与或和</title>
    <link href="https://blog.mle-world.cn/gxoi-gzoi2019-%E4%B8%8E%E6%88%96%E5%92%8C/"/>
    <id>https://blog.mle-world.cn/gxoi-gzoi2019-与或和/</id>
    <published>2019-04-28T09:20:55.000Z</published>
    <updated>2019-04-28T09:26:43.113Z</updated>
    
    <content type="html"><![CDATA[<h2 id="传送门"><a href="#传送门" class="headerlink" title="传送门"></a>传送门</h2><p><a href="https://loj.ac/problem/3083" target="_blank" rel="noopener">Loj</a></p><a id="more"></a><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>考虑二进制拆位,那么现在对于每一位矩阵只可能是$0$或$1$,具有贡献的就是$1$.</p><ol><li>$\&amp;$运算如果要是$1$,只能够全是$1$.</li><li>$|$运算如果要是有一个$1$,那么就是$1$.</li></ol><p>发现这个$|$不好算,那么考虑它的逆命题:</p><ul><li>如果全是$0$,那么就是$0$.</li></ul><p>发现这是一个相同的过程,接下来就是求全$0/1$的过程了.<br>首先算每一个点能够向上扩展多少,枚举$(i,j)$作为矩形的右下角,对于前面的元素维护一个向上扩展的单调栈,直接算贡献就好了.<br>emm,注意以$(i,j)$为右下角的矩阵个数为$i*j$.</p><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">/*</span></span><br><span class="line"><span class="hljs-comment">  mail: mleautomaton@foxmail.com</span></span><br><span class="line"><span class="hljs-comment">  author: MLEAutoMaton</span></span><br><span class="line"><span class="hljs-comment">  This Code is made by MLEAutoMaton</span></span><br><span class="line"><span class="hljs-comment">*/</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;</span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> re register</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> file(a) freopen(a<span class="hljs-meta-string">".in"</span>,<span class="hljs-meta-string">"r"</span>,stdin);freopen(a<span class="hljs-meta-string">".out"</span>,<span class="hljs-meta-string">"w"</span>,stdout)</span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">inline</span> <span class="hljs-keyword">int</span> <span class="hljs-title">gi</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line"><span class="hljs-keyword">int</span> f=<span class="hljs-number">1</span>,sum=<span class="hljs-number">0</span>;<span class="hljs-keyword">char</span> ch=g<span class="hljs-comment">/*</span></span><br><span class="line"><span class="hljs-comment">  mail: mleautomaton@foxmail.com</span></span><br><span class="line"><span class="hljs-comment">  author: MLEAutoMaton</span></span><br><span class="line"><span class="hljs-comment">  This Code is made by MLEAutoMaton</span></span><br><span class="line"><span class="hljs-comment">*/</span></span><br><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">#include&lt;stdlib.h&gt;</span><br><span class="line">#include&lt;<span class="hljs-built_in">string</span>.h&gt;</span><br><span class="line">#include&lt;math.h&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">#include&lt;<span class="hljs-built_in">queue</span>&gt;</span><br><span class="line">#include&lt;<span class="hljs-built_in">set</span>&gt;</span><br><span class="line">#include&lt;<span class="hljs-built_in">map</span>&gt;</span><br><span class="line">#include&lt;iostream&gt;</span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;</span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> re register</span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">inline</span> <span class="hljs-keyword">int</span> <span class="hljs-title">gi</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line"><span class="hljs-keyword">int</span> f=<span class="hljs-number">1</span>,sum=<span class="hljs-number">0</span>;<span class="hljs-keyword">char</span> ch=getchar();</span><br><span class="line"><span class="hljs-keyword">while</span>(ch&gt;<span class="hljs-string">'9'</span> || ch&lt;<span class="hljs-string">'0'</span>)&#123;<span class="hljs-keyword">if</span>(ch==<span class="hljs-string">'-'</span>)f=<span class="hljs-number">-1</span>;ch=getchar();&#125;</span><br><span class="line"><span class="hljs-keyword">while</span>(ch&gt;=<span class="hljs-string">'0'</span> &amp;&amp; ch&lt;=<span class="hljs-string">'9'</span>)&#123;sum=(sum&lt;&lt;<span class="hljs-number">3</span>)+(sum&lt;&lt;<span class="hljs-number">1</span>)+ch-<span class="hljs-string">'0'</span>;ch=getchar();&#125;</span><br><span class="line"><span class="hljs-keyword">return</span> f*sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> N=<span class="hljs-number">1010</span>,Mod=<span class="hljs-number">1e9</span>+<span class="hljs-number">7</span>;</span><br><span class="line"><span class="hljs-keyword">int</span> n,a[N][N],A[N][N],c[N][N],sta[N],top;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line">freopen(<span class="hljs-string">"andorsum.in"</span>,<span class="hljs-string">"r"</span>,<span class="hljs-built_in">stdin</span>);</span><br><span class="line">freopen(<span class="hljs-string">"andorsum.out"</span>,<span class="hljs-string">"w"</span>,<span class="hljs-built_in">stdout</span>);</span><br><span class="line">n=gi();</span><br><span class="line"><span class="hljs-keyword">for</span>(re <span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="hljs-keyword">for</span>(re <span class="hljs-keyword">int</span> j=<span class="hljs-number">1</span>;j&lt;=n;j++)</span><br><span class="line">a[i][j]=gi();</span><br><span class="line"><span class="hljs-keyword">int</span> val=<span class="hljs-number">1</span>;ll ans=<span class="hljs-number">0</span>;</span><br><span class="line"><span class="hljs-keyword">for</span>(re <span class="hljs-keyword">int</span> k=<span class="hljs-number">0</span>;k&lt;<span class="hljs-number">31</span>;k++,val&lt;&lt;=<span class="hljs-number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="hljs-keyword">for</span>(re <span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="hljs-keyword">for</span>(re <span class="hljs-keyword">int</span> j=<span class="hljs-number">1</span>;j&lt;=n;j++)</span><br><span class="line">A[i][j]=(a[i][j]&gt;&gt;k)&amp;<span class="hljs-number">1</span>;</span><br><span class="line"><span class="hljs-keyword">for</span>(re <span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="hljs-keyword">for</span>(re <span class="hljs-keyword">int</span> j=<span class="hljs-number">1</span>;j&lt;=n;j++)</span><br><span class="line"><span class="hljs-keyword">if</span>(A[i][j])c[i][j]=c[i<span class="hljs-number">-1</span>][j]+<span class="hljs-number">1</span>;</span><br><span class="line"><span class="hljs-keyword">else</span> c[i][j]=<span class="hljs-number">0</span>;</span><br><span class="line"><span class="hljs-keyword">for</span>(re <span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line">top=<span class="hljs-number">0</span>;ll sum=<span class="hljs-number">0</span>;</span><br><span class="line"><span class="hljs-keyword">for</span>(re <span class="hljs-keyword">int</span> j=<span class="hljs-number">1</span>;j&lt;=n;j++)</span><br><span class="line">&#123;</span><br><span class="line">sum=(sum+c[i][j])%Mod;</span><br><span class="line"><span class="hljs-keyword">while</span>(top &amp;&amp; c[i][sta[top]]&gt;=c[i][j])</span><br><span class="line">&#123;</span><br><span class="line">sum=(sum<span class="hljs-number">-1l</span>l*(c[i][sta[top]]-c[i][j])*(sta[top]-sta[top<span class="hljs-number">-1</span>])+Mod)%Mod;</span><br><span class="line">top--;</span><br><span class="line">&#125;</span><br><span class="line">sta[++top]=j;</span><br><span class="line">ans=(ans+<span class="hljs-number">1l</span>l*sum*val%Mod)%Mod;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-built_in">printf</span>(<span class="hljs-string">"%lld "</span>,ans);</span><br><span class="line">val=<span class="hljs-number">1</span>;ans=<span class="hljs-number">0</span>;</span><br><span class="line"><span class="hljs-keyword">for</span>(re <span class="hljs-keyword">int</span> k=<span class="hljs-number">0</span>;k&lt;<span class="hljs-number">31</span>;k++,val&lt;&lt;=<span class="hljs-number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="hljs-keyword">for</span>(re <span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="hljs-keyword">for</span>(re <span class="hljs-keyword">int</span> j=<span class="hljs-number">1</span>;j&lt;=n;j++)</span><br><span class="line">A[i][j]=((a[i][j]&gt;&gt;k)&amp;<span class="hljs-number">1</span>)^<span class="hljs-number">1</span>;</span><br><span class="line"><span class="hljs-keyword">for</span>(re <span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="hljs-keyword">for</span>(re <span class="hljs-keyword">int</span> j=<span class="hljs-number">1</span>;j&lt;=n;j++)</span><br><span class="line"><span class="hljs-keyword">if</span>(A[i][j])c[i][j]=c[i<span class="hljs-number">-1</span>][j]+<span class="hljs-number">1</span>;</span><br><span class="line"><span class="hljs-keyword">else</span> c[i][j]=<span class="hljs-number">0</span>;</span><br><span class="line"><span class="hljs-keyword">for</span>(re <span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line">top=<span class="hljs-number">0</span>;ll sum=<span class="hljs-number">0</span>;</span><br><span class="line"><span class="hljs-keyword">for</span>(re <span class="hljs-keyword">int</span> j=<span class="hljs-number">1</span>;j&lt;=n;j++)</span><br><span class="line">&#123;</span><br><span class="line">sum=(sum+c[i][j])%Mod;</span><br><span class="line"><span class="hljs-keyword">while</span>(top &amp;&amp; c[i][sta[top]]&gt;=c[i][j])</span><br><span class="line">&#123;</span><br><span class="line">sum=(sum<span class="hljs-number">-1l</span>l*(c[i][sta[top]]-c[i][j])*(sta[top]-sta[top<span class="hljs-number">-1</span>])+Mod)%Mod;</span><br><span class="line">top--;</span><br><span class="line">&#125;</span><br><span class="line">sta[++top]=j;</span><br><span class="line">ans=(ans+<span class="hljs-number">1l</span>l*(i*j-sum)*val%Mod)%Mod;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-built_in">printf</span>(<span class="hljs-string">"%lld\n"</span>,ans);</span><br><span class="line"><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">etchar();</span><br><span class="line"><span class="hljs-keyword">while</span>(ch&gt;<span class="hljs-string">'9'</span> || ch&lt;<span class="hljs-string">'0'</span>)&#123;<span class="hljs-keyword">if</span>(ch==<span class="hljs-string">'-'</span>)f=<span class="hljs-number">-1</span>;ch=getchar();&#125;</span><br><span class="line"><span class="hljs-keyword">while</span>(ch&gt;=<span class="hljs-string">'0'</span> &amp;&amp; ch&lt;=<span class="hljs-string">'9'</span>)&#123;sum=(sum&lt;&lt;<span class="hljs-number">3</span>)+(sum&lt;&lt;<span class="hljs-number">1</span>)+ch-<span class="hljs-string">'0'</span>;ch=getchar();&#125;</span><br><span class="line"><span class="hljs-keyword">return</span> f*sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> N=<span class="hljs-number">1010</span>,Mod=<span class="hljs-number">1e9</span>+<span class="hljs-number">7</span>;</span><br><span class="line"><span class="hljs-keyword">int</span> n,a[N][N],A[N][N],c[N][N],sta[N],top;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line">file(<span class="hljs-string">"andorsum"</span>);</span><br><span class="line">n=gi();</span><br><span class="line"><span class="hljs-keyword">for</span>(re <span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="hljs-keyword">for</span>(re <span class="hljs-keyword">int</span> j=<span class="hljs-number">1</span>;j&lt;=n;j++)</span><br><span class="line">a[i][j]=gi();</span><br><span class="line"><span class="hljs-keyword">int</span> val=<span class="hljs-number">1</span>;ll ans=<span class="hljs-number">0</span>;</span><br><span class="line"><span class="hljs-keyword">for</span>(re <span class="hljs-keyword">int</span> k=<span class="hljs-number">0</span>;k&lt;<span class="hljs-number">31</span>;k++,val&lt;&lt;=<span class="hljs-number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="hljs-keyword">for</span>(re <span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="hljs-keyword">for</span>(re <span class="hljs-keyword">int</span> j=<span class="hljs-number">1</span>;j&lt;=n;j++)</span><br><span class="line">A[i][j]=(a[i][j]&gt;&gt;k)&amp;<span class="hljs-number">1</span>;</span><br><span class="line"><span class="hljs-keyword">for</span>(re <span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="hljs-keyword">for</span>(re <span class="hljs-keyword">int</span> j=<span class="hljs-number">1</span>;j&lt;=n;j++)</span><br><span class="line"><span class="hljs-keyword">if</span>(A[i][j])c[i][j]=c[i<span class="hljs-number">-1</span>][j]+<span class="hljs-number">1</span>;</span><br><span class="line"><span class="hljs-keyword">else</span> c[i][j]=<span class="hljs-number">0</span>;</span><br><span class="line"><span class="hljs-keyword">for</span>(re <span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line">top=<span class="hljs-number">0</span>;ll sum=<span class="hljs-number">0</span>;</span><br><span class="line"><span class="hljs-keyword">for</span>(re <span class="hljs-keyword">int</span> j=<span class="hljs-number">1</span>;j&lt;=n;j++)</span><br><span class="line">&#123;</span><br><span class="line">sum=(sum+c[i][j])%Mod;</span><br><span class="line"><span class="hljs-keyword">while</span>(top &amp;&amp; c[i][sta[top]]&gt;=c[i][j])</span><br><span class="line">&#123;</span><br><span class="line">sum=(sum<span class="hljs-number">-1l</span>l*(c[i][sta[top]]-c[i][j])*(sta[top]-sta[top<span class="hljs-number">-1</span>])+Mod)%Mod;</span><br><span class="line">top--;</span><br><span class="line">&#125;</span><br><span class="line">sta[++top]=j;</span><br><span class="line">ans=(ans+<span class="hljs-number">1l</span>l*sum*val%Mod)%Mod;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-built_in">printf</span>(<span class="hljs-string">"%lld "</span>,ans);</span><br><span class="line">val=<span class="hljs-number">1</span>;ans=<span class="hljs-number">0</span>;</span><br><span class="line"><span class="hljs-keyword">for</span>(re <span class="hljs-keyword">int</span> k=<span class="hljs-number">0</span>;k&lt;<span class="hljs-number">31</span>;k++,val&lt;&lt;=<span class="hljs-number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="hljs-keyword">for</span>(re <span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="hljs-keyword">for</span>(re <span class="hljs-keyword">int</span> j=<span class="hljs-number">1</span>;j&lt;=n;j++)</span><br><span class="line">A[i][j]=((a[i][j]&gt;&gt;k)&amp;<span class="hljs-number">1</span>)^<span class="hljs-number">1</span>;</span><br><span class="line"><span class="hljs-keyword">for</span>(re <span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="hljs-keyword">for</span>(re <span class="hljs-keyword">int</span> j=<span class="hljs-number">1</span>;j&lt;=n;j++)</span><br><span class="line"><span class="hljs-keyword">if</span>(A[i][j])c[i][j]=c[i<span class="hljs-number">-1</span>][j]+<span class="hljs-number">1</span>;</span><br><span class="line"><span class="hljs-keyword">else</span> c[i][j]=<span class="hljs-number">0</span>;</span><br><span class="line"><span class="hljs-keyword">for</span>(re <span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line">top=<span class="hljs-number">0</span>;ll sum=<span class="hljs-number">0</span>;</span><br><span class="line"><span class="hljs-keyword">for</span>(re <span class="hljs-keyword">int</span> j=<span class="hljs-number">1</span>;j&lt;=n;j++)</span><br><span class="line">&#123;</span><br><span class="line">sum=(sum+c[i][j])%Mod;</span><br><span class="line"><span class="hljs-keyword">while</span>(top &amp;&amp; c[i][sta[top]]&gt;=c[i][j])</span><br><span class="line">&#123;</span><br><span class="line">sum=(sum<span class="hljs-number">-1l</span>l*(c[i][sta[top]]-c[i][j])*(sta[top]-sta[top<span class="hljs-number">-1</span>])+Mod)%Mod;</span><br><span class="line">top--;</span><br><span class="line">&#125;</span><br><span class="line">sta[++top]=j;</span><br><span class="line">ans=(ans+<span class="hljs-number">1l</span>l*(i*j-sum)*val%Mod)%Mod;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-built_in">printf</span>(<span class="hljs-string">"%lld\n"</span>,ans);</span><br><span class="line"><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;传送门&quot;&gt;&lt;a href=&quot;#传送门&quot; class=&quot;headerlink&quot; title=&quot;传送门&quot;&gt;&lt;/a&gt;传送门&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://loj.ac/problem/3083&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Loj&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Solution" scheme="https://blog.mle-world.cn/categories/Solution/"/>
    
    
      <category term="单调栈" scheme="https://blog.mle-world.cn/tags/%E5%8D%95%E8%B0%83%E6%A0%88/"/>
    
      <category term="二进制" scheme="https://blog.mle-world.cn/tags/%E4%BA%8C%E8%BF%9B%E5%88%B6/"/>
    
  </entry>
  
  <entry>
    <title>CF1154G Minimum Possible LCM</title>
    <link href="https://blog.mle-world.cn/cf1154g-minimum-possible-lcm/"/>
    <id>https://blog.mle-world.cn/cf1154g-minimum-possible-lcm/</id>
    <published>2019-04-25T02:18:18.000Z</published>
    <updated>2019-04-27T23:45:36.201Z</updated>
    
    <content type="html"><![CDATA[<h2 id="传送门"><a href="#传送门" class="headerlink" title="传送门"></a>传送门</h2><p><a href="http://codeforces.com/problemset/problem/1154/G" target="_blank" rel="noopener">CodeForces</a></p><h2 id="题目翻译"><a href="#题目翻译" class="headerlink" title="题目翻译"></a>题目翻译</h2><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>给定一个长度为 $n$ 的序列 $a$，找出两个数，最小化他们的最小公倍数</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>第一行是一个整数 $n$<br>下面一行 $n$ 个整数描述这个序列</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>输出一行两个整数代表这两个数在序列中的位置。如果有多解则任意输出一个即可。</p><a id="more"></a><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>神仙题啊!</p><p>考虑$lcm$怎么算?$lcm$=$i$*$j$/$gcd$</p><p>发现这个式子里面的$gcd$的范围可以枚举,那么直接枚举$gcd$,拿最小的两个出来算$lcm$就好了.</p><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">/*</span></span><br><span class="line"><span class="hljs-comment">  mail: mleautomaton@foxmail.com</span></span><br><span class="line"><span class="hljs-comment">  author: MLEAutoMaton</span></span><br><span class="line"><span class="hljs-comment">  This Code is made by MLEAutoMaton</span></span><br><span class="line"><span class="hljs-comment">*/</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;</span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> re register</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> file(a) freopen(a<span class="hljs-meta-string">".in"</span>,<span class="hljs-meta-string">"r"</span>,stdin);freopen(a<span class="hljs-meta-string">".out"</span>,<span class="hljs-meta-string">"w"</span>,stdout)</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> int ll</span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">inline</span> <span class="hljs-keyword">int</span> <span class="hljs-title">gi</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line"><span class="hljs-keyword">int</span> f=<span class="hljs-number">1</span>,sum=<span class="hljs-number">0</span>;<span class="hljs-keyword">char</span> ch=getchar();</span><br><span class="line"><span class="hljs-keyword">while</span>(ch&gt;<span class="hljs-string">'9'</span> || ch&lt;<span class="hljs-string">'0'</span>)&#123;<span class="hljs-keyword">if</span>(ch==<span class="hljs-string">'-'</span>)f=<span class="hljs-number">-1</span>;ch=getchar();&#125;</span><br><span class="line"><span class="hljs-keyword">while</span>(ch&gt;=<span class="hljs-string">'0'</span> &amp;&amp; ch&lt;=<span class="hljs-string">'9'</span>)&#123;sum=(sum&lt;&lt;<span class="hljs-number">3</span>)+(sum&lt;&lt;<span class="hljs-number">1</span>)+ch-<span class="hljs-string">'0'</span>;ch=getchar();&#125;</span><br><span class="line"><span class="hljs-keyword">return</span> f*sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> N=<span class="hljs-number">1000010</span>,Max=<span class="hljs-number">1e7</span>;</span><br><span class="line"><span class="hljs-keyword">int</span> vis[Max+<span class="hljs-number">10</span>],a[N],n,ans1,ans2;</span><br><span class="line">ll ans;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">signed</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line">n=gi();ans=<span class="hljs-number">1e18</span>+<span class="hljs-number">10</span>;</span><br><span class="line"><span class="hljs-keyword">for</span>(re <span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line">a[i]=gi();</span><br><span class="line"><span class="hljs-keyword">if</span>(!vis[a[i]])vis[a[i]]=i;</span><br><span class="line"><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(ans&gt;a[i])&#123;ans=a[i];ans1=i;ans2=vis[a[i]];&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">for</span>(re <span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=Max;i++)</span><br><span class="line">&#123;</span><br><span class="line">re ll find1=<span class="hljs-number">0</span>,find2=<span class="hljs-number">0</span>,where1,where2;</span><br><span class="line"><span class="hljs-keyword">for</span>(re <span class="hljs-keyword">int</span> j=i;j&lt;=Max;j+=i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="hljs-keyword">if</span>(!vis[j])<span class="hljs-keyword">continue</span>;</span><br><span class="line"><span class="hljs-keyword">if</span>(!find1)&#123;find1=j;where1=vis[j];<span class="hljs-keyword">continue</span>;&#125;</span><br><span class="line">find2=j;where2=vis[j];</span><br><span class="line">re ll lcm=<span class="hljs-number">1l</span>l*find1/i*find2;</span><br><span class="line"><span class="hljs-keyword">if</span>(lcm&lt;ans)&#123;ans=lcm;ans1=where1,ans2=where2;&#125;</span><br><span class="line"><span class="hljs-keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">if</span>(ans1&gt;ans2)swap(ans1,ans2);</span><br><span class="line"><span class="hljs-built_in">printf</span>(<span class="hljs-string">"%lld %lld\n"</span>,ans1,ans2);</span><br><span class="line"><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;传送门&quot;&gt;&lt;a href=&quot;#传送门&quot; class=&quot;headerlink&quot; title=&quot;传送门&quot;&gt;&lt;/a&gt;传送门&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/1154/G&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;CodeForces&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;题目翻译&quot;&gt;&lt;a href=&quot;#题目翻译&quot; class=&quot;headerlink&quot; title=&quot;题目翻译&quot;&gt;&lt;/a&gt;题目翻译&lt;/h2&gt;&lt;h3 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h3&gt;&lt;p&gt;给定一个长度为 $n$ 的序列 $a$，找出两个数，最小化他们的最小公倍数&lt;/p&gt;
&lt;h3 id=&quot;Input&quot;&gt;&lt;a href=&quot;#Input&quot; class=&quot;headerlink&quot; title=&quot;Input&quot;&gt;&lt;/a&gt;Input&lt;/h3&gt;&lt;p&gt;第一行是一个整数 $n$&lt;br&gt;下面一行 $n$ 个整数描述这个序列&lt;/p&gt;
&lt;h3 id=&quot;Output&quot;&gt;&lt;a href=&quot;#Output&quot; class=&quot;headerlink&quot; title=&quot;Output&quot;&gt;&lt;/a&gt;Output&lt;/h3&gt;&lt;p&gt;输出一行两个整数代表这两个数在序列中的位置。如果有多解则任意输出一个即可。&lt;/p&gt;
    
    </summary>
    
      <category term="Solution" scheme="https://blog.mle-world.cn/categories/Solution/"/>
    
    
      <category term="数学" scheme="https://blog.mle-world.cn/tags/%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>BZOJ5312 - 冒险</title>
    <link href="https://blog.mle-world.cn/bzoj5312-%E5%86%92%E9%99%A9/"/>
    <id>https://blog.mle-world.cn/bzoj5312-冒险/</id>
    <published>2019-03-08T12:06:05.000Z</published>
    <updated>2019-03-08T12:13:12.454Z</updated>
    
    <content type="html"><![CDATA[<h2 id="传送门"><a href="#传送门" class="headerlink" title="传送门"></a>传送门</h2><p><a href="https://lydsy.com/JudgeOnline/problem.php?id=5312" target="_blank" rel="noopener">BZOJ</a></p><a id="more"></a><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>emmm,现在考虑一下怎么区间或和区间与.<br>考虑如果一段区间的贡献没有什么用,显然不需要搞.<br>考虑如果|的全是贡献的话,那么显然可以直接搞,就相当于是区间加法.<br>如果&amp;的也是全是的,那么显然也可以直接搞,相当于是区间减法.<br>然后就把这道题目转换成了区间+-然后求mx了.<br>嗯嗯嗯嗯嗯,就是线段树板子了.</p><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">/*</span></span><br><span class="line"><span class="hljs-comment">  mail: mleautomaton@foxmail.com</span></span><br><span class="line"><span class="hljs-comment">  author: MLEAutoMaton</span></span><br><span class="line"><span class="hljs-comment">  This Code is made by MLEAutoMaton</span></span><br><span class="line"><span class="hljs-comment">*/</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;</span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> re register</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> file(a) freopen(a<span class="hljs-meta-string">".in"</span>,<span class="hljs-meta-string">"r"</span>,stdin);freopen(a<span class="hljs-meta-string">".out"</span>,<span class="hljs-meta-string">"w"</span>,stdout)</span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">inline</span> <span class="hljs-keyword">int</span> <span class="hljs-title">gi</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line">    <span class="hljs-keyword">int</span> f=<span class="hljs-number">1</span>,sum=<span class="hljs-number">0</span>;<span class="hljs-keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="hljs-keyword">while</span>(ch&gt;<span class="hljs-string">'9'</span> || ch&lt;<span class="hljs-string">'0'</span>)&#123;<span class="hljs-keyword">if</span>(ch==<span class="hljs-string">'-'</span>)f=<span class="hljs-number">-1</span>;ch=getchar();&#125;</span><br><span class="line">    <span class="hljs-keyword">while</span>(ch&gt;=<span class="hljs-string">'0'</span> &amp;&amp; ch&lt;=<span class="hljs-string">'9'</span>)&#123;sum=(sum&lt;&lt;<span class="hljs-number">3</span>)+(sum&lt;&lt;<span class="hljs-number">1</span>)+ch-<span class="hljs-string">'0'</span>;ch=getchar();&#125;</span><br><span class="line">    <span class="hljs-keyword">return</span> f*sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> N=<span class="hljs-number">200010</span>;</span><br><span class="line"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">node</span></span></span><br><span class="line"><span class="hljs-class">&#123;</span></span><br><span class="line">    <span class="hljs-keyword">int</span> And,Or,tag,mx;</span><br><span class="line">&#125;t[N&lt;&lt;<span class="hljs-number">4</span>];</span><br><span class="line"><span class="hljs-keyword">int</span> a[N],n,m;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">pushup</span><span class="hljs-params">(<span class="hljs-keyword">int</span>)</span></span>;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">add</span><span class="hljs-params">(<span class="hljs-keyword">int</span>,<span class="hljs-keyword">int</span>)</span></span>;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">pushdown</span><span class="hljs-params">(<span class="hljs-keyword">int</span>)</span></span>;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">build</span><span class="hljs-params">(<span class="hljs-keyword">int</span>,<span class="hljs-keyword">int</span>,<span class="hljs-keyword">int</span>)</span></span>;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">modify_and</span><span class="hljs-params">(<span class="hljs-keyword">int</span>,<span class="hljs-keyword">int</span>,<span class="hljs-keyword">int</span>,<span class="hljs-keyword">int</span>,<span class="hljs-keyword">int</span>,<span class="hljs-keyword">int</span>)</span></span>;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">modify_or</span><span class="hljs-params">(<span class="hljs-keyword">int</span>,<span class="hljs-keyword">int</span>,<span class="hljs-keyword">int</span>,<span class="hljs-keyword">int</span>,<span class="hljs-keyword">int</span>,<span class="hljs-keyword">int</span>)</span></span>;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">query</span><span class="hljs-params">(<span class="hljs-keyword">int</span>,<span class="hljs-keyword">int</span>,<span class="hljs-keyword">int</span>,<span class="hljs-keyword">int</span>,<span class="hljs-keyword">int</span>)</span></span>;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line">    n=gi();m=gi();</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)a[i]=gi();</span><br><span class="line">    build(<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,n);</span><br><span class="line">    <span class="hljs-keyword">while</span>(m--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="hljs-keyword">int</span> opt=gi(),l=gi(),r=gi();</span><br><span class="line">        <span class="hljs-keyword">if</span>(opt==<span class="hljs-number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="hljs-keyword">int</span> x=gi();</span><br><span class="line">            modify_and(<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,n,l,r,x);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="hljs-keyword">if</span>(opt==<span class="hljs-number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="hljs-keyword">int</span> x=gi();</span><br><span class="line">            modify_or(<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,n,l,r,x);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="hljs-keyword">if</span>(opt==<span class="hljs-number">3</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="hljs-built_in">printf</span>(<span class="hljs-string">"%d\n"</span>,query(<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,n,l,r));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">pushup</span><span class="hljs-params">(<span class="hljs-keyword">int</span> o)</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line">    t[o].And=t[o&lt;&lt;<span class="hljs-number">1</span>].And&amp;t[o&lt;&lt;<span class="hljs-number">1</span>|<span class="hljs-number">1</span>].And;</span><br><span class="line">    t[o].Or=t[o&lt;&lt;<span class="hljs-number">1</span>].Or|t[o&lt;&lt;<span class="hljs-number">1</span>|<span class="hljs-number">1</span>].Or;</span><br><span class="line">    t[o].mx=max(t[o&lt;&lt;<span class="hljs-number">1</span>].mx,t[o&lt;&lt;<span class="hljs-number">1</span>|<span class="hljs-number">1</span>].mx);</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">build</span><span class="hljs-params">(<span class="hljs-keyword">int</span> o,<span class="hljs-keyword">int</span> l,<span class="hljs-keyword">int</span> r)</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line">    <span class="hljs-keyword">if</span>(l==r)&#123;t[o].mx=t[o].And=t[o].Or=a[l];<span class="hljs-keyword">return</span>;&#125;</span><br><span class="line">    <span class="hljs-keyword">int</span> mid=(l+r)&gt;&gt;<span class="hljs-number">1</span>;</span><br><span class="line">    build(o&lt;&lt;<span class="hljs-number">1</span>,l,mid);build(o&lt;&lt;<span class="hljs-number">1</span>|<span class="hljs-number">1</span>,mid+<span class="hljs-number">1</span>,r);</span><br><span class="line">    pushup(o);</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">add</span><span class="hljs-params">(<span class="hljs-keyword">int</span> o,<span class="hljs-keyword">int</span> v)</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line">    t[o].tag+=v;t[o].And+=v;t[o].Or+=v;t[o].mx+=v;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">pushdown</span><span class="hljs-params">(<span class="hljs-keyword">int</span> o)</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line">    <span class="hljs-keyword">if</span>(t[o].tag)</span><br><span class="line">    &#123;</span><br><span class="line">        add(o&lt;&lt;<span class="hljs-number">1</span>,t[o].tag);</span><br><span class="line">        add(o&lt;&lt;<span class="hljs-number">1</span>|<span class="hljs-number">1</span>,t[o].tag);</span><br><span class="line">        t[o].tag=<span class="hljs-number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">modify_and</span><span class="hljs-params">(<span class="hljs-keyword">int</span> o,<span class="hljs-keyword">int</span> l,<span class="hljs-keyword">int</span> r,<span class="hljs-keyword">int</span> posl,<span class="hljs-keyword">int</span> posr,<span class="hljs-keyword">int</span> k)</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line">    <span class="hljs-keyword">if</span>(l&lt;r)pushdown(o);</span><br><span class="line">    <span class="hljs-keyword">if</span>((t[o].Or&amp;k)==t[o].Or)<span class="hljs-keyword">return</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span>((posl&lt;=l &amp;&amp; r&lt;=posr) &amp;&amp; (t[o].And&amp;k)-t[o].And==(t[o].Or&amp;k)-t[o].Or)&#123;add(o,(t[o].And&amp;k)-t[o].And);<span class="hljs-keyword">return</span>;&#125;</span><br><span class="line">    <span class="hljs-keyword">int</span> mid=(l+r)&gt;&gt;<span class="hljs-number">1</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span>(posr&lt;=mid)modify_and(o&lt;&lt;<span class="hljs-number">1</span>,l,mid,posl,posr,k);</span><br><span class="line">    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(posl&gt;mid)modify_and(o&lt;&lt;<span class="hljs-number">1</span>|<span class="hljs-number">1</span>,mid+<span class="hljs-number">1</span>,r,posl,posr,k);</span><br><span class="line">    <span class="hljs-keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        modify_and(o&lt;&lt;<span class="hljs-number">1</span>,l,mid,posl,mid,k);</span><br><span class="line">        modify_and(o&lt;&lt;<span class="hljs-number">1</span>|<span class="hljs-number">1</span>,mid+<span class="hljs-number">1</span>,r,mid+<span class="hljs-number">1</span>,posr,k);</span><br><span class="line">    &#125;</span><br><span class="line">    pushup(o);</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">modify_or</span><span class="hljs-params">(<span class="hljs-keyword">int</span> o,<span class="hljs-keyword">int</span> l,<span class="hljs-keyword">int</span> r,<span class="hljs-keyword">int</span> posl,<span class="hljs-keyword">int</span> posr,<span class="hljs-keyword">int</span> k)</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line">    <span class="hljs-keyword">if</span>(l&lt;r)pushdown(o);</span><br><span class="line">    <span class="hljs-keyword">if</span>((t[o].And|k)==t[o].And)<span class="hljs-keyword">return</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span>((posl&lt;=l &amp;&amp; r&lt;=posr) &amp;&amp; (t[o].And|k)-t[o].And==(t[o].Or|k)-t[o].Or)&#123;add(o,(t[o].Or|k)-t[o].Or);<span class="hljs-keyword">return</span>;&#125;</span><br><span class="line">    <span class="hljs-keyword">int</span> mid=(l+r)&gt;&gt;<span class="hljs-number">1</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span>(posr&lt;=mid)modify_or(o&lt;&lt;<span class="hljs-number">1</span>,l,mid,posl,posr,k);</span><br><span class="line">    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(posl&gt;mid)modify_or(o&lt;&lt;<span class="hljs-number">1</span>|<span class="hljs-number">1</span>,mid+<span class="hljs-number">1</span>,r,posl,posr,k);</span><br><span class="line">    <span class="hljs-keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        modify_or(o&lt;&lt;<span class="hljs-number">1</span>,l,mid,posl,mid,k);</span><br><span class="line">        modify_or(o&lt;&lt;<span class="hljs-number">1</span>|<span class="hljs-number">1</span>,mid+<span class="hljs-number">1</span>,r,mid+<span class="hljs-number">1</span>,posr,k);</span><br><span class="line">    &#125;</span><br><span class="line">    pushup(o);</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">query</span><span class="hljs-params">(<span class="hljs-keyword">int</span> o,<span class="hljs-keyword">int</span> l,<span class="hljs-keyword">int</span> r,<span class="hljs-keyword">int</span> posl,<span class="hljs-keyword">int</span> posr)</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line">    <span class="hljs-keyword">if</span>(l!=r)pushdown(o);</span><br><span class="line">    <span class="hljs-keyword">if</span>(posl&lt;=l &amp;&amp; r&lt;=posr)<span class="hljs-keyword">return</span> t[o].mx;</span><br><span class="line">    <span class="hljs-keyword">int</span> mid=(l+r)&gt;&gt;<span class="hljs-number">1</span>,res=<span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span>(posl&lt;=mid)res=max(res,query(o&lt;&lt;<span class="hljs-number">1</span>,l,mid,posl,posr));</span><br><span class="line">    <span class="hljs-keyword">if</span>(posr&gt;mid)res=max(res,query(o&lt;&lt;<span class="hljs-number">1</span>|<span class="hljs-number">1</span>,mid+<span class="hljs-number">1</span>,r,posl,posr));</span><br><span class="line">    <span class="hljs-keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-comment">/*</span></span><br><span class="line"><span class="hljs-comment">Kaiser终于成为冒险协会的一员，这次冒险协会派他去冒险，他来到一处古墓，却被大门上的守护神挡住了去路，守护神给出了一个问题，</span></span><br><span class="line"><span class="hljs-comment">只有答对了问题才能进入，守护神给出了一个自然数序列a,每次有一下三种操作。</span></span><br><span class="line"><span class="hljs-comment">1，给出l,r,x，将序列l,r之间的所有数都 and x</span></span><br><span class="line"><span class="hljs-comment">2，给出l,r,x，将序列l,r之间的所有数都 or x</span></span><br><span class="line"><span class="hljs-comment">3，给出l,r，询问l,r之间的最大值</span></span><br><span class="line"><span class="hljs-comment">第一行包含两个整数 n,m 接下来一行包含 n 个整数, 表示a序列，接下来 m 行, 每行描述了一个操作.</span></span><br><span class="line"><span class="hljs-comment">2&lt;=n&lt;=2e5 2&lt;=q&lt;=2e5,0&lt;=ai&lt;=2^20.</span></span><br><span class="line"><span class="hljs-comment">*/</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;传送门&quot;&gt;&lt;a href=&quot;#传送门&quot; class=&quot;headerlink&quot; title=&quot;传送门&quot;&gt;&lt;/a&gt;传送门&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://lydsy.com/JudgeOnline/problem.php?id=5312&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;BZOJ&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Solution" scheme="https://blog.mle-world.cn/categories/Solution/"/>
    
    
      <category term="线段树" scheme="https://blog.mle-world.cn/tags/%E7%BA%BF%E6%AE%B5%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>CodeForces802C Heidi and Library(hard)</title>
    <link href="https://blog.mle-world.cn/codeforces802c-heidi-and-library-hard/"/>
    <id>https://blog.mle-world.cn/codeforces802c-heidi-and-library-hard/</id>
    <published>2019-03-07T07:26:43.000Z</published>
    <updated>2019-03-07T07:36:47.957Z</updated>
    
    <content type="html"><![CDATA[<h2 id="传送门"><a href="#传送门" class="headerlink" title="传送门"></a>传送门</h2><p><a href="http://codeforces.com/problemset/problem/802/C" target="_blank" rel="noopener">CodeForces</a></p><h2 id="题目翻译"><a href="#题目翻译" class="headerlink" title="题目翻译"></a>题目翻译</h2><p>有$n$天和一个容量为$k$的书架,每天需要第$a_i$本书,买$i$这本书的代价是$c_i$,求满足每天条件的最小代价.</p><a id="more"></a><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>显然如果第$i$天需要$a_i$,那么$a_i$必须要在书架上面.<br>考虑像餐巾计划一样把每一天拆成2个点,分别表示拥有的和需要的.<br>显然当前这一天一定是连$(i,i+n,1,-Inf)$表示必须选.<br>后面的随便连一下判断需不需要再买书就好了.<br>最后跑k次费用流的费用就是答案.<br>注意要把n*Inf的代价加上.</p><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;</span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> re register</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">inline</span> <span class="hljs-keyword">int</span> <span class="hljs-title">gi</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line"><span class="hljs-keyword">int</span> f=<span class="hljs-number">1</span>,sum=<span class="hljs-number">0</span>;<span class="hljs-keyword">char</span> ch=getchar();</span><br><span class="line"><span class="hljs-keyword">while</span>(ch&gt;<span class="hljs-string">'9'</span> || ch&lt;<span class="hljs-string">'0'</span>)&#123;<span class="hljs-keyword">if</span>(ch==<span class="hljs-string">'-'</span>)f=<span class="hljs-number">-1</span>;ch=getchar();&#125;</span><br><span class="line"><span class="hljs-keyword">while</span>(ch&gt;=<span class="hljs-string">'0'</span> &amp;&amp; ch&lt;=<span class="hljs-string">'9'</span>)&#123;sum=(sum&lt;&lt;<span class="hljs-number">3</span>)+(sum&lt;&lt;<span class="hljs-number">1</span>)+ch-<span class="hljs-string">'0'</span>;ch=getchar();&#125;</span><br><span class="line"><span class="hljs-keyword">return</span> f*sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> Inf=<span class="hljs-number">1e7</span>;</span><br><span class="line"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">node</span>&#123;</span></span><br><span class="line"><span class="hljs-keyword">int</span> to,nxt,flow,cost;</span><br><span class="line">&#125;e[<span class="hljs-number">100010</span>];</span><br><span class="line"><span class="hljs-keyword">int</span> front[<span class="hljs-number">5010</span>],n,s,t,cnt=<span class="hljs-number">1</span>,dis[<span class="hljs-number">5010</span>],vis[<span class="hljs-number">5010</span>],fa[<span class="hljs-number">5010</span>],from[<span class="hljs-number">5010</span>],a[<span class="hljs-number">100010</span>],c[<span class="hljs-number">100010</span>];</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">Add</span><span class="hljs-params">(<span class="hljs-keyword">int</span> u,<span class="hljs-keyword">int</span> v,<span class="hljs-keyword">int</span> flow,<span class="hljs-keyword">int</span> cost)</span></span>&#123;</span><br><span class="line">e[++cnt]=(node)&#123;v,front[u],flow,cost&#125;;front[u]=cnt;</span><br><span class="line">e[++cnt]=(node)&#123;u,front[v],<span class="hljs-number">0</span>,-cost&#125;;front[v]=cnt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">int</span> flow,k,cost;</span><br><span class="line"><span class="hljs-built_in">queue</span>&lt;<span class="hljs-keyword">int</span>&gt;Q;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">SPFA</span><span class="hljs-params">()</span></span>&#123;</span><br><span class="line"><span class="hljs-keyword">for</span>(re <span class="hljs-keyword">int</span> i=s;i&lt;=t;i++)dis[i]=Inf;</span><br><span class="line">Q.push(s);</span><br><span class="line">dis[s]=<span class="hljs-number">0</span>;vis[s]=<span class="hljs-number">1</span>;</span><br><span class="line"><span class="hljs-keyword">while</span>(!Q.empty())&#123;</span><br><span class="line"><span class="hljs-keyword">int</span> u=Q.front();Q.pop();vis[u]=<span class="hljs-number">0</span>;</span><br><span class="line"><span class="hljs-keyword">for</span>(re <span class="hljs-keyword">int</span> i=front[u];i;i=e[i].nxt)&#123;</span><br><span class="line"><span class="hljs-keyword">int</span> v=e[i].to;</span><br><span class="line"><span class="hljs-keyword">if</span>(e[i].flow &amp;&amp; dis[v]&gt;dis[u]+e[i].cost)&#123;</span><br><span class="line">dis[v]=dis[u]+e[i].cost;fa[v]=u;</span><br><span class="line">from[v]=i;</span><br><span class="line"><span class="hljs-keyword">if</span>(!vis[v])&#123;</span><br><span class="line">vis[v]=<span class="hljs-number">1</span>;Q.push(v);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">if</span>(dis[t]==Inf)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;</span><br><span class="line">flow++;cost=min(cost,cost+dis[t]);</span><br><span class="line"><span class="hljs-keyword">for</span>(re <span class="hljs-keyword">int</span> i=t;i!=s;i=fa[i])&#123;</span><br><span class="line">e[from[i]].flow--;e[from[i]^<span class="hljs-number">1</span>].flow++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">McMf</span><span class="hljs-params">()</span></span>&#123;</span><br><span class="line"><span class="hljs-keyword">while</span>(k--)SPFA();</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">signed</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line">n=gi();k=gi();</span><br><span class="line">t=n*<span class="hljs-number">2</span>+<span class="hljs-number">1</span>;</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)a[i]=gi();</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)c[i]=gi();</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)Add(s,i,<span class="hljs-number">1</span>,c[a[i]]);</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)Add(i,i+n,<span class="hljs-number">1</span>,-Inf);</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)Add(i+n,t,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>);</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;n;i++)</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j=i+<span class="hljs-number">1</span>;j&lt;=n;j++)</span><br><span class="line">&#123;</span><br><span class="line">Add(i+n,j,<span class="hljs-number">1</span>,a[i]==a[j]?<span class="hljs-number">0</span>:c[a[j]]);</span><br><span class="line">&#125;</span><br><span class="line">cost+=<span class="hljs-number">1l</span>l*n*Inf;k=min(k,n);</span><br><span class="line">McMf();</span><br><span class="line"><span class="hljs-built_in">printf</span>(<span class="hljs-string">"%d\n"</span>,cost);</span><br><span class="line"><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;传送门&quot;&gt;&lt;a href=&quot;#传送门&quot; class=&quot;headerlink&quot; title=&quot;传送门&quot;&gt;&lt;/a&gt;传送门&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/802/C&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;CodeForces&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;题目翻译&quot;&gt;&lt;a href=&quot;#题目翻译&quot; class=&quot;headerlink&quot; title=&quot;题目翻译&quot;&gt;&lt;/a&gt;题目翻译&lt;/h2&gt;&lt;p&gt;有$n$天和一个容量为$k$的书架,每天需要第$a_i$本书,买$i$这本书的代价是$c_i$,求满足每天条件的最小代价.&lt;/p&gt;
    
    </summary>
    
      <category term="Solution" scheme="https://blog.mle-world.cn/categories/Solution/"/>
    
    
      <category term="网络流" scheme="https://blog.mle-world.cn/tags/%E7%BD%91%E7%BB%9C%E6%B5%81/"/>
    
      <category term="建模" scheme="https://blog.mle-world.cn/tags/%E5%BB%BA%E6%A8%A1/"/>
    
  </entry>
  
</feed>
