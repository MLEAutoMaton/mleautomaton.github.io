<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>MLEAutoMaton&#39;s Blog</title>
  
  <subtitle>Welcome to MLE&#39;s World</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-03-03T10:09:28.433Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>MLEAutoMaton</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Atcoder3611 Tree MST</title>
    <link href="http://yoursite.com/2019/03/03/AT3611/"/>
    <id>http://yoursite.com/2019/03/03/AT3611/</id>
    <published>2019-03-03T09:57:27.000Z</published>
    <updated>2019-03-03T10:09:28.433Z</updated>
    
    <content type="html"><![CDATA[<h2 id="传送门"><a href="#传送门" class="headerlink" title="传送门"></a>传送门</h2><p><a href="https://cf17-final.contest.atcoder.jp/tasks/cf17_final_j?lang=en" target="_blank" rel="noopener">Atcoder</a></p><h2 id="题目翻译"><a href="#题目翻译" class="headerlink" title="题目翻译"></a>题目翻译</h2><p>给你$n$个点的树,每条边有边权,每一个点有点权.</p><p>他们两两之间可以构成一个完全图,边$(u,v)$的代价是$w_u+w_v+dis(u,v)$.</p><p>求它的最小生成树.</p><a id="more"></a><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>考虑这个式子的形成:</p><p>$w_u+w_v+dis(u,v)$</p><p>emmm,发现有个dis,考虑一下点分治!</p><p>对于每一个重心的子树,找一个$dis(u,root)+w[u]$的最小的点.</p><p>那么其他的点一定在这个子树里面到他最优.</p><p>然后直接连边然后跑最小生成树就好了.</p><p>复杂度的证明的话,就是:</p><ul><li><p>点分的复杂度是$O(nlog(n))$的.</p></li><li><p>加入的边的级别是$O(nlog(n))$的.</p></li><li><p>总复杂度就是$O(nlog(n)^2)$的.</p></li></ul><p>那么就可以放心的写了.</p><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">gi</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> f=<span class="number">1</span>,sum=<span class="number">0</span>;<span class="keyword">char</span> ch=getchar();</span><br><span class="line"><span class="keyword">while</span>(ch&gt;<span class="string">'9'</span> || ch&lt;<span class="string">'0'</span>)&#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)f=<span class="number">-1</span>;ch=getchar();&#125;</span><br><span class="line"><span class="keyword">while</span>(ch&lt;=<span class="string">'9'</span> &amp;&amp; ch&gt;=<span class="string">'0'</span>)&#123;sum=(sum&lt;&lt;<span class="number">3</span>)+(sum&lt;&lt;<span class="number">1</span>)+ch-<span class="string">'0'</span>;ch=getchar();&#125;</span><br><span class="line"><span class="keyword">return</span> f*sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">233333</span>;</span><br><span class="line"><span class="keyword">int</span> front[N],nxt[N&lt;&lt;<span class="number">1</span>],to[N&lt;&lt;<span class="number">1</span>],w[N&lt;&lt;<span class="number">1</span>],W[N],n,m,cnt;</span><br><span class="line"><span class="keyword">int</span> siz[N],g[N],root,sum,vis[N];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> u,v;ll w;</span><br><span class="line"><span class="keyword">bool</span> <span class="keyword">operator</span>&lt;(<span class="keyword">const</span> node&amp;b)<span class="keyword">const</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> w&lt;b.w;</span><br><span class="line">&#125;</span><br><span class="line">&#125;e[N*<span class="number">50</span>];</span><br><span class="line">ll Min;</span><br><span class="line"><span class="keyword">int</span> p;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">to[++cnt]=v;nxt[cnt]=front[u];front[u]=cnt;</span><br><span class="line">w[cnt]=val;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getroot</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> fa)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">siz[u]=<span class="number">1</span>;g[u]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=front[u];i;i=nxt[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> v=to[i];</span><br><span class="line"><span class="keyword">if</span>(v==fa || vis[v])<span class="keyword">continue</span>;</span><br><span class="line">getroot(v,u);</span><br><span class="line">siz[u]+=siz[v];</span><br><span class="line">g[u]=max(g[u],siz[v]);</span><br><span class="line">&#125;</span><br><span class="line">g[u]=max(g[u],sum-siz[u]);</span><br><span class="line"><span class="keyword">if</span>(g[u]&lt;g[root])root=u;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> fa,ll dep)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(Min&gt;W[u]+dep)&#123;Min=W[u]+dep;p=u;&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=front[u];i;i=nxt[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> v=to[i];</span><br><span class="line"><span class="keyword">if</span>(v==fa || vis[v])<span class="keyword">continue</span>;</span><br><span class="line">dfs(v,u,dep+w[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Link</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> fa,ll dep)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">e[++m]=(node)&#123;u,p,dep+Min+W[u]&#125;;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=front[u];i;i=nxt[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> v=to[i];</span><br><span class="line"><span class="keyword">if</span>(v==fa || vis[v])<span class="keyword">continue</span>;</span><br><span class="line">Link(v,u,dep+w[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">(<span class="keyword">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">vis[u]=<span class="number">1</span>;</span><br><span class="line">Min=<span class="number">1e18</span>+<span class="number">10</span>;p=<span class="number">0</span>;</span><br><span class="line">dfs(u,<span class="number">0</span>,<span class="number">0</span>);Link(u,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=front[u];i;i=nxt[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> v=to[i];</span><br><span class="line"><span class="keyword">if</span>(vis[v])<span class="keyword">continue</span>;</span><br><span class="line">sum=siz[v];root=<span class="number">0</span>;</span><br><span class="line">getroot(v,u);</span><br><span class="line">solve(root);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> f[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(f[x]!=x)f[x]=find(f[x]);</span><br><span class="line"><span class="keyword">return</span> f[x];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">n=gi();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)W[i]=gi();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> u=gi(),v=gi(),val=gi();</span><br><span class="line">Add(u,v,val);Add(v,u,val);</span><br><span class="line">&#125;</span><br><span class="line">g[<span class="number">0</span>]=n+<span class="number">1</span>;sum=n;</span><br><span class="line">getroot(<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">solve(root);</span><br><span class="line">sort(e+<span class="number">1</span>,e+m+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)f[i]=i;</span><br><span class="line">ll ans=<span class="number">0</span>;<span class="keyword">int</span> k=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> u=find(e[i].u),v=find(e[i].v);</span><br><span class="line"><span class="keyword">if</span>(u!=v)</span><br><span class="line">&#123;</span><br><span class="line">ans+=e[i].w;</span><br><span class="line">k++;f[v]=u;</span><br><span class="line"><span class="keyword">if</span>(k==n<span class="number">-1</span>)<span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;传送门&quot;&gt;&lt;a href=&quot;#传送门&quot; class=&quot;headerlink&quot; title=&quot;传送门&quot;&gt;&lt;/a&gt;传送门&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://cf17-final.contest.atcoder.jp/tasks/cf17_final_j?lang=en&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Atcoder&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;题目翻译&quot;&gt;&lt;a href=&quot;#题目翻译&quot; class=&quot;headerlink&quot; title=&quot;题目翻译&quot;&gt;&lt;/a&gt;题目翻译&lt;/h2&gt;&lt;p&gt;给你$n$个点的树,每条边有边权,每一个点有点权.&lt;/p&gt;
&lt;p&gt;他们两两之间可以构成一个完全图,边$(u,v)$的代价是$w_u+w_v+dis(u,v)$.&lt;/p&gt;
&lt;p&gt;求它的最小生成树.&lt;/p&gt;
    
    </summary>
    
      <category term="Solution" scheme="http://yoursite.com/categories/Solution/"/>
    
    
      <category term="Kruscal" scheme="http://yoursite.com/tags/Kruscal/"/>
    
      <category term="点分治" scheme="http://yoursite.com/tags/%E7%82%B9%E5%88%86%E6%B2%BB/"/>
    
  </entry>
  
  <entry>
    <title>[JSOI2010]满汉全席</title>
    <link href="http://yoursite.com/2019/03/02/JSOI2010-%E6%BB%A1%E6%B1%89%E5%85%A8%E5%B8%AD/"/>
    <id>http://yoursite.com/2019/03/02/JSOI2010-满汉全席/</id>
    <published>2019-03-01T23:32:26.000Z</published>
    <updated>2019-03-02T00:01:28.184Z</updated>
    
    <content type="html"><![CDATA[<h2 id="传送门"><a href="#传送门" class="headerlink" title="传送门"></a>传送门</h2><p><a href="https://lydsy.com/JudgeOnline/problem.php?id=1823" target="_blank" rel="noopener">BZOJ</a></p><a id="more"></a><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>这不就是2-SAT的模板题?<br>不会2-SAT模板?<br><del>那你也是很菜了</del>.</p><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> file(a) freopen(a<span class="meta-string">".in"</span>,<span class="meta-string">"r"</span>,stdin);freopen(a<span class="meta-string">".out"</span>,<span class="meta-string">"w"</span>,stdout)</span></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">gi</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> f=<span class="number">1</span>,sum=<span class="number">0</span>;<span class="keyword">char</span> ch=getchar();</span><br><span class="line"><span class="keyword">while</span>(ch&gt;<span class="string">'9'</span> || ch&lt;<span class="string">'0'</span>)&#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)f=<span class="number">-1</span>;ch=getchar();&#125;</span><br><span class="line"><span class="keyword">while</span>(ch&gt;=<span class="string">'0'</span> &amp;&amp; ch&lt;=<span class="string">'9'</span>)&#123;sum=(sum&lt;&lt;<span class="number">3</span>)+(sum&lt;&lt;<span class="number">1</span>)+ch-<span class="string">'0'</span>;ch=getchar();&#125;</span><br><span class="line"><span class="keyword">return</span> f*sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">210</span>,M=<span class="number">1010</span>;</span><br><span class="line"><span class="keyword">int</span> front[N],to[M&lt;&lt;<span class="number">1</span>],nxt[M&lt;&lt;<span class="number">1</span>],cnt,dfn[N],Time,low[N],s[N],vis[N],sta,n,m,scc,bl[N];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">to[++cnt]=v;nxt[cnt]=front[u];front[u]=cnt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">tarjan</span><span class="params">(<span class="keyword">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">dfn[u]=low[u]=++Time;s[sta++]=u;vis[u]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=front[u];i;i=nxt[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> v=to[i];</span><br><span class="line"><span class="keyword">if</span>(!dfn[v])</span><br><span class="line">&#123;</span><br><span class="line">tarjan(v);</span><br><span class="line">low[u]=min(low[u],low[v]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(vis[v])low[u]=min(low[u],dfn[v]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(dfn[u]==low[u])</span><br><span class="line">&#123;</span><br><span class="line">scc++;</span><br><span class="line"><span class="keyword">int</span> x;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">x=s[--sta];</span><br><span class="line">bl[x]=scc;</span><br><span class="line">vis[x]=<span class="number">0</span>;</span><br><span class="line">&#125;<span class="keyword">while</span>(x!=u);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> ONLINE_JUDGE</span></span><br><span class="line">freopen(<span class="string">"in.in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">freopen(<span class="string">"out.out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="keyword">int</span> T=gi();</span><br><span class="line"><span class="keyword">while</span>(T--)</span><br><span class="line">&#123;</span><br><span class="line">n=gi();m=gi();</span><br><span class="line"><span class="keyword">for</span>(re <span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n*<span class="number">2</span>;i++)front[i]=<span class="number">0</span>;cnt=<span class="number">0</span>;Time=<span class="number">0</span>;scc=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(re <span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n*<span class="number">2</span>;i++)dfn[i]=low[i]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(re <span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">char</span> ch=getchar();<span class="keyword">int</span> a,b,x,y;</span><br><span class="line"><span class="keyword">while</span>(ch!=<span class="string">'m'</span> &amp;&amp; ch!=<span class="string">'h'</span>)ch=getchar();</span><br><span class="line">a=ch==<span class="string">'h'</span>;</span><br><span class="line">x=gi();</span><br><span class="line">ch=getchar();</span><br><span class="line"><span class="keyword">while</span>(ch!=<span class="string">'m'</span> &amp;&amp; ch!=<span class="string">'h'</span>)ch=getchar();</span><br><span class="line">b=ch==<span class="string">'h'</span>;</span><br><span class="line">y=gi();</span><br><span class="line">Add(x+a*n,y+(b^<span class="number">1</span>)*n);</span><br><span class="line">Add(y+b*n,x+(a^<span class="number">1</span>)*n);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(re <span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">2</span>*n;i++)<span class="keyword">if</span>(!dfn[i])tarjan(i);</span><br><span class="line"><span class="keyword">int</span> flag=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(re <span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="keyword">if</span>(bl[i]==bl[i+n])</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">"BAD"</span>);flag=<span class="number">1</span>;<span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!flag)<span class="built_in">puts</span>(<span class="string">"GOOD"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;传送门&quot;&gt;&lt;a href=&quot;#传送门&quot; class=&quot;headerlink&quot; title=&quot;传送门&quot;&gt;&lt;/a&gt;传送门&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://lydsy.com/JudgeOnline/problem.php?id=1823&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;BZOJ&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Solution" scheme="http://yoursite.com/categories/Solution/"/>
    
    
      <category term="2-SAT" scheme="http://yoursite.com/tags/2-SAT/"/>
    
  </entry>
  
  <entry>
    <title>Cerc2012 Farm and factory</title>
    <link href="http://yoursite.com/2019/03/01/BZOJ4061/"/>
    <id>http://yoursite.com/2019/03/01/BZOJ4061/</id>
    <published>2019-03-01T12:36:42.000Z</published>
    <updated>2019-03-01T12:44:55.447Z</updated>
    
    <content type="html"><![CDATA[<h2 id="传送门"><a href="#传送门" class="headerlink" title="传送门"></a>传送门</h2><p><a href="https://lydsy.com/JudgeOnline/problem.php?id=4061" target="_blank" rel="noopener">BZOJ</a><br>很可惜这是一道权限题.</p><a id="more"></a><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>先设:</p><ul><li>$f_i$表示$1~i$的最短路.</li><li>$g_i$表示$2~i$的最短路</li><li>$s_i$表示$new~i$的最短路</li></ul><p>这个东西随便化简一下就是一个切比雪夫距离.<br>发现这是一个正方形,旋转45°就是曼哈顿距离.<br>然后中位数随便搞一下就好了.</p><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> file(a) freopen(a<span class="meta-string">".in"</span>,<span class="meta-string">"r"</span>,stdin);freopen(a<span class="meta-string">".out"</span>,<span class="meta-string">"w"</span>,stdout)</span></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">gi</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> f=<span class="number">1</span>,sum=<span class="number">0</span>;<span class="keyword">char</span> ch=getchar();</span><br><span class="line"><span class="keyword">while</span>(ch&gt;<span class="string">'9'</span> || ch&lt;<span class="string">'0'</span>)&#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)f=<span class="number">-1</span>;ch=getchar();&#125;</span><br><span class="line"><span class="keyword">while</span>(ch&gt;=<span class="string">'0'</span> &amp;&amp; ch&lt;=<span class="string">'9'</span>)&#123;sum=(sum&lt;&lt;<span class="number">3</span>)+(sum&lt;&lt;<span class="number">1</span>)+ch-<span class="string">'0'</span>;ch=getchar();&#125;</span><br><span class="line"><span class="keyword">return</span> f*sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">100010</span>,M=<span class="number">300010</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> Inf=<span class="number">1e18</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> to[M&lt;&lt;<span class="number">1</span>],nxt[M&lt;&lt;<span class="number">1</span>],cnt,front[N];</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">double</span>,<span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mp make_pair</span></span><br><span class="line">priority_queue&lt;pii,<span class="built_in">vector</span>&lt;pii&gt;,greater&lt;pii&gt; &gt;q;</span><br><span class="line"><span class="keyword">double</span> f[N],g[N],a[N],b[N],w[M&lt;&lt;<span class="number">1</span>];</span><br><span class="line"><span class="keyword">int</span> vis[N],n,m;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">double</span> val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">to[++cnt]=v;nxt[cnt]=front[u];front[u]=cnt;</span><br><span class="line">w[cnt]=val;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> ONLINE_JUDGE</span></span><br><span class="line">freopen(<span class="string">"in.in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">freopen(<span class="string">"out.out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="keyword">int</span> T=gi();</span><br><span class="line"><span class="keyword">while</span>(T--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">memset</span>(front,<span class="number">0</span>,<span class="keyword">sizeof</span>(front));cnt=<span class="number">0</span>;</span><br><span class="line">n=gi();m=gi();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> u=gi(),v=gi();<span class="keyword">double</span> val;<span class="built_in">scanf</span>(<span class="string">"%lf"</span>,&amp;val);</span><br><span class="line">Add(u,v,val);Add(v,u,val);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)f[i]=Inf,vis[i]=<span class="number">0</span>;</span><br><span class="line">f[<span class="number">1</span>]=<span class="number">0.0</span>;q.push(mp(<span class="number">0.0</span>,<span class="number">1</span>));</span><br><span class="line"><span class="keyword">while</span>(!q.empty())</span><br><span class="line">&#123;</span><br><span class="line">pii now=q.top();q.pop();<span class="keyword">int</span> u=now.second;</span><br><span class="line"><span class="keyword">if</span>(vis[u])<span class="keyword">continue</span>;vis[u]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=front[u];i;i=nxt[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> v=to[i];</span><br><span class="line"><span class="keyword">if</span>(f[v]&gt;f[u]+w[i])</span><br><span class="line">&#123;</span><br><span class="line">f[v]=f[u]+w[i];</span><br><span class="line">q.push(mp(f[v],v));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)g[i]=Inf,vis[i]=<span class="number">0</span>;</span><br><span class="line">g[<span class="number">2</span>]=<span class="number">0.0</span>;q.push(mp(<span class="number">0.0</span>,<span class="number">2</span>));</span><br><span class="line"><span class="keyword">while</span>(!q.empty())</span><br><span class="line">&#123;</span><br><span class="line">pii now=q.top();q.pop();<span class="keyword">int</span> u=now.second;</span><br><span class="line"><span class="keyword">if</span>(vis[u])<span class="keyword">continue</span>;vis[u]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=front[u];i;i=nxt[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> v=to[i];</span><br><span class="line"><span class="keyword">if</span>(g[v]&gt;g[u]+w[i])</span><br><span class="line">&#123;</span><br><span class="line">g[v]=g[u]+w[i];</span><br><span class="line">q.push(mp(g[v],v));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">a[i]=f[i]+g[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">b[i]=f[i]-g[i];</span><br><span class="line">sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>);sort(b+<span class="number">1</span>,b+n+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">double</span> ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)ans+=<span class="built_in">fabs</span>(a[i]-a[(n+<span class="number">1</span>)/<span class="number">2</span>]);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)ans+=<span class="built_in">fabs</span>(b[i]-b[(n+<span class="number">1</span>)/<span class="number">2</span>]);</span><br><span class="line">ans/=<span class="number">2</span>*n;<span class="built_in">printf</span>(<span class="string">"%.10lf\n"</span>,ans);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;传送门&quot;&gt;&lt;a href=&quot;#传送门&quot; class=&quot;headerlink&quot; title=&quot;传送门&quot;&gt;&lt;/a&gt;传送门&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://lydsy.com/JudgeOnline/problem.php?id=4061&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;BZOJ&lt;/a&gt;&lt;br&gt;很可惜这是一道权限题.&lt;/p&gt;
    
    </summary>
    
      <category term="Solution" scheme="http://yoursite.com/categories/Solution/"/>
    
    
      <category term="最短路" scheme="http://yoursite.com/tags/%E6%9C%80%E7%9F%AD%E8%B7%AF/"/>
    
      <category term="几何" scheme="http://yoursite.com/tags/%E5%87%A0%E4%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>Atcoder2134 Zigzag MST</title>
    <link href="http://yoursite.com/2019/03/01/AT2134/"/>
    <id>http://yoursite.com/2019/03/01/AT2134/</id>
    <published>2019-03-01T08:56:36.000Z</published>
    <updated>2019-03-01T11:15:22.739Z</updated>
    
    <content type="html"><![CDATA[<h2 id="传送门"><a href="#传送门" class="headerlink" title="传送门"></a>传送门</h2><p><a href="https://cf16-final.contest.atcoder.jp/tasks/codefestival_2016_final_g?lang=en" target="_blank" rel="noopener">Atcoder</a></p><h2 id="题目翻译"><a href="#题目翻译" class="headerlink" title="题目翻译"></a>题目翻译</h2><p>给出n个点,编号为0~n-1.</p><p>现在给出Q个加边操作,每一次的系数为$a,b,c$.</p><p>每一次可以插入无限条边,插入规则大致是:$(Ai,Bi,Ci)(Bi,Ai+1,Ci+1),(Ai+1,Bi+1,Ci+2)$等等,求给定图的最小生成树.</p><a id="more"></a><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="引入-假"><a href="#引入-假" class="headerlink" title="引入(假)"></a>引入(假)</h3><p>在写题目之前先插播一条广告:<br><a href="https://lydsy.com/JudgeOnline/wttl/thread.php?tid=6620" target="_blank" rel="noopener">有么有人资磁yyb小姐姐和zsy小哥哥在一起啊</a><del>萝卜你应该要给我广告费</del></p><h3 id="引入-真"><a href="#引入-真" class="headerlink" title="引入(真)"></a>引入(真)</h3><p>如果现在有这样两条边摆在你面前:<br>$(a,b,x)和(b,c,y)$<br>我们知道$x&lt;y$,那么$(b,c,y)$就可以转换为$(a,c,y)$<br>画一个图来深刻理解一下:<br><img src="https://s2.ax1x.com/2019/03/01/kHv1cq.png" alt="kHv1cq.png"><br><img src="https://s2.ax1x.com/2019/03/01/kHvl3n.png" alt="kHvl3n.png"><br><strong>其实这两个是等价的!</strong></p><h3 id="关于本题"><a href="#关于本题" class="headerlink" title="关于本题"></a>关于本题</h3><p>我们发现它的连边真心鬼畜,按照上面的那个什么替换一下?<br>$(a,b,c)与(b,a+1,c+1)$<br>emmm,这不就是<br>$(a,b,c)与(a,a+1,c+1)$<br>那么我们每一条限制就变成了一堆相邻的边的权值了.<br>当然,注意$(a,b,c)$并没有消失!!!<br>现在问题转换成如何快速求出每一条边的最小权值!<br>注意到$a-&gt;a+1$和$b-&gt;b+1$一定是最小的两条边权,那么后面的一定会用它们更新!<br>于是我们先把$a,b$的权值给赋上,然后按照顺序扫一遍就可以了.<br>最后一个容易咕的地方就是:<br>每次的贡献应当是$+2$而不是$+1$,因为它是两边同时进行.</p><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> file(a) freopen(a<span class="meta-string">".in"</span>,<span class="meta-string">"r"</span>,stdin);freopen(a<span class="meta-string">".out"</span>,<span class="meta-string">"w"</span>,stdout)</span></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">gi</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> f=<span class="number">1</span>,sum=<span class="number">0</span>;<span class="keyword">char</span> ch=getchar();</span><br><span class="line"><span class="keyword">while</span>(ch&gt;<span class="string">'9'</span> || ch&lt;<span class="string">'0'</span>)&#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)f=<span class="number">-1</span>;ch=getchar();&#125;</span><br><span class="line"><span class="keyword">while</span>(ch&gt;=<span class="string">'0'</span> &amp;&amp; ch&lt;=<span class="string">'9'</span>)&#123;sum=(sum&lt;&lt;<span class="number">3</span>)+(sum&lt;&lt;<span class="number">1</span>)+ch-<span class="string">'0'</span>;ch=getchar();&#125;</span><br><span class="line"><span class="keyword">return</span> f*sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">400010</span>;</span><br><span class="line"><span class="keyword">int</span> val[N],n,q,cnt,f[N];</span><br><span class="line">ll ans;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> u,v,w;</span><br><span class="line"><span class="keyword">bool</span> <span class="keyword">operator</span>&lt;(<span class="keyword">const</span> node&amp;b)<span class="keyword">const</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> w&lt;b.w;</span><br><span class="line">&#125;</span><br><span class="line">&#125;e[N&lt;&lt;<span class="number">1</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(f[x]!=x)f[x]=find(f[x]);</span><br><span class="line"><span class="keyword">return</span> f[x];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">n=gi();q=gi();</span><br><span class="line"><span class="built_in">memset</span>(val,<span class="number">127</span>,<span class="keyword">sizeof</span>(val));</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=q;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> a=gi(),b=gi(),c=gi();</span><br><span class="line">e[++cnt]=(node)&#123;a,b,c&#125;;</span><br><span class="line">val[a]=min(val[a],c+<span class="number">1</span>);</span><br><span class="line">val[b]=min(val[b],c+<span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> pos=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)<span class="keyword">if</span>(val[pos]&gt;val[i])pos=i;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=(pos+<span class="number">1</span>)%n,j=pos;i!=pos;j=i,i=(i+<span class="number">1</span>)%n)</span><br><span class="line">val[i]=min(val[i],val[j]+<span class="number">2</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n<span class="number">-1</span>;i++)</span><br><span class="line">e[++cnt]=(node)&#123;i,i+<span class="number">1</span>,val[i]&#125;;</span><br><span class="line">e[++cnt]=(node)&#123;n<span class="number">-1</span>,<span class="number">0</span>,val[n<span class="number">-1</span>]&#125;;</span><br><span class="line">sort(e+<span class="number">1</span>,e+cnt+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)f[i]=i;</span><br><span class="line"><span class="keyword">int</span> k=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cnt;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> u=e[i].u,v=e[i].v;</span><br><span class="line"><span class="keyword">if</span>(find(u)!=find(v))</span><br><span class="line">&#123;</span><br><span class="line">ans+=e[i].w,f[find(u)]=find(v);</span><br><span class="line">k++;</span><br><span class="line"><span class="keyword">if</span>(k==n<span class="number">-1</span>)<span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;传送门&quot;&gt;&lt;a href=&quot;#传送门&quot; class=&quot;headerlink&quot; title=&quot;传送门&quot;&gt;&lt;/a&gt;传送门&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://cf16-final.contest.atcoder.jp/tasks/codefestival_2016_final_g?lang=en&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Atcoder&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;题目翻译&quot;&gt;&lt;a href=&quot;#题目翻译&quot; class=&quot;headerlink&quot; title=&quot;题目翻译&quot;&gt;&lt;/a&gt;题目翻译&lt;/h2&gt;&lt;p&gt;给出n个点,编号为0~n-1.&lt;/p&gt;
&lt;p&gt;现在给出Q个加边操作,每一次的系数为$a,b,c$.&lt;/p&gt;
&lt;p&gt;每一次可以插入无限条边,插入规则大致是:$(Ai,Bi,Ci)(Bi,Ai+1,Ci+1),(Ai+1,Bi+1,Ci+2)$等等,求给定图的最小生成树.&lt;/p&gt;
    
    </summary>
    
      <category term="Solution" scheme="http://yoursite.com/categories/Solution/"/>
    
    
      <category term="并查集" scheme="http://yoursite.com/tags/%E5%B9%B6%E6%9F%A5%E9%9B%86/"/>
    
      <category term="Kruscal" scheme="http://yoursite.com/tags/Kruscal/"/>
    
      <category term="Trick" scheme="http://yoursite.com/tags/Trick/"/>
    
      <category term="图论" scheme="http://yoursite.com/tags/%E5%9B%BE%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>CodeForces891C Envy</title>
    <link href="http://yoursite.com/2019/03/01/CodeForces891C/"/>
    <id>http://yoursite.com/2019/03/01/CodeForces891C/</id>
    <published>2019-03-01T08:33:40.000Z</published>
    <updated>2019-03-01T08:57:52.003Z</updated>
    
    <content type="html"><![CDATA[<h2 id="传送门"><a href="#传送门" class="headerlink" title="传送门"></a>传送门</h2><p><a href="http://codeforces.com/problemset/problem/891/C" target="_blank" rel="noopener">CodeForces</a></p><h2 id="题目翻译"><a href="#题目翻译" class="headerlink" title="题目翻译"></a>题目翻译</h2><p>给你n个节点,m条边以及q条询问.<br>每一次询问有k条边,询问这k条边能否都在MST上.<br>可以就输出”YES”,否则输出”NO”.</p><a id="more"></a><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>这是一个翻遍全网都无法找到的新型题解!<del>(至少在2019.3月份之前找不到)</del><br>我们考虑最小生成树的一个性质:</p><ul><li>加入完相同的边权后连通性是一样的.</li></ul><p>证明:</p><ol><li>考虑按照各种顺序排序,如果某一条边不会与其他的一同加入而产生环,那么显然他是一定会被加入的</li><li>如果有冲突,那么这些边的加入顺序就不重要了,因为他们一定会构成一个环少一条边.</li></ol><p>那么利用这个性质,我们很容易做出来这道题目.</p><p>对于每一条边,假设它是一个三元组(u,v,w).</p><p>维护一个(uu,vv)表示加入完所有的$w’$&lt;$w$的边后的$u$所在的联通块和$v$所在的联通块.</p><p>我们考虑不能够插入的情况:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find(uu)==find(vv)</span><br></pre></td></tr></table></figure><p>那么只需要扫一遍所有的边,然后如果有不行的就直接输出”NO”,最后输出”YES”就好了.</p><p>当然跑的时候是需要维护连通性的(就是还是要加边!).</p><p>还原并查集数组的话可以把(uu,vv)当成是关键点,所以只需要改变这一些点的fa就可以了.</p><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> file(a) freopen(a<span class="meta-string">".in"</span>,<span class="meta-string">"r"</span>,stdin);freopen(a<span class="meta-string">".out"</span>,<span class="meta-string">"w"</span>,stdout)</span></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">gi</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> f=<span class="number">1</span>,sum=<span class="number">0</span>;<span class="keyword">char</span> ch=getchar();</span><br><span class="line"><span class="keyword">while</span>(ch&gt;<span class="string">'9'</span> || ch&lt;<span class="string">'0'</span>)&#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)f=<span class="number">-1</span>;ch=getchar();&#125;</span><br><span class="line"><span class="keyword">while</span>(ch&gt;=<span class="string">'0'</span> &amp;&amp; ch&lt;=<span class="string">'9'</span>)&#123;sum=(sum&lt;&lt;<span class="number">3</span>)+(sum&lt;&lt;<span class="number">1</span>)+ch-<span class="string">'0'</span>;ch=getchar();&#125;</span><br><span class="line"><span class="keyword">return</span> f*sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">500010</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> u,v,w,uu,vv,id;</span><br><span class="line"><span class="keyword">bool</span> <span class="keyword">operator</span>&lt;(<span class="keyword">const</span> node&amp;b)<span class="keyword">const</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> w&lt;b.w;</span><br><span class="line">&#125;</span><br><span class="line">&#125;e[N],a[N];</span><br><span class="line"><span class="keyword">int</span> f[N],n,m,q,c[N],id[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(f[x]!=x)f[x]=find(f[x]);</span><br><span class="line"><span class="keyword">return</span> f[x];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> ONLINE_JUDGE</span></span><br><span class="line">freopen(<span class="string">"in.in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">freopen(<span class="string">"out.out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">n=gi();m=gi();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">&#123;</span><br><span class="line">e[i].u=gi(),e[i].v=gi(),e[i].w=gi();</span><br><span class="line">e[i].id=i;</span><br><span class="line">&#125;</span><br><span class="line">sort(e+<span class="number">1</span>,e+m+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">id[e[i].id]=i;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)f[i]=i;</span><br><span class="line"><span class="keyword">int</span> last=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(e[i].w!=e[i<span class="number">-1</span>].w)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=last;j&lt;i;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> u=find(e[j].u),v=find(e[j].v);</span><br><span class="line"><span class="keyword">if</span>(u!=v)f[v]=u;</span><br><span class="line">&#125;</span><br><span class="line">last=i;</span><br><span class="line">&#125;</span><br><span class="line">e[i].uu=find(e[i].u);</span><br><span class="line">e[i].vv=find(e[i].v);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=last;j&lt;=m;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> u=find(e[j].u),v=find(e[j].v);</span><br><span class="line"><span class="keyword">if</span>(u!=v)f[v]=u;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//for(int i=1;i&lt;=m;i++)</span></span><br><span class="line"><span class="comment">//printf("%d %d %d %d %d\n",e[i].u,e[i].v,e[i].w,e[i].uu,e[i].vv);</span></span><br><span class="line">q=gi();</span><br><span class="line"><span class="keyword">while</span>(q--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> k=gi(),sta=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k;i++)</span><br><span class="line">c[i]=gi();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k;i++)</span><br><span class="line">&#123;</span><br><span class="line">a[++sta]=e[id[c[i]]];</span><br><span class="line">f[a[sta].uu]=a[sta].uu;</span><br><span class="line">f[a[sta].vv]=a[sta].vv;</span><br><span class="line">&#125;</span><br><span class="line">sort(a+<span class="number">1</span>,a+sta+<span class="number">1</span>);<span class="keyword">int</span> flag=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=sta;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> u=a[i].uu,v=a[i].vv;</span><br><span class="line"><span class="keyword">if</span>(find(u)==find(v))</span><br><span class="line">&#123;</span><br><span class="line">flag=<span class="number">1</span>;<span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//if(!q)printf("%d %d %d %d\n",u,v,find(u),find(v));</span></span><br><span class="line">f[find(u)]=find(v);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(flag)<span class="built_in">puts</span>(<span class="string">"NO"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"YES"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;传送门&quot;&gt;&lt;a href=&quot;#传送门&quot; class=&quot;headerlink&quot; title=&quot;传送门&quot;&gt;&lt;/a&gt;传送门&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/891/C&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;CodeForces&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;题目翻译&quot;&gt;&lt;a href=&quot;#题目翻译&quot; class=&quot;headerlink&quot; title=&quot;题目翻译&quot;&gt;&lt;/a&gt;题目翻译&lt;/h2&gt;&lt;p&gt;给你n个节点,m条边以及q条询问.&lt;br&gt;每一次询问有k条边,询问这k条边能否都在MST上.&lt;br&gt;可以就输出”YES”,否则输出”NO”.&lt;/p&gt;
    
    </summary>
    
      <category term="Solution" scheme="http://yoursite.com/categories/Solution/"/>
    
    
      <category term="并查集" scheme="http://yoursite.com/tags/%E5%B9%B6%E6%9F%A5%E9%9B%86/"/>
    
      <category term="Kruscal" scheme="http://yoursite.com/tags/Kruscal/"/>
    
      <category term="Trick" scheme="http://yoursite.com/tags/Trick/"/>
    
      <category term="图论" scheme="http://yoursite.com/tags/%E5%9B%BE%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>HAOI2007 覆盖问题</title>
    <link href="http://yoursite.com/2019/03/01/BZOJ1052/"/>
    <id>http://yoursite.com/2019/03/01/BZOJ1052/</id>
    <published>2019-03-01T03:59:34.000Z</published>
    <updated>2019-03-01T04:02:35.754Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>小清新思维题.</p><p>最近肯定需要一些思维题挽救我这种碰到题目只会模板的菜鸡.</p><p>这题腾空出世?</p><a id="more"></a><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>考虑一下我们二分答案怎么做?</p><p>首先转换一下,将这些点用一个尽可能小的矩形全部覆盖.</p><p>那么我们求的三个正方形一定会与这一些边有交.</p><p>然后前两个正方形直接看是和哪一个角相交.最后一个因为只剩下一个正方形,判断可行性即可.</p><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> file(a) freopen(a<span class="meta-string">".in"</span>,<span class="meta-string">"r"</span>,stdin);freopen(a<span class="meta-string">".out"</span>,<span class="meta-string">"w"</span>,stdout)</span></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">gi</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> f=<span class="number">1</span>,sum=<span class="number">0</span>;<span class="keyword">char</span> ch=getchar();</span><br><span class="line"><span class="keyword">while</span>(ch&gt;<span class="string">'9'</span> || ch&lt;<span class="string">'0'</span>)&#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)f=<span class="number">-1</span>;ch=getchar();&#125;</span><br><span class="line"><span class="keyword">while</span>(ch&gt;=<span class="string">'0'</span> &amp;&amp; ch&lt;=<span class="string">'9'</span>)&#123;sum=(sum&lt;&lt;<span class="number">3</span>)+(sum&lt;&lt;<span class="number">1</span>)+ch-<span class="string">'0'</span>;ch=getchar();&#125;</span><br><span class="line"><span class="keyword">return</span> f*sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf=<span class="number">1e9</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">data</span>&#123;</span><span class="keyword">int</span> x[<span class="number">20010</span>],y[<span class="number">20010</span>],top;&#125;;</span><br><span class="line"><span class="keyword">int</span> mid;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">cut</span><span class="params">(data &amp;a,<span class="keyword">int</span> x1,<span class="keyword">int</span> y1,<span class="keyword">int</span> x2,<span class="keyword">int</span> y2)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> tot=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=a.top;i++)</span><br><span class="line"><span class="keyword">if</span>(a.x[i]&lt;x1||a.x[i]&gt;x2||a.y[i]&lt;y1||a.y[i]&gt;y2)</span><br><span class="line">&#123;</span><br><span class="line">tot++;</span><br><span class="line">a.x[tot]=a.x[i];</span><br><span class="line">a.y[tot]=a.y[i];</span><br><span class="line">&#125;</span><br><span class="line">a.top=tot;</span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">(data &amp;a,<span class="keyword">int</span> fc)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> x1=inf,y1=inf,x2=-inf,y2=-inf;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=a.top;i++)</span><br><span class="line">&#123;</span><br><span class="line">x1=min(a.x[i],x1),x2=max(a.x[i],x2);</span><br><span class="line">y1=min(a.y[i],y1),y2=max(a.y[i],y2);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(fc==<span class="number">1</span>)</span><br><span class="line">cut(a,x1,y1,x1+mid,y1+mid);</span><br><span class="line"><span class="keyword">if</span>(fc==<span class="number">2</span>)</span><br><span class="line">cut(a,x2-mid,y1,x2,y1+mid);</span><br><span class="line"><span class="keyword">if</span>(fc==<span class="number">3</span>)</span><br><span class="line">cut(a,x1,y2-mid,x1+mid,y2);</span><br><span class="line"><span class="keyword">if</span>(fc==<span class="number">4</span>)</span><br><span class="line">cut(a,x2-mid,y2-mid,x2,y2);</span><br><span class="line">&#125;</span><br><span class="line">data a;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">jud</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">data b;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> x=<span class="number">1</span>;x&lt;=<span class="number">4</span>;x++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> y=<span class="number">1</span>;y&lt;=<span class="number">4</span>;y++)</span><br><span class="line">&#123;</span><br><span class="line">b.top=a.top;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=b.top;i++)</span><br><span class="line">b.x[i]=a.x[i],b.y[i]=a.y[i];</span><br><span class="line">solve(b,x);solve(b,y);</span><br><span class="line">    <span class="keyword">int</span> x1=inf,y1=inf,x2=-inf,y2=-inf;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=b.top;i++)</span><br><span class="line">&#123;</span><br><span class="line">x1=min(b.x[i],x1),x2=max(b.x[i],x2);</span><br><span class="line">y1=min(b.y[i],y1),y2=max(b.y[i],y2);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(x2-x1&lt;=mid&amp;&amp;y2-y1&lt;=mid)<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n=gi();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)a.x[i]=gi(),a.y[i]=gi();</span><br><span class="line">a.top=n;</span><br><span class="line"><span class="keyword">int</span> l=<span class="number">1</span>,r=inf,ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(l&lt;=r)&#123;</span><br><span class="line">mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(jud())&#123;r=mid<span class="number">-1</span>;ans=mid;&#125;</span><br><span class="line"><span class="keyword">else</span> l=mid+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;小清新思维题.&lt;/p&gt;
&lt;p&gt;最近肯定需要一些思维题挽救我这种碰到题目只会模板的菜鸡.&lt;/p&gt;
&lt;p&gt;这题腾空出世?&lt;/p&gt;
    
    </summary>
    
      <category term="Solution" scheme="http://yoursite.com/categories/Solution/"/>
    
    
      <category term="二分答案" scheme="http://yoursite.com/tags/%E4%BA%8C%E5%88%86%E7%AD%94%E6%A1%88/"/>
    
      <category term="贪心" scheme="http://yoursite.com/tags/%E8%B4%AA%E5%BF%83/"/>
    
  </entry>
  
  <entry>
    <title>HAOI2006 数字序列</title>
    <link href="http://yoursite.com/2019/03/01/BZOJ1049/"/>
    <id>http://yoursite.com/2019/03/01/BZOJ1049/</id>
    <published>2019-03-01T03:58:09.000Z</published>
    <updated>2019-03-01T04:02:13.754Z</updated>
    
    <content type="html"><![CDATA[<p>dp好题?</p><h2 id="第一问"><a href="#第一问" class="headerlink" title="第一问"></a>第一问</h2><p>第一问我会做!令$b_i=a_i-i$,求一个最长不下降子序列.</p><p>$n-ans$就是最终的答案.</p><h2 id="第二问"><a href="#第二问" class="headerlink" title="第二问"></a>第二问</h2><p>好难啊.不会.挖坑待补.</p><p>考虑一下对于一个i~j的可能符合情况,定然存在一个$k$在i~k之中为$a_i$,k~j之中为$a_j$.</p><p>然后就可以dp了.</p><p>这个转移比较玄学.如果不随机就GG了.</p><p><img src="https://s2.ax1x.com/2019/01/24/kZ43tO.png" alt="随机的证明"></p><a id="more"></a><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> file(a) freopen(a<span class="meta-string">".in"</span>,<span class="meta-string">"r"</span>,stdin);freopen(a<span class="meta-string">".out"</span>,<span class="meta-string">"w"</span>,stdout)</span></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">gi</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> f=<span class="number">1</span>,sum=<span class="number">0</span>;<span class="keyword">char</span> ch=getchar();</span><br><span class="line"><span class="keyword">while</span>(ch&gt;<span class="string">'9'</span> || ch&lt;<span class="string">'0'</span>)&#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)f=<span class="number">-1</span>;ch=getchar();&#125;</span><br><span class="line"><span class="keyword">while</span>(ch&gt;=<span class="string">'0'</span> &amp;&amp; ch&lt;=<span class="string">'9'</span>)&#123;sum=(sum&lt;&lt;<span class="number">3</span>)+(sum&lt;&lt;<span class="number">1</span>)+ch-<span class="string">'0'</span>;ch=getchar();&#125;</span><br><span class="line"><span class="keyword">return</span> f*sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">50010</span>;</span><br><span class="line"><span class="keyword">int</span> a[N],n,L,cnt,mn[N],f[N],front[N],to[N&lt;&lt;<span class="number">2</span>],nxt[N&lt;&lt;<span class="number">2</span>];</span><br><span class="line">ll g[N],s1[N],s2[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> l=<span class="number">1</span>,r=L,t=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(l&lt;=r)&#123;</span><br><span class="line"><span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(mn[mid]&lt;=x)t=mid,l=mid+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> r=mid<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dp</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(mn,<span class="number">127</span>,<span class="keyword">sizeof</span>(mn));</span><br><span class="line">mn[<span class="number">0</span>]=-(<span class="number">1</span>&lt;&lt;<span class="number">30</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> q=find(a[i]);</span><br><span class="line">f[i]=q+<span class="number">1</span>;</span><br><span class="line">L=max(L,f[i]);</span><br><span class="line">mn[q+<span class="number">1</span>]=min(mn[q+<span class="number">1</span>],a[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v)</span></span>&#123;</span><br><span class="line">to[++cnt]=v;nxt[cnt]=front[u];front[u]=cnt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=n;~i;i--)&#123;</span><br><span class="line">Add(f[i],i);</span><br><span class="line">g[i]=<span class="number">1l</span>l&lt;&lt;<span class="number">60</span>;</span><br><span class="line">&#125;</span><br><span class="line">g[<span class="number">0</span>]=<span class="number">0</span>;a[<span class="number">0</span>]=-(<span class="number">1</span>&lt;&lt;<span class="number">30</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> u=<span class="number">1</span>;u&lt;=n;u++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=front[f[u]<span class="number">-1</span>];i;i=nxt[i])&#123;</span><br><span class="line"><span class="keyword">int</span> v=to[i];</span><br><span class="line"><span class="keyword">if</span>(v&gt;u)<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">if</span>(a[v]&gt;a[u])<span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=v;j&lt;=u;j++)s1[j]=<span class="built_in">abs</span>(a[v]-a[j]),s2[j]=<span class="built_in">abs</span>(a[u]-a[j]);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=v+<span class="number">1</span>;j&lt;=u;j++)</span><br><span class="line">s1[j]+=s1[j<span class="number">-1</span>],s2[j]+=s2[j<span class="number">-1</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=v;j&lt;u;j++)</span><br><span class="line">g[u]=min(g[u],g[v]+s1[j]-s1[v]+s2[u]-s2[j]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">n=gi();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)a[i]=gi()-i;</span><br><span class="line">a[++n]=<span class="number">1</span>&lt;&lt;<span class="number">30</span>;</span><br><span class="line">dp();solve();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n%lld\n"</span>,n-f[n],g[n]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;dp好题?&lt;/p&gt;
&lt;h2 id=&quot;第一问&quot;&gt;&lt;a href=&quot;#第一问&quot; class=&quot;headerlink&quot; title=&quot;第一问&quot;&gt;&lt;/a&gt;第一问&lt;/h2&gt;&lt;p&gt;第一问我会做!令$b_i=a_i-i$,求一个最长不下降子序列.&lt;/p&gt;
&lt;p&gt;$n-ans$就是最终的答案.&lt;/p&gt;
&lt;h2 id=&quot;第二问&quot;&gt;&lt;a href=&quot;#第二问&quot; class=&quot;headerlink&quot; title=&quot;第二问&quot;&gt;&lt;/a&gt;第二问&lt;/h2&gt;&lt;p&gt;好难啊.不会.挖坑待补.&lt;/p&gt;
&lt;p&gt;考虑一下对于一个i~j的可能符合情况,定然存在一个$k$在i~k之中为$a_i$,k~j之中为$a_j$.&lt;/p&gt;
&lt;p&gt;然后就可以dp了.&lt;/p&gt;
&lt;p&gt;这个转移比较玄学.如果不随机就GG了.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://s2.ax1x.com/2019/01/24/kZ43tO.png&quot; alt=&quot;随机的证明&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Solution" scheme="http://yoursite.com/categories/Solution/"/>
    
    
      <category term="dp" scheme="http://yoursite.com/tags/dp/"/>
    
  </entry>
  
  <entry>
    <title>欢迎来到我的博客</title>
    <link href="http://yoursite.com/2019/02/28/Welcome%20To%20My%20Blog/"/>
    <id>http://yoursite.com/2019/02/28/Welcome To My Blog/</id>
    <published>2019-02-28T07:00:00.000Z</published>
    <updated>2019-02-28T23:46:50.054Z</updated>
    
    <content type="html"><![CDATA[<p>欢迎来到我的hexo博客!</p><a id="more"></a><p>emmm,我也不知道自己有多少博客,但是这一次一定是最后一个了.</p><p>希望能够开的很久吧.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;欢迎来到我的hexo博客!&lt;/p&gt;
    
    </summary>
    
      <category term="其他" scheme="http://yoursite.com/categories/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="介绍" scheme="http://yoursite.com/tags/%E4%BB%8B%E7%BB%8D/"/>
    
  </entry>
  
</feed>
